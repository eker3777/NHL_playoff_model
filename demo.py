#!/usr/bin/env python3
"""
NHL Playoff Prediction System - Demo Script

This script demonstrates the capabilities of the NHL Playoff Prediction System.
"""

import sys
import os

# Add the current directory to the Python path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def show_system_info():
    """Display system information and capabilities"""
    print("üèí NHL Playoff Prediction System")
    print("=" * 50)
    print()
    
    print("üìä CAPABILITIES:")
    print("‚Ä¢ Data Integration: NHL API + MoneyPuck advanced stats")
    print("‚Ä¢ Machine Learning: Ensemble models (Logistic Regression + XGBoost)")
    print("‚Ä¢ Visualizations: 4 professional chart types")
    print("‚Ä¢ Reporting: Comprehensive markdown reports")
    print("‚Ä¢ Season Support: Configurable for any NHL season")
    print()
    
    print("üéØ OUTPUT GENERATED:")
    print("‚Ä¢ Executive summary with key findings")
    print("‚Ä¢ Playoff predictions with confidence scores")
    print("‚Ä¢ Statistical analysis and team comparisons")
    print("‚Ä¢ Professional visualizations with team colors")
    print("‚Ä¢ Complete team statistics and methodology")
    print()

def show_generated_files():
    """Show files generated by the system"""
    print("üìÅ GENERATED FILES:")
    print("=" * 30)
    
    reports_dir = "reports"
    if os.path.exists(reports_dir):
        files = os.listdir(reports_dir)
        for file in sorted(files):
            if file.endswith('.md'):
                size = os.path.getsize(os.path.join(reports_dir, file))
                print(f"üìÑ {file} ({size:,} bytes)")
            elif file.endswith('.png'):
                size = os.path.getsize(os.path.join(reports_dir, file))
                print(f"üìä {file} ({size:,} bytes)")
    
    data_dir = "data"
    if os.path.exists(data_dir):
        files = [f for f in os.listdir(data_dir) if f.endswith('.csv')]
        for file in sorted(files):
            size = os.path.getsize(os.path.join(data_dir, file))
            print(f"üìà {file} ({size:,} bytes)")
    print()

def show_sample_analysis():
    """Show sample analysis from generated report"""
    print("üéØ SAMPLE ANALYSIS:")
    print("=" * 30)
    
    report_path = "reports/NHL_Playoff_Report_20242025.md"
    if os.path.exists(report_path):
        with open(report_path, 'r') as f:
            lines = f.readlines()
        
        # Extract key sections
        in_predictions = False
        in_standings = False
        prediction_count = 0
        
        for line in lines:
            # Show standings leaders
            if "League Leader" in line:
                print(f"üèÜ {line.strip()}")
            elif "Top Offense" in line:
                print(f"‚ö° {line.strip()}")
            elif "Best Defense" in line:
                print(f"üõ°Ô∏è  {line.strip()}")
            
            # Show prediction sample
            elif "| Matchup |" in line and not in_predictions:
                in_predictions = True
                continue
            elif in_predictions and "|" in line and prediction_count < 3:
                parts = line.split("|")
                if len(parts) >= 4:
                    matchup = parts[1].strip()
                    prob = parts[2].strip()
                    print(f"ü•Ö {matchup}: {prob}")
                    prediction_count += 1
            elif in_predictions and prediction_count >= 3:
                break
    
    print()

def show_usage_examples():
    """Show usage examples"""
    print("üíª USAGE EXAMPLES:")
    print("=" * 30)
    print()
    print("# Generate predictions for current season:")
    print("python main.py")
    print()
    print("# Generate predictions for specific season:")
    print("python main.py 2024")
    print()
    print("# Run interactive Streamlit app:")
    print("streamlit run streamlit_app/main.py")
    print()

def main():
    """Main demo function"""
    print()
    show_system_info()
    show_generated_files()
    show_sample_analysis()
    show_usage_examples()
    
    print("üöÄ READY FOR EMPLOYER PRESENTATION!")
    print("=" * 50)
    print("This system demonstrates:")
    print("‚Ä¢ Advanced data science and machine learning skills")
    print("‚Ä¢ Professional software architecture and documentation") 
    print("‚Ä¢ Domain expertise in sports analytics")
    print("‚Ä¢ Production-ready code with error handling")
    print("‚Ä¢ Automated reporting and visualization capabilities")
    print()

if __name__ == "__main__":
    main()