{
  "app.py": {
    "functions": {
      "apply_custom_styling": {
        "params": [],
        "defaults": {},
        "docstring": "Apply custom styling to the application",
        "line_number": 49,
        "end_line": 61
      },
      "initialize_session_state": {
        "params": [],
        "defaults": {},
        "docstring": "Initialize session state variables",
        "line_number": 64,
        "end_line": 82
      },
      "display_sidebar": {
        "params": [],
        "defaults": {},
        "docstring": "Display sidebar navigation and app information",
        "line_number": 85,
        "end_line": 157
      },
      "ensure_folders_exist": {
        "params": [],
        "defaults": {},
        "docstring": "Ensure all required data folders exist",
        "line_number": 160,
        "end_line": 164
      },
      "main": {
        "params": [],
        "defaults": {},
        "docstring": "Main application entry point",
        "line_number": 167,
        "end_line": 236
      }
    },
    "calls": {
      "st.set_page_config": [
        {
          "args": [],
          "kwargs": {
            "page_title": "<value>",
            "page_icon": "<value>",
            "layout": "<value>",
            "initial_sidebar_state": "<value>"
          },
          "line_number": 41
        }
      ],
      "st.markdown": [
        {
          "args": [
            "custom_css"
          ],
          "kwargs": {
            "unsafe_allow_html": "<value>"
          },
          "line_number": 61
        }
      ],
      "title": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 87
        }
      ],
      "markdown": [
        {
          "args": [
            "'---'"
          ],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [
            "'---'"
          ],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [
            "'---'"
          ],
          "kwargs": {},
          "line_number": 151
        }
      ],
      "radio": [
        {
          "args": [
            "'Navigation'",
            "<complex-arg>"
          ],
          "kwargs": {
            "format_func": "<value>",
            "index": "<value>"
          },
          "line_number": 104
        }
      ],
      "subheader": [
        {
          "args": [
            "'Data Controls'"
          ],
          "kwargs": {},
          "line_number": 113
        }
      ],
      "get_cache_status": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 116
        }
      ],
      "get_next_refresh_time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 126
        }
      ],
      "button": [
        {
          "args": [
            "'Refresh Data Now'"
          ],
          "kwargs": {},
          "line_number": 131
        }
      ],
      "info": [
        {
          "args": [
            "'\\n        Created by: [Your Name](https://github.com/yourusername)  \\n        [GitHub Repository]({GITHUB_URL})\\n        '"
          ],
          "kwargs": {},
          "line_number": 152
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 121
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 128
        }
      ],
      "apply_custom_styling": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 170
        }
      ],
      "initialize_session_state": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 173
        }
      ],
      "ensure_folders_exist": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 176
        }
      ],
      "display_sidebar": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 179
        }
      ],
      "main": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 240
        }
      ],
      "pages.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 107
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 106
        }
      ],
      "warning": [
        {
          "args": [
            "'Data not yet loaded'"
          ],
          "kwargs": {},
          "line_number": 123
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "folder"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 164
        }
      ],
      "should_refresh_data": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 183
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Refreshing data...'"
          ],
          "kwargs": {},
          "line_number": 132
        },
        {
          "args": [
            "'Updating NHL data...'"
          ],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [
            "'Loading team data...'"
          ],
          "kwargs": {},
          "line_number": 193
        }
      ],
      "st.error": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 198
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "'See details below:'"
          ],
          "kwargs": {},
          "line_number": 231
        }
      ],
      "show_first_round": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 208
        }
      ],
      "st.code": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 232
        }
      ],
      "index": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 106
        }
      ],
      "update_daily_data": [
        {
          "args": [
            "DATA_FOLDER",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 138
        },
        {
          "args": [
            "DATA_FOLDER",
            "current_season",
            "season_str"
          ],
          "kwargs": {},
          "line_number": 189
        }
      ],
      "load_team_data": [
        {
          "args": [
            "DATA_FOLDER"
          ],
          "kwargs": {},
          "line_number": 194
        }
      ],
      "open": [
        {
          "args": [
            "<complex-arg>",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "<complex-arg>",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 235
        },
        {
          "args": [
            "<complex-arg>",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 147
        }
      ],
      "f.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "show_simulation_results": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 212
        }
      ],
      "traceback.format_exc": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "last_refresh.strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M'"
          ],
          "kwargs": {},
          "line_number": 121
        }
      ],
      "next_refresh.strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M'"
          ],
          "kwargs": {},
          "line_number": 128
        }
      ],
      "success": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 141
        }
      ],
      "error": [
        {
          "args": [
            "'Data refresh failed'"
          ],
          "kwargs": {},
          "line_number": 143
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 145
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 185
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 185
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 185
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 134
        }
      ],
      "join": [
        {
          "args": [
            "DATA_FOLDER",
            "'error_log.txt'"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "DATA_FOLDER",
            "'error_log.txt'"
          ],
          "kwargs": {},
          "line_number": 235
        },
        {
          "args": [
            "DATA_FOLDER",
            "'error_log.txt'"
          ],
          "kwargs": {},
          "line_number": 147
        }
      ],
      "show_head_to_head": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 216
        }
      ],
      "list": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 106
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 198
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 145
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "show_bracket_simulation": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 220
        }
      ],
      "isoformat": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "show_about": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 224
        }
      ],
      "strftime": [
        {
          "args": [
            "'%H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 141
        }
      ],
      "show_debug": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 228
        }
      ],
      "get_eastern_time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        }
      ]
    }
  },
  "tests/test_validation.py": {
    "functions": {
      "create_test_dataframe": {
        "params": [],
        "defaults": {},
        "docstring": "Create a test dataframe with known issues for validation testing",
        "line_number": 14,
        "end_line": 27
      },
      "test_validation": {
        "params": [],
        "defaults": {},
        "docstring": "Test the validation functions",
        "line_number": 29,
        "end_line": 68
      }
    },
    "calls": {
      "append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 11
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 11
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 11
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 17
        }
      ],
      "print": [
        {
          "args": [
            "'Testing data validation functions...'"
          ],
          "kwargs": {},
          "line_number": 31
        },
        {
          "args": [
            "'\\n1. Basic validation:'"
          ],
          "kwargs": {},
          "line_number": 37
        },
        {
          "args": [
            "'\\n2. Validation with critical columns:'"
          ],
          "kwargs": {},
          "line_number": 42
        },
        {
          "args": [
            "'\\n3. Pre-merge validation:'"
          ],
          "kwargs": {},
          "line_number": 48
        },
        {
          "args": [
            "'\\n4. Pre-model validation:'"
          ],
          "kwargs": {},
          "line_number": 53
        },
        {
          "args": [
            "'\\n5. Testing validate_and_fix:'"
          ],
          "kwargs": {},
          "line_number": 58
        },
        {
          "args": [
            "'\\nOriginal vs. Fixed dataframe:'"
          ],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 63
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 66
        },
        {
          "args": [
            "'\\nTest completed!'"
          ],
          "kwargs": {},
          "line_number": 68
        }
      ],
      "create_test_dataframe": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 34
        }
      ],
      "validate_data_quality": [
        {
          "args": [
            "df"
          ],
          "kwargs": {},
          "line_number": 38
        },
        {
          "args": [
            "df",
            "critical_cols"
          ],
          "kwargs": {},
          "line_number": 44
        },
        {
          "args": [
            "df",
            "None",
            "'pre-merge'"
          ],
          "kwargs": {},
          "line_number": 49
        },
        {
          "args": [
            "df",
            "None",
            "'pre-model'"
          ],
          "kwargs": {},
          "line_number": 54
        }
      ],
      "print_validation_report": [
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 45
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 50
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 55
        }
      ],
      "validate_and_fix": [
        {
          "args": [
            "df"
          ],
          "kwargs": {},
          "line_number": 59
        }
      ],
      "test_validation": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 71
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 11
        }
      ],
      "tolist": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 63
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 66
        }
      ]
    }
  },
  "tests/__init__.py": {
    "functions": {},
    "calls": {}
  },
  "streamlit_app/__init__.py": {
    "functions": {},
    "calls": {}
  },
  "streamlit_app/config.py": {
    "functions": {},
    "calls": {
      "pytz.timezone": [
        {
          "args": [
            "'US/Eastern'"
          ],
          "kwargs": {},
          "line_number": 14
        }
      ],
      "time": [
        {
          "args": [
            "5",
            "0",
            "0"
          ],
          "kwargs": {},
          "line_number": 15
        }
      ]
    }
  },
  "streamlit_app/components/__init__.py": {
    "functions": {},
    "calls": {}
  },
  "streamlit_app/utils/validation_utils.py": {
    "functions": {
      "check_data_quality": {
        "params": [
          "df",
          "validation_type",
          "critical_columns"
        ],
        "defaults": {
          "validation_type": "general",
          "critical_columns": null
        },
        "docstring": "Check the quality of a DataFrame and display issues in Streamlit\n\nArgs:\n    df: DataFrame to validate\n    validation_type: Type of validation to perform\n    critical_columns: List of columns that must be present and non-null\n    \nReturns:\n    Tuple of (fixed_dataframe, validation_passed)",
        "line_number": 12,
        "end_line": 53
      },
      "display_validation_metrics": {
        "params": [
          "validation_report"
        ],
        "defaults": {},
        "docstring": "Display validation metrics as a Streamlit UI component\n\nArgs:\n    validation_report: Validation report from get_validation_report",
        "line_number": 55,
        "end_line": 87
      },
      "validate_matchup_data": {
        "params": [
          "matchup_df",
          "show_ui"
        ],
        "defaults": {
          "show_ui": true
        },
        "docstring": "Validate matchup data used for model predictions\n\nArgs:\n    matchup_df: DataFrame with matchup data\n    show_ui: Whether to display Streamlit UI components\n    \nReturns:\n    Tuple of (fixed_dataframe, validation_passed)",
        "line_number": 89,
        "end_line": 153
      },
      "validate_model_compatibility": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Validate compatibility between matchup data and model requirements.\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information\n    \nReturns:\n    dict: Validation report with issues and recommendations",
        "line_number": 155,
        "end_line": 221
      },
      "get_model_feature_importance": {
        "params": [
          "models"
        ],
        "defaults": {},
        "docstring": "Extract feature importance information from loaded models.\n\nArgs:\n    models: Dictionary with model information\n    \nReturns:\n    dict: Feature importance by model",
        "line_number": 223,
        "end_line": 273
      }
    },
    "calls": {
      "validate_and_fix": [
        {
          "args": [
            "df",
            "validation_type",
            "critical_columns"
          ],
          "kwargs": {},
          "line_number": 29
        },
        {
          "args": [
            "matchup_df",
            "'pre-model'",
            "critical_cols"
          ],
          "kwargs": {},
          "line_number": 118
        }
      ],
      "sum": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 68
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 69
        }
      ],
      "st.columns": [
        {
          "args": [
            "4"
          ],
          "kwargs": {},
          "line_number": 72
        }
      ],
      "st.caption": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 87
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 180
        }
      ],
      "st.error": [
        {
          "args": [
            "'No data available for validation'"
          ],
          "kwargs": {},
          "line_number": 25
        },
        {
          "args": [
            "'No validation report available'"
          ],
          "kwargs": {},
          "line_number": 63
        },
        {
          "args": [
            "'No matchup data available for validation'"
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 45
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 146
        }
      ],
      "st.success": [
        {
          "args": [
            "'Data validation passed with no issues'"
          ],
          "kwargs": {},
          "line_number": 33
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 127
        }
      ],
      "st.warning": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 137
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 47
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "st.metric": [
        {
          "args": [
            "'Overall Status'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 75
        },
        {
          "args": [
            "'Critical Issues'",
            "critical"
          ],
          "kwargs": {},
          "line_number": 78
        },
        {
          "args": [
            "'High Severity'",
            "high"
          ],
          "kwargs": {},
          "line_number": 81
        },
        {
          "args": [
            "'Medium Severity'",
            "medium"
          ],
          "kwargs": {},
          "line_number": 84
        }
      ],
      "len": [
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "feature_cols"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "required_features"
          ],
          "kwargs": {},
          "line_number": 206
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 207
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "required_features"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "feature_cols"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "feature_cols"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "append": [
        {
          "args": [
            "'No models available'"
          ],
          "kwargs": {},
          "line_number": 176
        },
        {
          "args": [
            "'No valid model objects found'"
          ],
          "kwargs": {},
          "line_number": 186
        },
        {
          "args": [
            "model_name"
          ],
          "kwargs": {},
          "line_number": 182
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 195
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 214
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 219
        }
      ],
      "st.expander": [
        {
          "args": [
            "'Show validation issues'"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "'Show missing features'"
          ],
          "kwargs": {},
          "line_number": 133
        },
        {
          "args": [
            "'Show validation issues'"
          ],
          "kwargs": {},
          "line_number": 140
        }
      ],
      "st.info": [
        {
          "args": [
            "'The issues above were automatically fixed where possible'"
          ],
          "kwargs": {},
          "line_number": 51
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 49
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 150
        }
      ],
      "isinstance": [
        {
          "args": [
            "model_data",
            "dict"
          ],
          "kwargs": {},
          "line_number": 181
        }
      ],
      "hasattr": [
        {
          "args": [
            "lr_model",
            "'coef_'"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "lr_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "xgb_model",
            "'feature_importances_'"
          ],
          "kwargs": {},
          "line_number": 258
        },
        {
          "args": [
            "xgb_model",
            "'feature_names_'"
          ],
          "kwargs": {},
          "line_number": 258
        }
      ],
      "list": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 264
        }
      ],
      "feature_importance.sort": [
        {
          "args": [],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 247
        },
        {
          "args": [],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 265
        }
      ],
      "zip": [
        {
          "args": [
            "features",
            "coeffs"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "features",
            "importances"
          ],
          "kwargs": {},
          "line_number": 264
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 252
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 270
        }
      ],
      "st.text": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 135
        }
      ],
      "abs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 247
        }
      ]
    }
  },
  "streamlit_app/utils/visualization_utils.py": {
    "functions": {
      "create_nhl_cmap": {
        "params": [],
        "defaults": {},
        "docstring": "Create an NHL-themed colormap (blue to white to red).",
        "line_number": 8,
        "end_line": 15
      },
      "create_comparison_metrics": {
        "params": [],
        "defaults": {},
        "docstring": "Create dictionary of metric sets for team comparisons.\n\nReturns:\n    Dict with predefined metric sets",
        "line_number": 17,
        "end_line": 51
      },
      "get_valid_metrics": {
        "params": [
          "team_data",
          "metric_set"
        ],
        "defaults": {},
        "docstring": "Filter metrics to only include those available in the dataset.\n\nArgs:\n    team_data (DataFrame): Team stats DataFrame\n    metric_set (list): List of (display_name, column_name) tuples to filter\n    \nReturns:\n    List of valid metrics",
        "line_number": 53,
        "end_line": 67
      },
      "format_percentage": {
        "params": [
          "value"
        ],
        "defaults": {},
        "docstring": "Format a decimal value as a percentage string.\n\nArgs:\n    value (float): Value to format\n    \nReturns:\n    str: Formatted percentage",
        "line_number": 69,
        "end_line": 78
      },
      "create_scatter_comparison": {
        "params": [
          "team_data",
          "x_metric",
          "y_metric",
          "x_label",
          "y_label",
          "highlight_teams"
        ],
        "defaults": {
          "x_label": null,
          "y_label": null,
          "highlight_teams": null
        },
        "docstring": "Create a scatter plot comparing two metrics across all teams.\n\nArgs:\n    team_data (DataFrame): Team data\n    x_metric (str): Column name for x-axis\n    y_metric (str): Column name for y-axis\n    x_label (str): Label for x-axis (defaults to x_metric)\n    y_label (str): Label for y-axis (defaults to y_metric)\n    highlight_teams (list): List of teams to highlight",
        "line_number": 80,
        "end_line": 130
      },
      "plot_wins_by_round": {
        "params": [
          "results_df",
          "team_abbrev"
        ],
        "defaults": {},
        "docstring": "Plot stacked bar chart showing team's progression through rounds.\n\nArgs:\n    results_df (DataFrame): Simulation results DataFrame\n    team_abbrev (str): Team abbreviation to plot",
        "line_number": 132,
        "end_line": 171
      },
      "calculate_win_percentages": {
        "params": [
          "data",
          "team_col",
          "win_col",
          "games_col"
        ],
        "defaults": {
          "team_col": "teamAbbrev",
          "win_col": "wins",
          "games_col": "gamesPlayed"
        },
        "docstring": "Calculate win percentages for teams based on wins and games played.\n\nArgs:\n    data: DataFrame with team data\n    team_col: Name of the team identifier column\n    win_col: Name of the wins column\n    games_col: Name of the games played column\n    \nReturns:\n    DataFrame with additional win percentage column",
        "line_number": 192,
        "end_line": 215
      },
      "normalize_data": {
        "params": [
          "data",
          "columns",
          "method"
        ],
        "defaults": {
          "method": "minmax"
        },
        "docstring": "Normalize selected columns in a DataFrame.\n\nArgs:\n    data: DataFrame with data to normalize\n    columns: List of column names to normalize\n    method: Normalization method ('minmax' or 'zscore')\n    \nReturns:\n    DataFrame with normalized columns",
        "line_number": 217,
        "end_line": 253
      },
      "calculate_matchup_stats": {
        "params": [
          "series_results"
        ],
        "defaults": {},
        "docstring": "Calculate summary statistics for matchup results.\n\nArgs:\n    series_results: Dictionary containing series simulation results\n    \nReturns:\n    Dictionary with calculated statistics",
        "line_number": 255,
        "end_line": 291
      },
      "create_polar_comparison_chart": {
        "params": [
          "team1_data",
          "team2_data",
          "team1_name",
          "team2_name",
          "team1_color",
          "team2_color"
        ],
        "defaults": {
          "team1_color": "#1f77b4",
          "team2_color": "#ff7f0e"
        },
        "docstring": "Create a polar (radar) chart comparing two teams.\n\nArgs:\n    team1_data: Dictionary of metrics for team 1\n    team2_data: Dictionary of metrics for team 2\n    team1_name: Name of team 1\n    team2_name: Name of team 2\n    team1_color: Color for team 1\n    team2_color: Color for team 2\n    \nReturns:\n    Plotly figure object",
        "line_number": 297,
        "end_line": 359
      },
      "create_win_probability_timeline": {
        "params": [
          "win_probs",
          "team1_name",
          "team2_name",
          "team1_color",
          "team2_color"
        ],
        "defaults": {
          "team1_color": "#1f77b4",
          "team2_color": "#ff7f0e"
        },
        "docstring": "Create a timeline chart showing win probability changes.\n\nArgs:\n    win_probs: List of win probabilities for team 1\n    team1_name: Name of team 1\n    team2_name: Name of team 2\n    team1_color: Color for team 1\n    team2_color: Color for team 2\n    \nReturns:\n    Plotly figure object",
        "line_number": 361,
        "end_line": 426
      },
      "create_series_outcome_chart": {
        "params": [
          "win_distribution",
          "team1_name",
          "team2_name",
          "team1_color",
          "team2_color"
        ],
        "defaults": {
          "team1_color": "#1f77b4",
          "team2_color": "#ff7f0e"
        },
        "docstring": "Create a chart showing the probability of each series outcome.\n\nArgs:\n    win_distribution: Dictionary with series outcome counts\n    team1_name: Name of team 1 (higher seed)\n    team2_name: Name of team 2 (lower seed)\n    team1_color: Color for team 1\n    team2_color: Color for team 2\n    \nReturns:\n    Plotly figure object",
        "line_number": 428,
        "end_line": 499
      },
      "create_bracket_visual": {
        "params": [
          "bracket_data"
        ],
        "defaults": {},
        "docstring": "Create a visual representation of a playoff bracket.\n\nArgs:\n    bracket_data: Dictionary containing bracket progression data\n    \nReturns:\n    Plotly figure object",
        "line_number": 501,
        "end_line": 625
      },
      "create_team_performance_dashboard": {
        "params": [
          "team_data",
          "team_abbrev",
          "season"
        ],
        "defaults": {},
        "docstring": "Create a dashboard of visualizations for team performance.\n\nArgs:\n    team_data: DataFrame with team statistics\n    team_abbrev: Team abbreviation to focus on\n    season: Season identifier\n    \nReturns:\n    Dictionary of named Plotly figures",
        "line_number": 631,
        "end_line": 711
      },
      "create_advancement_probability_timeline": {
        "params": [
          "sim_results_over_time",
          "selected_teams"
        ],
        "defaults": {
          "selected_teams": null
        },
        "docstring": "Create a timeline chart showing how advancement probabilities changed over time.\n\nArgs:\n    sim_results_over_time: List of DataFrames with simulation results at different times\n    selected_teams: List of team abbreviations to include (limits to top 8 if None)\n    \nReturns:\n    Plotly figure object",
        "line_number": 713,
        "end_line": 775
      },
      "create_series_simulation_display": {
        "params": [
          "series_results"
        ],
        "defaults": {},
        "docstring": "Process series simulation results into display components.\n\nArgs:\n    series_results: Dictionary containing series simulation results\n    \nReturns:\n    Dictionary with processed display components",
        "line_number": 777,
        "end_line": 834
      },
      "display_team_header": {
        "params": [
          "team_info",
          "logo_column"
        ],
        "defaults": {
          "logo_column": null
        },
        "docstring": "Display a team header with logo and key information.\n\nArgs:\n    team_info: Dictionary with team information\n    logo_column: Optional Streamlit column for logo placement",
        "line_number": 840,
        "end_line": 879
      },
      "display_simulation_summary": {
        "params": [
          "sim_results",
          "detailed"
        ],
        "defaults": {
          "detailed": false
        },
        "docstring": "Display a summary of simulation results.\n\nArgs:\n    sim_results: Dictionary with simulation results\n    detailed: Whether to show detailed information",
        "line_number": 881,
        "end_line": 936
      },
      "interactive_matchup_selector": {
        "params": [
          "team_data"
        ],
        "defaults": {},
        "docstring": "Create an interactive selector for team matchups.\n\nArgs:\n    team_data: DataFrame with team information\n    \nReturns:\n    Tuple of selected team abbreviations",
        "line_number": 938,
        "end_line": 999
      }
    },
    "calls": {
      "use": [
        {
          "args": [
            "'seaborn-v0_8-whitegrid'"
          ],
          "kwargs": {},
          "line_number": 184
        }
      ],
      "sns.set_style": [
        {
          "args": [
            "'whitegrid'"
          ],
          "kwargs": {},
          "line_number": 185
        }
      ],
      "sns.set_palette": [
        {
          "args": [
            "'colorblind'"
          ],
          "kwargs": {},
          "line_number": 186
        }
      ],
      "LinearSegmentedColormap.from_list": [
        {
          "args": [
            "'nhl_cmap'",
            "colors"
          ],
          "kwargs": {
            "N": "<value>"
          },
          "line_number": 15
        }
      ],
      "plt.subplots": [
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 98
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 154
        }
      ],
      "ax.scatter": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "color": "<value>",
            "alpha": "<value>",
            "s": "<value>"
          },
          "line_number": 101
        },
        {
          "args": [
            "x_val",
            "y_val"
          ],
          "kwargs": {
            "color": "<value>",
            "s": "<value>",
            "zorder": "<value>"
          },
          "line_number": 112
        }
      ],
      "team_data.iterrows": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 105
        }
      ],
      "ax.set_xlabel": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 120
        }
      ],
      "ax.set_ylabel": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 121
        },
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 169
        }
      ],
      "ax.set_title": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 124
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 168
        }
      ],
      "ax.axhline": [
        {
          "args": [],
          "kwargs": {
            "y": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 127
        }
      ],
      "ax.axvline": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 128
        }
      ],
      "ax.bar": [
        {
          "args": [
            "round_names",
            "probs"
          ],
          "kwargs": {},
          "line_number": 157
        }
      ],
      "ax.set_ylim": [
        {
          "args": [
            "0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 167
        }
      ],
      "data.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 209
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 232
        }
      ],
      "sorted": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "go.Figure": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 325
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 385
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 479
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 516
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 655
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 667
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 679
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 736
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 699
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 322
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 449
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 513
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 727
        }
      ],
      "fig.add_trace": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 328
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 338
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 388
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 398
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 481
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 759
        }
      ],
      "fig.update_layout": [
        {
          "args": [],
          "kwargs": {
            "polar": "<value>",
            "showlegend": "<value>",
            "title": "<value>"
          },
          "line_number": 348
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "xaxis_title": "<value>",
            "yaxis_title": "<value>",
            "yaxis": "<value>",
            "hovermode": "<value>"
          },
          "line_number": 408
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "xaxis_title": "<value>",
            "yaxis_title": "<value>",
            "yaxis": "<value>",
            "showlegend": "<value>"
          },
          "line_number": 491
        },
        {
          "args": [],
          "kwargs": {
            "showlegend": "<value>",
            "plot_bgcolor": "<value>",
            "height": "<value>",
            "xaxis": "<value>",
            "yaxis": "<value>"
          },
          "line_number": 607
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "xaxis_title": "<value>",
            "yaxis_title": "<value>",
            "hovermode": "<value>"
          },
          "line_number": 768
        }
      ],
      "list": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 380
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 739
        }
      ],
      "fig.add_shape": [
        {
          "args": [],
          "kwargs": {
            "type": "<value>",
            "x0": "<value>",
            "y0": "<value>",
            "x1": "<value>",
            "y1": "<value>",
            "line": "<value>"
          },
          "line_number": 417
        },
        {
          "args": [],
          "kwargs": {
            "type": "<value>",
            "x0": "<value>",
            "y0": "<value>",
            "x1": "<value>",
            "y1": "<value>",
            "line": "<value>"
          },
          "line_number": 571
        }
      ],
      "sum": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 447
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 270
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 277
        }
      ],
      "len": [
        {
          "args": [
            "rounds"
          ],
          "kwargs": {},
          "line_number": 520
        },
        {
          "args": [
            "win_probs"
          ],
          "kwargs": {},
          "line_number": 380
        },
        {
          "args": [
            "sim_results_over_time"
          ],
          "kwargs": {},
          "line_number": 726
        },
        {
          "args": [
            "sim_results_over_time"
          ],
          "kwargs": {},
          "line_number": 739
        },
        {
          "args": [
            "matchups"
          ],
          "kwargs": {},
          "line_number": 538
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 567
        }
      ],
      "enumerate": [
        {
          "args": [
            "rounds"
          ],
          "kwargs": {},
          "line_number": 524
        },
        {
          "args": [
            "rounds"
          ],
          "kwargs": {},
          "line_number": 581
        },
        {
          "args": [
            "matchups"
          ],
          "kwargs": {},
          "line_number": 532
        }
      ],
      "win_loss_fig.update_layout": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 661
        }
      ],
      "goals_fig.add_trace": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 668
        }
      ],
      "goals_fig.update_layout": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 673
        }
      ],
      "home_away_fig.add_trace": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 680
        }
      ],
      "home_away_fig.update_layout": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "yaxis": "<value>"
          },
          "line_number": 688
        }
      ],
      "series_results.get": [
        {
          "args": [
            "'top_seed'",
            "''"
          ],
          "kwargs": {},
          "line_number": 794
        },
        {
          "args": [
            "'bottom_seed'",
            "''"
          ],
          "kwargs": {},
          "line_number": 795
        },
        {
          "args": [
            "'win_probability'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 796
        },
        {
          "args": [
            "'win_distribution'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 797
        },
        {
          "args": [
            "'ci_lower'",
            "0"
          ],
          "kwargs": {},
          "line_number": 821
        },
        {
          "args": [
            "'ci_upper'",
            "0"
          ],
          "kwargs": {},
          "line_number": 822
        }
      ],
      "calculate_matchup_stats": [
        {
          "args": [
            "series_results"
          ],
          "kwargs": {},
          "line_number": 800
        }
      ],
      "plot_win_probability_gauge": [
        {
          "args": [
            "win_probability",
            "top_seed",
            "bottom_seed"
          ],
          "kwargs": {},
          "line_number": 805
        }
      ],
      "create_series_outcome_chart": [
        {
          "args": [
            "win_distribution",
            "top_seed",
            "bottom_seed"
          ],
          "kwargs": {},
          "line_number": 813
        }
      ],
      "team_info.get": [
        {
          "args": [
            "'teamName'",
            "'Unknown Team'"
          ],
          "kwargs": {},
          "line_number": 851
        },
        {
          "args": [
            "'points'",
            "0"
          ],
          "kwargs": {},
          "line_number": 853
        },
        {
          "args": [
            "'teamLogo'",
            "''"
          ],
          "kwargs": {},
          "line_number": 854
        },
        {
          "args": [
            "'wins'",
            "0"
          ],
          "kwargs": {},
          "line_number": 852
        },
        {
          "args": [
            "'losses'",
            "0"
          ],
          "kwargs": {},
          "line_number": 852
        },
        {
          "args": [
            "'otLosses'",
            "0"
          ],
          "kwargs": {},
          "line_number": 852
        },
        {
          "args": [
            "'wins'",
            "0"
          ],
          "kwargs": {},
          "line_number": 657
        },
        {
          "args": [
            "'losses'",
            "0"
          ],
          "kwargs": {},
          "line_number": 657
        },
        {
          "args": [
            "'otLosses'",
            "0"
          ],
          "kwargs": {},
          "line_number": 657
        },
        {
          "args": [
            "'teamName'",
            "team_abbrev"
          ],
          "kwargs": {},
          "line_number": 662
        },
        {
          "args": [
            "'goalFor'",
            "0"
          ],
          "kwargs": {},
          "line_number": 670
        },
        {
          "args": [
            "'goalAgainst'",
            "0"
          ],
          "kwargs": {},
          "line_number": 670
        },
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 864
        },
        {
          "args": [
            "'homeWins'",
            "0"
          ],
          "kwargs": {},
          "line_number": 683
        },
        {
          "args": [
            "'homeGamesPlayed'",
            "1"
          ],
          "kwargs": {},
          "line_number": 683
        },
        {
          "args": [
            "'roadWins'",
            "0"
          ],
          "kwargs": {},
          "line_number": 684
        },
        {
          "args": [
            "'roadGamesPlayed'",
            "1"
          ],
          "kwargs": {},
          "line_number": 684
        }
      ],
      "st.markdown": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 867
        }
      ],
      "st.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 868
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "unsafe_allow_html": "<value>"
          },
          "line_number": 874
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 879
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Playoff Simulation Summary'"
          ],
          "kwargs": {},
          "line_number": 898
        },
        {
          "args": [
            "'Team 1'"
          ],
          "kwargs": {},
          "line_number": 966
        },
        {
          "args": [
            "'Team 2'"
          ],
          "kwargs": {},
          "line_number": 975
        },
        {
          "args": [
            "'Potential Second Round Matchups'"
          ],
          "kwargs": {},
          "line_number": 927
        },
        {
          "args": [
            "'Potential Conference Finals'"
          ],
          "kwargs": {},
          "line_number": 931
        },
        {
          "args": [
            "'Potential Stanley Cup Finals'"
          ],
          "kwargs": {},
          "line_number": 935
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 864
        }
      ],
      "team_advancement.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 901
        }
      ],
      "st.dataframe": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 913
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 928
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 932
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 936
        }
      ],
      "team_data.sort_values": [
        {
          "args": [
            "'teamName'"
          ],
          "kwargs": {},
          "line_number": 959
        }
      ],
      "tolist": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 960
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 733
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 981
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 982
        }
      ],
      "st.columns": [
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 963
        }
      ],
      "st.warning": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 94
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 143
        },
        {
          "args": [
            "'No simulation results available.'"
          ],
          "kwargs": {},
          "line_number": 891
        }
      ],
      "bar.get_height": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 161
        }
      ],
      "ax.text": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>"
          },
          "line_number": 162
        },
        {
          "args": [
            "x_val",
            "y_val",
            "team_abbr"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "ha": "<value>",
            "va": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 113
        },
        {
          "args": [
            "x_val",
            "y_val",
            "team_abbr"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "ha": "<value>",
            "va": "<value>",
            "alpha": "<value>"
          },
          "line_number": 116
        }
      ],
      "round": [
        {
          "args": [
            "3"
          ],
          "kwargs": {},
          "line_number": 213
        }
      ],
      "intersection": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "update_layout": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 322
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 449
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 513
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 727
        }
      ],
      "go.Scatterpolar": [
        {
          "args": [],
          "kwargs": {
            "r": "<value>",
            "theta": "<value>",
            "fill": "<value>",
            "name": "<value>",
            "line_color": "<value>",
            "fillcolor": "<value>"
          },
          "line_number": 328
        },
        {
          "args": [],
          "kwargs": {
            "r": "<value>",
            "theta": "<value>",
            "fill": "<value>",
            "name": "<value>",
            "line_color": "<value>",
            "fillcolor": "<value>"
          },
          "line_number": 338
        }
      ],
      "range": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 380
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 739
        }
      ],
      "go.Scatter": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "mode": "<value>",
            "name": "<value>",
            "line": "<value>",
            "marker": "<value>"
          },
          "line_number": 388
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "mode": "<value>",
            "name": "<value>",
            "line": "<value>",
            "marker": "<value>"
          },
          "line_number": 398
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "mode": "<value>",
            "name": "<value>",
            "hovertemplate": "<value>"
          },
          "line_number": 759
        }
      ],
      "win_distribution.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 447
        }
      ],
      "outcomes.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 462
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 473
        }
      ],
      "probabilities.append": [
        {
          "args": [
            "probability"
          ],
          "kwargs": {},
          "line_number": 463
        },
        {
          "args": [
            "probability"
          ],
          "kwargs": {},
          "line_number": 474
        }
      ],
      "colors.append": [
        {
          "args": [
            "team1_color"
          ],
          "kwargs": {},
          "line_number": 464
        },
        {
          "args": [
            "team2_color"
          ],
          "kwargs": {},
          "line_number": 475
        }
      ],
      "hover_texts.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 465
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 476
        }
      ],
      "go.Bar": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "marker_color": "<value>",
            "text": "<value>",
            "textposition": "<value>",
            "hovertext": "<value>"
          },
          "line_number": 481
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "marker_color": "<value>"
          },
          "line_number": 668
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "marker_color": "<value>"
          },
          "line_number": 680
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "marker_color": "<value>"
          },
          "line_number": 700
        }
      ],
      "round_data.get": [
        {
          "args": [
            "'name'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 525
        },
        {
          "args": [
            "'matchups'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 526
        },
        {
          "args": [
            "'name'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 582
        }
      ],
      "fig.add_annotation": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "font": "<value>"
          },
          "line_number": 585
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "font": "<value>"
          },
          "line_number": 598
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "font": "<value>"
          },
          "line_number": 542
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "font": "<value>"
          },
          "line_number": 551
        }
      ],
      "get": [
        {
          "args": [
            "'matchups'"
          ],
          "kwargs": {},
          "line_number": 594
        },
        {
          "args": [
            "'champion'",
            "0"
          ],
          "kwargs": {},
          "line_number": 749
        }
      ],
      "final_matchup.get": [
        {
          "args": [
            "'winner'",
            "''"
          ],
          "kwargs": {},
          "line_number": 596
        }
      ],
      "go.Pie": [
        {
          "args": [],
          "kwargs": {
            "labels": "<value>",
            "values": "<value>",
            "hole": "<value>",
            "marker": "<value>"
          },
          "line_number": 655
        }
      ],
      "special_teams_fig.add_trace": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 700
        }
      ],
      "special_teams_fig.update_layout": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "yaxis": "<value>"
          },
          "line_number": 705
        }
      ],
      "head": [
        {
          "args": [
            "10"
          ],
          "kwargs": {},
          "line_number": 913
        },
        {
          "args": [
            "5"
          ],
          "kwargs": {},
          "line_number": 928
        },
        {
          "args": [
            "5"
          ],
          "kwargs": {},
          "line_number": 932
        },
        {
          "args": [
            "5"
          ],
          "kwargs": {},
          "line_number": 936
        },
        {
          "args": [
            "8"
          ],
          "kwargs": {},
          "line_number": 733
        }
      ],
      "sim_results.get": [
        {
          "args": [
            "'n_simulations'",
            "10000"
          ],
          "kwargs": {},
          "line_number": 920
        }
      ],
      "plot_bracket_simulation_summary": [
        {
          "args": [
            "bracket_data",
            "n_sims"
          ],
          "kwargs": {},
          "line_number": 922
        }
      ],
      "st.error": [
        {
          "args": [
            "'No team data available'"
          ],
          "kwargs": {},
          "line_number": 949
        },
        {
          "args": [
            "'Team data missing required columns'"
          ],
          "kwargs": {},
          "line_number": 955
        }
      ],
      "all": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 954
        }
      ],
      "st.selectbox": [
        {
          "args": [
            "'Select first team'",
            "team_options"
          ],
          "kwargs": {
            "index": "<value>",
            "key": "<value>"
          },
          "line_number": 967
        },
        {
          "args": [
            "'Select second team'",
            "team2_options"
          ],
          "kwargs": {
            "index": "<value>",
            "key": "<value>"
          },
          "line_number": 988
        }
      ],
      "same_conf_teams.remove": [
        {
          "args": [
            "selected_team1"
          ],
          "kwargs": {},
          "line_number": 983
        }
      ],
      "median": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 128
        }
      ],
      "max": [
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 167
        },
        {
          "args": [
            "time_points"
          ],
          "kwargs": {},
          "line_number": 421
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 239
        },
        {
          "args": [
            "probabilities"
          ],
          "kwargs": {},
          "line_number": 495
        }
      ],
      "dist.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 270
        }
      ],
      "set": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "dict": [
        {
          "args": [],
          "kwargs": {
            "radialaxis": "<value>"
          },
          "line_number": 349
        },
        {
          "args": [],
          "kwargs": {
            "range": "<value>"
          },
          "line_number": 412
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "width": "<value>",
            "dash": "<value>"
          },
          "line_number": 423
        },
        {
          "args": [],
          "kwargs": {
            "range": "<value>"
          },
          "line_number": 495
        },
        {
          "args": [],
          "kwargs": {
            "showgrid": "<value>",
            "zeroline": "<value>",
            "visible": "<value>",
            "range": "<value>"
          },
          "line_number": 611
        },
        {
          "args": [],
          "kwargs": {
            "showgrid": "<value>",
            "zeroline": "<value>",
            "visible": "<value>",
            "range": "<value>"
          },
          "line_number": 617
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "range": "<value>"
          },
          "line_number": 690
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "width": "<value>"
          },
          "line_number": 393
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>"
          },
          "line_number": 394
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "width": "<value>"
          },
          "line_number": 403
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>"
          },
          "line_number": 404
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>"
          },
          "line_number": 590
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>"
          },
          "line_number": 603
        },
        {
          "args": [],
          "kwargs": {
            "colors": "<value>"
          },
          "line_number": 659
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "range": "<value>"
          },
          "line_number": 707
        },
        {
          "args": [],
          "kwargs": {
            "visible": "<value>",
            "range": "<value>"
          },
          "line_number": 350
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>"
          },
          "line_number": 547
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>",
            "color": "<value>"
          },
          "line_number": 556
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "width": "<value>"
          },
          "line_number": 577
        }
      ],
      "min": [
        {
          "args": [
            "time_points"
          ],
          "kwargs": {},
          "line_number": 419
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 238
        }
      ],
      "int": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 459
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 459
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 469
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 469
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 277
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 277
        },
        {
          "args": [
            "<complex-arg>",
            "16"
          ],
          "kwargs": {},
          "line_number": 334
        },
        {
          "args": [
            "<complex-arg>",
            "16"
          ],
          "kwargs": {},
          "line_number": 344
        }
      ],
      "matchup.get": [
        {
          "args": [
            "'winner'",
            "''"
          ],
          "kwargs": {},
          "line_number": 533
        },
        {
          "args": [
            "'loser'",
            "''"
          ],
          "kwargs": {},
          "line_number": 534
        },
        {
          "args": [
            "'score'",
            "''"
          ],
          "kwargs": {},
          "line_number": 535
        }
      ],
      "isinstance": [
        {
          "args": [
            "<complex-arg>",
            "str"
          ],
          "kwargs": {},
          "line_number": 696
        },
        {
          "args": [
            "<complex-arg>",
            "str"
          ],
          "kwargs": {},
          "line_number": 697
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 696
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 697
        }
      ],
      "load_team_logo": [
        {
          "args": [
            "team_logo_url"
          ],
          "kwargs": {},
          "line_number": 859
        }
      ],
      "map": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 906
        }
      ],
      "bar.get_x": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 162
        }
      ],
      "team2_data.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "win_distribution.get": [
        {
          "args": [
            "outcome",
            "0"
          ],
          "kwargs": {},
          "line_number": 460
        },
        {
          "args": [
            "outcome",
            "0"
          ],
          "kwargs": {},
          "line_number": 471
        }
      ],
      "next_round.get": [
        {
          "args": [
            "'matchups'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 563
        }
      ],
      "strip": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 696
        },
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 697
        }
      ],
      "team_probs.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 749
        },
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 753
        }
      ],
      "stats.get": [
        {
          "args": [
            "'avg_series_length'",
            "0"
          ],
          "kwargs": {},
          "line_number": 828
        },
        {
          "args": [
            "'sweep_probability'",
            "0"
          ],
          "kwargs": {},
          "line_number": 829
        },
        {
          "args": [
            "'game7_probability'",
            "0"
          ],
          "kwargs": {},
          "line_number": 830
        }
      ],
      "st.image": [
        {
          "args": [
            "logo_img"
          ],
          "kwargs": {
            "width": "<value>"
          },
          "line_number": 861
        }
      ],
      "bar.get_width": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 162
        }
      ],
      "mean": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 246
        }
      ],
      "std": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 247
        }
      ],
      "dist.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 274
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 277
        }
      ],
      "dist.get": [
        {
          "args": [
            "'4-0'",
            "0"
          ],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [
            "'0-4'",
            "0"
          ],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [
            "'4-3'",
            "0"
          ],
          "kwargs": {},
          "line_number": 283
        },
        {
          "args": [
            "'3-4'",
            "0"
          ],
          "kwargs": {},
          "line_number": 283
        }
      ],
      "team1_data.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "index": [
        {
          "args": [
            "next_match"
          ],
          "kwargs": {},
          "line_number": 566
        }
      ],
      "tuple": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 334
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 344
        }
      ],
      "next_match.get": [
        {
          "args": [
            "'winner'",
            "''"
          ],
          "kwargs": {},
          "line_number": 564
        },
        {
          "args": [
            "'loser'",
            "''"
          ],
          "kwargs": {},
          "line_number": 564
        }
      ],
      "latest_results.sort_values": [
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 733
        }
      ],
      "team1_color.lstrip": [
        {
          "args": [
            "'#'"
          ],
          "kwargs": {},
          "line_number": 334
        }
      ],
      "team2_color.lstrip": [
        {
          "args": [
            "'#'"
          ],
          "kwargs": {},
          "line_number": 344
        }
      ]
    }
  },
  "streamlit_app/utils/data_validation.py": {
    "functions": {
      "validate_data_quality": {
        "params": [
          "df",
          "critical_columns",
          "validation_type"
        ],
        "defaults": {
          "critical_columns": null,
          "validation_type": "general"
        },
        "docstring": "Validate data quality and return a comprehensive report.\n\nArgs:\n    df: DataFrame to validate\n    critical_columns: List of columns that must be present and valid\n    validation_type: Type of validation to perform (general, pre-merge, pre-model)\n    \nReturns:\n    dict: Validation report with issues and metrics",
        "line_number": 12,
        "end_line": 108
      },
      "print_validation_report": {
        "params": [
          "report"
        ],
        "defaults": {},
        "docstring": "Print a formatted validation report.\n\nArgs:\n    report: Validation report from validate_data_quality()",
        "line_number": 110,
        "end_line": 132
      },
      "validate_and_fix": {
        "params": [
          "df",
          "validation_type",
          "critical_columns"
        ],
        "defaults": {
          "validation_type": "general",
          "critical_columns": null
        },
        "docstring": "Validate and fix data issues in a DataFrame.\n\nArgs:\n    df: DataFrame to validate\n    validation_type: Type of validation to perform (\"general\", \"pre-merge\", \"pre-model\", etc.)\n    critical_columns: List of columns that must be present and non-null\n    \nReturns:\n    Tuple of (fixed_dataframe, validation_report)",
        "line_number": 327,
        "end_line": 414
      },
      "get_validation_report": {
        "params": [
          "df",
          "validation_type",
          "critical_columns"
        ],
        "defaults": {
          "validation_type": "general",
          "critical_columns": null
        },
        "docstring": "Generate a validation report for a DataFrame without modifying it.\n\nArgs:\n    df: DataFrame to validate\n    validation_type: Type of validation to perform (\"general\", \"pre-merge\", \"pre-model\", etc.)\n    critical_columns: List of columns that must be present and non-null\n    \nReturns:\n    Dict with validation results including issues found",
        "line_number": 181,
        "end_line": 325
      }
    },
    "calls": {
      "tolist": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 107
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 116
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 117
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 119
        },
        {
          "args": [
            "'\\nIssues:'"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "'\\nNo issues detected!'"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "'\\nColumns with null values:'"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 124
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 132
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 176
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 168
        }
      ],
      "df.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 146
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 340
        }
      ],
      "validate_data_quality": [
        {
          "args": [
            "fixed_df",
            "critical_columns",
            "validation_type"
          ],
          "kwargs": {},
          "line_number": 149
        }
      ],
      "print_validation_report": [
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 152
        }
      ],
      "sum": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 232
        }
      ],
      "get_validation_report": [
        {
          "args": [
            "fixed_df",
            "validation_type",
            "critical_columns"
          ],
          "kwargs": {},
          "line_number": 343
        },
        {
          "args": [
            "fixed_df",
            "validation_type",
            "critical_columns"
          ],
          "kwargs": {},
          "line_number": 412
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 27
        }
      ],
      "append": [
        {
          "args": [
            "'DataFrame is empty'"
          ],
          "kwargs": {},
          "line_number": 35
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 43
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 101
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "'Missing too many model features for reliable prediction'"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 77
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 80
        }
      ],
      "key_cols.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 86
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 173
        }
      ],
      "enumerate": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 123
        }
      ],
      "issues.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 198
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 212
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 234
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 223
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 301
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 314
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 247
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 282
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 257
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 265
        }
      ],
      "is_numeric_dtype": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 161
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 372
        }
      ],
      "sorted": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 130
        }
      ],
      "any": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 221
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 46
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 366
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 373
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 388
        }
      ],
      "col.endswith": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 309
        }
      ],
      "len": [
        {
          "args": [
            "issues"
          ],
          "kwargs": {},
          "line_number": 322
        },
        {
          "args": [
            "non_null_values"
          ],
          "kwargs": {},
          "line_number": 66
        },
        {
          "args": [
            "missing_features"
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "non_null_values"
          ],
          "kwargs": {},
          "line_number": 163
        },
        {
          "args": [
            "model_features"
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 408
        }
      ],
      "mean": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 48
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 367
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 374
        }
      ],
      "nan_pcts.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 52
        }
      ],
      "all": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 254
        }
      ],
      "dropna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 162
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 130
        }
      ],
      "non_null_values.min": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 67
        }
      ],
      "non_null_values.max": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 68
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 164
        }
      ],
      "astype": [
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 405
        },
        {
          "args": [
            "float"
          ],
          "kwargs": {},
          "line_number": 389
        }
      ],
      "isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 221
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 48
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 254
        }
      ],
      "df.isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "is_string_dtype": [
        {
          "args": [
            "current_type"
          ],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 175
        }
      ],
      "max": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 255
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 399
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 399
        }
      ],
      "unique": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 280
        }
      ],
      "fillna": [
        {
          "args": [
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 363
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 367
        },
        {
          "args": [
            "0.0"
          ],
          "kwargs": {},
          "line_number": 369
        },
        {
          "args": [
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 379
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 374
        },
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 376
        }
      ],
      "isdigit": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 280
        }
      ],
      "apply": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 407
        }
      ],
      "str": [
        {
          "args": [
            "s"
          ],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [
            "s"
          ],
          "kwargs": {},
          "line_number": 280
        }
      ],
      "notna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 366
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 373
        }
      ],
      "pd.to_numeric": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "errors": "<value>"
          },
          "line_number": 391
        }
      ],
      "contains": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 388
        }
      ],
      "rstrip": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 389
        }
      ],
      "x.isdigit": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 408
        }
      ],
      "int": [
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 408
        }
      ]
    }
  },
  "streamlit_app/utils/simulation_analysis.py": {
    "functions": {
      "create_advancement_table": {
        "params": [
          "simulation_results"
        ],
        "defaults": {},
        "docstring": "Create a DataFrame showing team advancement probabilities.\n\nArgs:\n    simulation_results: Results from simulate_playoff_bracket\n    \nReturns:\n    DataFrame: Team advancement probabilities",
        "line_number": 11,
        "end_line": 40
      },
      "plot_championship_odds": {
        "params": [
          "simulation_results",
          "n_teams"
        ],
        "defaults": {
          "n_teams": 10
        },
        "docstring": "Create a horizontal bar chart of championship probabilities.\n\nArgs:\n    simulation_results: Results from simulate_playoff_bracket\n    n_teams: Number of teams to show (default: 10)\n    \nReturns:\n    plt.Figure: Matplotlib figure object",
        "line_number": 42,
        "end_line": 79
      },
      "plot_advancement_probabilities": {
        "params": [
          "simulation_results",
          "n_teams"
        ],
        "defaults": {
          "n_teams": 16
        },
        "docstring": "Create a stacked bar chart showing round-by-round advancement.\n\nArgs:\n    simulation_results: Results from simulate_playoff_bracket\n    n_teams: Number of teams to show (default: 16)\n    \nReturns:\n    plt.Figure: Matplotlib figure object",
        "line_number": 81,
        "end_line": 124
      },
      "display_matchup_probabilities": {
        "params": [
          "simulation_results",
          "round_num"
        ],
        "defaults": {},
        "docstring": "Create a DataFrame of potential matchups for a given round.\n\nArgs:\n    simulation_results: Results from simulate_playoff_bracket\n    round_num: Round number (2, 3, or 4)\n    \nReturns:\n    DataFrame: Matchup probabilities",
        "line_number": 126,
        "end_line": 156
      },
      "analyze_simulation_results": {
        "params": [
          "simulation_results"
        ],
        "defaults": {},
        "docstring": "Create a comprehensive analysis of simulation results for Streamlit.\n\nArgs:\n    simulation_results: Results from simulate_playoff_bracket",
        "line_number": 158,
        "end_line": 214
      }
    },
    "calls": {
      "team_adv.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 25
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "records"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "records"
          ],
          "kwargs": {},
          "line_number": 153
        }
      ],
      "df.sort_values": [
        {
          "args": [
            "'Champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 40
        },
        {
          "args": [
            "'Probability'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 155
        }
      ],
      "create_advancement_table": [
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 53
        },
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 92
        },
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 167
        }
      ],
      "adv_table.head": [
        {
          "args": [
            "n_teams"
          ],
          "kwargs": {},
          "line_number": 56
        },
        {
          "args": [
            "n_teams"
          ],
          "kwargs": {},
          "line_number": 95
        }
      ],
      "plt.subplots": [
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 59
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 98
        }
      ],
      "ax.barh": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "left": "<value>",
            "height": "<value>",
            "label": "<value>",
            "color": "<value>"
          },
          "line_number": 109
        }
      ],
      "ax.set_xlabel": [
        {
          "args": [
            "'Championship Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 114
        }
      ],
      "ax.set_title": [
        {
          "args": [
            "'Stanley Cup Championship Odds'"
          ],
          "kwargs": {},
          "line_number": 66
        },
        {
          "args": [
            "'Round-by-Round Playoff Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 115
        }
      ],
      "grid": [
        {
          "args": [
            "True"
          ],
          "kwargs": {
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 67
        },
        {
          "args": [
            "True"
          ],
          "kwargs": {
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 117
        }
      ],
      "plt.tight_layout": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 77
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 122
        }
      ],
      "np.zeros": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 102
        }
      ],
      "enumerate": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 108
        }
      ],
      "ax.legend": [
        {
          "args": [],
          "kwargs": {
            "loc": "<value>"
          },
          "line_number": 116
        }
      ],
      "ax.invert_yaxis": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 120
        }
      ],
      "str": [
        {
          "args": [
            "round_num"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "get": [
        {
          "args": [
            "round_key",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 138
        }
      ],
      "matchups.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 142
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Playoff Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 164
        },
        {
          "args": [
            "'Stanley Cup Championship Odds'"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "'Round-by-Round Advancement'"
          ],
          "kwargs": {},
          "line_number": 182
        },
        {
          "args": [
            "'Potential Second Round Matchups'"
          ],
          "kwargs": {},
          "line_number": 187
        },
        {
          "args": [
            "'Potential Conference Finals Matchups'"
          ],
          "kwargs": {},
          "line_number": 195
        },
        {
          "args": [
            "'Potential Stanley Cup Final Matchups'"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "'Simulation Information'"
          ],
          "kwargs": {},
          "line_number": 212
        }
      ],
      "st.dataframe": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 189
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 197
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 205
        }
      ],
      "plot_championship_odds": [
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 178
        }
      ],
      "st.pyplot": [
        {
          "args": [
            "fig1"
          ],
          "kwargs": {},
          "line_number": 179
        },
        {
          "args": [
            "fig2"
          ],
          "kwargs": {},
          "line_number": 184
        }
      ],
      "plot_advancement_probabilities": [
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 183
        }
      ],
      "display_matchup_probabilities": [
        {
          "args": [
            "simulation_results",
            "2"
          ],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [
            "simulation_results",
            "3"
          ],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [
            "simulation_results",
            "4"
          ],
          "kwargs": {},
          "line_number": 204
        }
      ],
      "st.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 213
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 214
        }
      ],
      "records.append": [
        {
          "args": [
            "record"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "record"
          ],
          "kwargs": {},
          "line_number": 150
        }
      ],
      "bar.get_width": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 71
        }
      ],
      "ax.text": [
        {
          "args": [
            "label_x",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "va": "<value>"
          },
          "line_number": 73
        }
      ],
      "len": [
        {
          "args": [
            "teams"
          ],
          "kwargs": {},
          "line_number": 102
        }
      ],
      "zip": [
        {
          "args": [
            "rounds",
            "colors"
          ],
          "kwargs": {},
          "line_number": 108
        }
      ],
      "format": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 189
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 197
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 205
        }
      ],
      "bar.get_y": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 73
        }
      ],
      "bar.get_height": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 73
        }
      ]
    }
  },
  "streamlit_app/utils/data_handlers.py": {
    "functions": {
      "make_request_with_retry": {
        "params": [
          "url",
          "headers",
          "retries",
          "timeout"
        ],
        "defaults": {
          "headers": null,
          "retries": 3,
          "timeout": "<class 'ast.Name'>"
        },
        "docstring": "Make HTTP request with retry logic",
        "line_number": 61,
        "end_line": 90
      },
      "get_standings_data": {
        "params": [],
        "defaults": {},
        "docstring": "Get current NHL standings data with improved error handling and fallback options",
        "line_number": 93,
        "end_line": 140
      },
      "get_team_stats_data": {
        "params": [
          "start_season",
          "end_season"
        ],
        "defaults": {
          "start_season": null,
          "end_season": null
        },
        "docstring": "Get team summary stats data directly from NHL API with improved error handling",
        "line_number": 143,
        "end_line": 191
      },
      "process_standings_data": {
        "params": [
          "standings_data",
          "season_str"
        ],
        "defaults": {},
        "docstring": "Process NHL standings data into a DataFrame with improved error handling",
        "line_number": 194,
        "end_line": 414
      },
      "process_team_stats_data": {
        "params": [
          "stats_data"
        ],
        "defaults": {},
        "docstring": "Process team stats data into a DataFrame",
        "line_number": 417,
        "end_line": 484
      },
      "get_advanced_stats_data": {
        "params": [
          "data_folder",
          "season",
          "situation"
        ],
        "defaults": {
          "situation": "5on5"
        },
        "docstring": "Get advanced stats from MoneyPuck",
        "line_number": 488,
        "end_line": 534
      },
      "process_advanced_stats": {
        "params": [
          "df",
          "season_str",
          "situation"
        ],
        "defaults": {},
        "docstring": "Process the advanced stats dataframe while preserving all required columns.",
        "line_number": 536,
        "end_line": 575
      },
      "create_empty_advanced_stats_df": {
        "params": [],
        "defaults": {},
        "docstring": "Create an empty DataFrame with all required advanced stats columns.",
        "line_number": 577,
        "end_line": 617
      },
      "standardize_percentage": {
        "params": [
          "value"
        ],
        "defaults": {},
        "docstring": "Convert any percentage representation to a 0-1 float value\n\nArgs:\n    value: The percentage value to standardize (string with %, number between 0-100, or decimal 0-1)\n    \nReturns:\n    float: Standardized percentage as a decimal between 0.0 and 1.0",
        "line_number": 619,
        "end_line": 653
      },
      "standardize_percentage_columns": {
        "params": [
          "df"
        ],
        "defaults": {},
        "docstring": "Standardize percentage columns to decimal format (0.0-1.0)\n\nArgs:\n    df: DataFrame with percentage columns to standardize\n    \nReturns:\n    DataFrame: Copy of input DataFrame with standardized percentage columns",
        "line_number": 655,
        "end_line": 681
      },
      "format_percentage_for_display": {
        "params": [
          "value",
          "decimal_places"
        ],
        "defaults": {
          "decimal_places": 1
        },
        "docstring": "Format a decimal percentage (0.0-1.0) for display with % symbol\n\nArgs:\n    value: Decimal percentage (0.0-1.0)\n    decimal_places: Number of decimal places to show\n    \nReturns:\n    str: Formatted percentage string with % symbol",
        "line_number": 683,
        "end_line": 701
      },
      "engineer_features": {
        "params": [
          "combined_data"
        ],
        "defaults": {},
        "docstring": "Engineer features for the prediction model",
        "line_number": 704,
        "end_line": 859
      },
      "add_playoff_history_metrics": {
        "params": [
          "team_data",
          "data_folder"
        ],
        "defaults": {},
        "docstring": "Add playoff history metrics to the combined team data.",
        "line_number": 862,
        "end_line": 914
      },
      "calculate_playoff_history": {
        "params": [
          "playoff_df",
          "seasons",
          "team_data",
          "num_seasons"
        ],
        "defaults": {
          "num_seasons": 2
        },
        "docstring": "Calculate playoff history metrics for all teams across multiple seasons",
        "line_number": 916,
        "end_line": 979
      },
      "determine_playoff_teams": {
        "params": [
          "standings_df"
        ],
        "defaults": {},
        "docstring": "Determine which teams make the playoffs based on NHL rules.",
        "line_number": 982,
        "end_line": 1134
      },
      "create_matchup_data": {
        "params": [
          "top_seed",
          "bottom_seed",
          "team_data"
        ],
        "defaults": {},
        "docstring": "Create matchup data for model input",
        "line_number": 1136,
        "end_line": 1211
      },
      "load_data": {
        "params": [
          "filename",
          "folder"
        ],
        "defaults": {},
        "docstring": "Load data from a CSV file\n\nArgs:\n    filename (str): Name of the file to load\n    folder (str): Path to the folder containing the file\n    \nReturns:\n    DataFrame: Loaded data or None if file doesn't exist",
        "line_number": 1213,
        "end_line": 1232
      },
      "save_data": {
        "params": [
          "data",
          "filename",
          "folder"
        ],
        "defaults": {},
        "docstring": "Save data to a CSV or JSON file\n\nArgs:\n    data (DataFrame, dict, or list): Data to save\n    filename (str): Name of the file to save\n    folder (str): Path to the folder to save the file",
        "line_number": 1234,
        "end_line": 1297
      },
      "update_daily_data": {
        "params": [
          "data_folder",
          "current_season",
          "season_str",
          "force"
        ],
        "defaults": {
          "force": false
        },
        "docstring": "Update NHL data once per day or when forced\n\nArgs:\n    data_folder (str): Path to the data folder\n    current_season (int): Current NHL season starting year (e.g., 2023)\n    season_str (str): Season string (e.g., \"20232024\")\n    force (bool): Force update regardless of time since last refresh\n\nReturns:\n    bool: True if data was updated, False otherwise",
        "line_number": 1300,
        "end_line": 1581
      },
      "load_team_data": {
        "params": [
          "data_folder"
        ],
        "defaults": {
          "data_folder": null
        },
        "docstring": "Load team statistics data from file or API.",
        "line_number": 1585,
        "end_line": 1634
      },
      "load_current_playoff_matchups": {
        "params": [
          "data_folder"
        ],
        "defaults": {
          "data_folder": null
        },
        "docstring": "Load current playoff matchups from file or API.",
        "line_number": 1636,
        "end_line": 1677
      },
      "load_simulation_results": {
        "params": [
          "data_folder"
        ],
        "defaults": {
          "data_folder": null
        },
        "docstring": "Load most recent simulation results.",
        "line_number": 1679,
        "end_line": 1705
      },
      "calculate_standard_metrics": {
        "params": [
          "team_data_df"
        ],
        "defaults": {},
        "docstring": "Calculate and standardize metrics needed across the application\n\nArgs:\n    team_data_df (DataFrame): Team data\n    \nReturns:\n    DataFrame: Team data with standardized metrics",
        "line_number": 1707,
        "end_line": 1761
      },
      "prepare_data_for_display": {
        "params": [
          "df"
        ],
        "defaults": {},
        "docstring": "Convert internal 0-1 scale percentages to readable 0-100 scale with % symbol\n\nArgs:\n    df: DataFrame with standardized percentage columns (0-1 scale)\n    \nReturns:\n    DataFrame: Copy with percentage columns formatted for display",
        "line_number": 1764,
        "end_line": 1792
      },
      "validate_and_fix": {
        "params": [
          "df",
          "validation_type",
          "critical_columns"
        ],
        "defaults": {
          "validation_type": "general",
          "critical_columns": null
        },
        "docstring": "No-op validation function when module is not available",
        "line_number": 48,
        "end_line": 51
      }
    },
    "calls": {
      "st.cache_data": [
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>"
          },
          "line_number": 92
        },
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>"
          },
          "line_number": 142
        },
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>"
          },
          "line_number": 193
        },
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>"
          },
          "line_number": 416
        },
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>"
          },
          "line_number": 487
        }
      ],
      "NHLClient": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 55
        }
      ],
      "range": [
        {
          "args": [
            "retries"
          ],
          "kwargs": {},
          "line_number": 72
        },
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 947
        },
        {
          "args": [
            "1",
            "4"
          ],
          "kwargs": {},
          "line_number": 1025
        },
        {
          "args": [
            "1",
            "3"
          ],
          "kwargs": {},
          "line_number": 1051
        },
        {
          "args": [
            "16"
          ],
          "kwargs": {},
          "line_number": 873
        },
        {
          "args": [
            "16"
          ],
          "kwargs": {},
          "line_number": 875
        },
        {
          "args": [
            "16"
          ],
          "kwargs": {},
          "line_number": 876
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 874
        }
      ],
      "RequestException": [
        {
          "args": [
            "'Max retries exceeded'"
          ],
          "kwargs": {},
          "line_number": 90
        }
      ],
      "isinstance": [
        {
          "args": [
            "standings_data",
            "dict"
          ],
          "kwargs": {},
          "line_number": 202
        },
        {
          "args": [
            "stats_data",
            "list"
          ],
          "kwargs": {},
          "line_number": 421
        },
        {
          "args": [
            "value",
            "str"
          ],
          "kwargs": {},
          "line_number": 633
        },
        {
          "args": [
            "value",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 648
        },
        {
          "args": [
            "value",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 697
        },
        {
          "args": [
            "matchup_df",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1202
        },
        {
          "args": [
            "data",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1247
        },
        {
          "args": [
            "stats_data",
            "list"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "standings_data",
            "list"
          ],
          "kwargs": {},
          "line_number": 361
        },
        {
          "args": [
            "value",
            "dict"
          ],
          "kwargs": {},
          "line_number": 425
        },
        {
          "args": [
            "data",
            "dict"
          ],
          "kwargs": {},
          "line_number": 1257
        },
        {
          "args": [
            "data",
            "list"
          ],
          "kwargs": {},
          "line_number": 1257
        },
        {
          "args": [
            "<complex-arg>",
            "str"
          ],
          "kwargs": {},
          "line_number": 1697
        },
        {
          "args": [
            "<complex-arg>",
            "int"
          ],
          "kwargs": {},
          "line_number": 172
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 265
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 270
        },
        {
          "args": [
            "team_record",
            "dict"
          ],
          "kwargs": {},
          "line_number": 365
        },
        {
          "args": [
            "value",
            "dict"
          ],
          "kwargs": {},
          "line_number": 239
        },
        {
          "args": [
            "value",
            "dict"
          ],
          "kwargs": {},
          "line_number": 283
        },
        {
          "args": [
            "data",
            "dict"
          ],
          "kwargs": {},
          "line_number": 1263
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 227
        },
        {
          "args": [
            "v",
            "list"
          ],
          "kwargs": {},
          "line_number": 294
        },
        {
          "args": [
            "team_record",
            "dict"
          ],
          "kwargs": {},
          "line_number": 302
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 333
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 342
        },
        {
          "args": [
            "value",
            "dict"
          ],
          "kwargs": {},
          "line_number": 352
        },
        {
          "args": [
            "value",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1265
        }
      ],
      "pd.DataFrame": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 414
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 484
        },
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 617
        },
        {
          "args": [
            "history_data"
          ],
          "kwargs": {},
          "line_number": 979
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1198
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "all_standings"
          ],
          "kwargs": {},
          "line_number": 388
        },
        {
          "args": [
            "all_stats_data"
          ],
          "kwargs": {},
          "line_number": 436
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1036
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1630
        },
        {
          "args": [
            "dummy_data"
          ],
          "kwargs": {},
          "line_number": 878
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1033
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1053
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1634
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1698
        }
      ],
      "join": [
        {
          "args": [
            "data_folder",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 492
        },
        {
          "args": [
            "folder",
            "filename"
          ],
          "kwargs": {},
          "line_number": 1223
        },
        {
          "args": [
            "folder",
            "filename"
          ],
          "kwargs": {},
          "line_number": 1242
        },
        {
          "args": [
            "data_folder",
            "'team_stats.csv'"
          ],
          "kwargs": {},
          "line_number": 1590
        },
        {
          "args": [
            "data_folder",
            "'playoff_matchups.json'"
          ],
          "kwargs": {},
          "line_number": 1641
        },
        {
          "args": [
            "data_folder",
            "'simulation_results.json'"
          ],
          "kwargs": {},
          "line_number": 1688
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "data_folder",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "data_folder",
            "'nhl_playoff_wins_2005_present.csv'"
          ],
          "kwargs": {},
          "line_number": 866
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 1588
        },
        {
          "args": [
            "data_folder",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1622
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 1639
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 1686
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 179
        },
        {
          "args": [
            "data_folder",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 182
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 407
        },
        {
          "args": [
            "data_folder",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 409
        },
        {
          "args": [
            "data_folder",
            "'temp_data.csv'"
          ],
          "kwargs": {},
          "line_number": 522
        },
        {
          "args": [
            "data_folder",
            "'temp_data.csv'"
          ],
          "kwargs": {},
          "line_number": 519
        },
        {
          "args": [
            "data_folder",
            "'playoff_matchups.json'"
          ],
          "kwargs": {},
          "line_number": 1575
        },
        {
          "args": [
            "data_folder",
            "'refresh_log.txt'"
          ],
          "kwargs": {},
          "line_number": 1506
        },
        {
          "args": [
            "data_folder",
            "'refresh_log.txt'"
          ],
          "kwargs": {},
          "line_number": 1473
        },
        {
          "args": [
            "data_folder",
            "'refresh_log.txt'"
          ],
          "kwargs": {},
          "line_number": 1554
        },
        {
          "args": [
            "data_folder",
            "'error_log.txt'"
          ],
          "kwargs": {},
          "line_number": 1563
        }
      ],
      "replace": [
        {
          "args": [
            "'-'",
            "'_'"
          ],
          "kwargs": {},
          "line_number": 566
        },
        {
          "args": [
            "'.'",
            "'_'"
          ],
          "kwargs": {},
          "line_number": 566
        },
        {
          "args": [
            "' '",
            "'_'"
          ],
          "kwargs": {},
          "line_number": 566
        }
      ],
      "strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 568
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 636
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1392
        }
      ],
      "pd.isna": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 629
        },
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 693
        }
      ],
      "df.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 666
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1774
        }
      ],
      "str": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 701
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [
            "season"
          ],
          "kwargs": {},
          "line_number": 930
        },
        {
          "args": [
            "season"
          ],
          "kwargs": {},
          "line_number": 930
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 139
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 173
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 533
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 913
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1231
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1295
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 40
        },
        {
          "args": [
            "direct_api_error"
          ],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [
            "alt_api_error"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "save_error"
          ],
          "kwargs": {},
          "line_number": 411
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 85
        },
        {
          "args": [
            "client_error"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "cache_error"
          ],
          "kwargs": {},
          "line_number": 502
        },
        {
          "args": [
            "i"
          ],
          "kwargs": {},
          "line_number": 874
        },
        {
          "args": [
            "te"
          ],
          "kwargs": {},
          "line_number": 1285
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1513
        },
        {
          "args": [
            "o"
          ],
          "kwargs": {},
          "line_number": 1280
        },
        {
          "args": [
            "fallback_error"
          ],
          "kwargs": {},
          "line_number": 1560
        },
        {
          "args": [
            "fallback_error"
          ],
          "kwargs": {},
          "line_number": 1565
        }
      ],
      "combined_data.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 707
        }
      ],
      "standardize_percentage_columns": [
        {
          "args": [
            "df"
          ],
          "kwargs": {},
          "line_number": 710
        },
        {
          "args": [
            "df"
          ],
          "kwargs": {},
          "line_number": 1720
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 722
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 723
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1199
        },
        {
          "args": [
            "'Cannot calculate goalDiff/G - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 729
        },
        {
          "args": [
            "'Cannot calculate homeRegulationWin% - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 734
        },
        {
          "args": [
            "'Cannot calculate roadRegulationWin% - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 739
        },
        {
          "args": [
            "'Cannot calculate adjGoalsSavedAboveX/60 - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 747
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 749
        },
        {
          "args": [
            "'Cannot calculate adjGoalsScoredAboveX/60 - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 756
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 758
        },
        {
          "args": [
            "'Cannot calculate hitsPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 765
        },
        {
          "args": [
            "'Cannot calculate takeawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 771
        },
        {
          "args": [
            "'Cannot calculate giveawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 777
        },
        {
          "args": [
            "'Cannot calculate dZoneGiveawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 783
        },
        {
          "args": [
            "'Cannot calculate possAdjHitsPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 790
        },
        {
          "args": [
            "'Cannot calculate possAdjTakeawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 795
        },
        {
          "args": [
            "'Cannot calculate possAdjGiveawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 800
        },
        {
          "args": [
            "'Cannot calculate possAdjdZoneGiveawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 805
        },
        {
          "args": [
            "'Cannot calculate possTypeAdjGiveawaysPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 810
        },
        {
          "args": [
            "'Cannot calculate reboundxGoalsPctg - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 815
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 824
        },
        {
          "args": [
            "'Cannot calculate special teams metrics - missing required columns'"
          ],
          "kwargs": {},
          "line_number": 833
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 856
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1196
        },
        {
          "args": [
            "'Warning: data_validation module not found, validation skipped'"
          ],
          "kwargs": {},
          "line_number": 50
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 402
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 839
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1183
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1209
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1290
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1297
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1632
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1674
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 480
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 847
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1170
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1252
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1256
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1603
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1654
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1702
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1272
        },
        {
          "args": [
            "'Combining data sources...'"
          ],
          "kwargs": {},
          "line_number": 1355
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1370
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1194
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1281
        },
        {
          "args": [
            "'Merging advanced stats data...'"
          ],
          "kwargs": {},
          "line_number": 1382
        },
        {
          "args": [
            "'Team abbreviations in merged data:'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1385
        },
        {
          "args": [
            "'No advanced stats available to merge'"
          ],
          "kwargs": {},
          "line_number": 1487
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1513
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1514
        },
        {
          "args": [
            "'Attempting fallback method with concat...'"
          ],
          "kwargs": {},
          "line_number": 1515
        },
        {
          "args": [
            "'Team abbreviations in advanced stats:'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1387
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1422
        },
        {
          "args": [
            "'Calculating standardized metrics...'"
          ],
          "kwargs": {},
          "line_number": 1433
        },
        {
          "args": [
            "'Checking for per-82 metrics:'"
          ],
          "kwargs": {},
          "line_number": 1437
        },
        {
          "args": [
            "'Adding playoff history metrics...'"
          ],
          "kwargs": {},
          "line_number": 1446
        },
        {
          "args": [
            "'Missing required columns for merging advanced stats'"
          ],
          "kwargs": {},
          "line_number": 1479
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1485
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1400
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1427
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1533
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1560
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1441
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1443
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1535
        }
      ],
      "all": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 726
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 731
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 736
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 742
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 751
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 762
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 768
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 774
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 780
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 807
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 812
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 818
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 991
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 675
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1741
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1782
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1746
        }
      ],
      "validate_and_fix": [
        {
          "args": [
            "df",
            "'general'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 850
        },
        {
          "args": [
            "df",
            "'general'",
            "critical_cols"
          ],
          "kwargs": {},
          "line_number": 400
        },
        {
          "args": [
            "matchup_df",
            "'pre-model'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1203
        },
        {
          "args": [
            "stats_df",
            "'general'",
            "critical_cols"
          ],
          "kwargs": {},
          "line_number": 478
        },
        {
          "args": [
            "standings_df",
            "'general'",
            "standings_critical_cols"
          ],
          "kwargs": {},
          "line_number": 1325
        },
        {
          "args": [
            "stats_df",
            "'general'",
            "stats_critical_cols"
          ],
          "kwargs": {},
          "line_number": 1337
        },
        {
          "args": [
            "standings_df",
            "'pre-merge'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1342
        },
        {
          "args": [
            "stats_df",
            "'pre-merge'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1345
        },
        {
          "args": [
            "merged_df",
            "'general'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1373
        },
        {
          "args": [
            "team_data",
            "'pre-model'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1494
        },
        {
          "args": [
            "advanced_stats_df",
            "'pre-merge'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1409
        },
        {
          "args": [
            "team_data",
            "'pre-model'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1450
        },
        {
          "args": [
            "team_data",
            "'pre-model'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1542
        }
      ],
      "unique": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 997
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 544
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 891
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1002
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1385
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1387
        }
      ],
      "top_seed.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 1149
        },
        {
          "args": [
            "'division_rank'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1151
        },
        {
          "args": [
            "'wildcard_rank'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1151
        }
      ],
      "bottom_seed.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 1150
        },
        {
          "args": [
            "'division_rank'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1152
        },
        {
          "args": [
            "'wildcard_rank'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1152
        }
      ],
      "exists": [
        {
          "args": [
            "team_data_path"
          ],
          "kwargs": {},
          "line_number": 1593
        },
        {
          "args": [
            "matchups_path"
          ],
          "kwargs": {},
          "line_number": 1648
        },
        {
          "args": [
            "sim_path"
          ],
          "kwargs": {},
          "line_number": 1691
        },
        {
          "args": [
            "standings_path"
          ],
          "kwargs": {},
          "line_number": 131
        },
        {
          "args": [
            "csv_path"
          ],
          "kwargs": {},
          "line_number": 496
        },
        {
          "args": [
            "filepath"
          ],
          "kwargs": {},
          "line_number": 1225
        },
        {
          "args": [
            "filepath"
          ],
          "kwargs": {},
          "line_number": 1288
        },
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1313
        },
        {
          "args": [
            "team_data_path"
          ],
          "kwargs": {},
          "line_number": 1623
        },
        {
          "args": [
            "matchups_path"
          ],
          "kwargs": {},
          "line_number": 1669
        },
        {
          "args": [
            "stats_path"
          ],
          "kwargs": {},
          "line_number": 184
        },
        {
          "args": [
            "playoff_history_path"
          ],
          "kwargs": {},
          "line_number": 869
        }
      ],
      "team_data_df.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1717
        }
      ],
      "standard_metrics.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1739
        }
      ],
      "st.write": [
        {
          "args": [
            "'Installing NHL API package...'"
          ],
          "kwargs": {},
          "line_number": 30
        }
      ],
      "st.error": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [
            "'No standings data provided'"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "'No standings data available'"
          ],
          "kwargs": {},
          "line_number": 986
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 993
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 139
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1292
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1295
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 40
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1285
        }
      ],
      "Exception": [
        {
          "args": [
            "'All methods to fetch standings data failed'"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "make_request_with_retry": [
        {
          "args": [
            "url"
          ],
          "kwargs": {
            "timeout": "<value>"
          },
          "line_number": 158
        },
        {
          "args": [
            "url"
          ],
          "kwargs": {
            "timeout": "<value>"
          },
          "line_number": 110
        },
        {
          "args": [
            "url"
          ],
          "kwargs": {
            "timeout": "<value>"
          },
          "line_number": 119
        },
        {
          "args": [
            "alt_url"
          ],
          "kwargs": {
            "timeout": "<value>"
          },
          "line_number": 164
        }
      ],
      "get": [
        {
          "args": [
            "'data'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 159
        },
        {
          "args": [
            "'data'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 165
        },
        {
          "args": [
            "'name'",
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 207
        },
        {
          "args": [
            "'name'",
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 208
        },
        {
          "args": [
            "'logo'",
            "''"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "'default'",
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "'default'",
            "''"
          ],
          "kwargs": {},
          "line_number": 271
        },
        {
          "args": [
            "'name'",
            "''"
          ],
          "kwargs": {},
          "line_number": 225
        },
        {
          "args": [
            "'abbreviation'",
            "''"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "'points'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1083
        },
        {
          "args": [
            "'regulationWins'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1084
        },
        {
          "args": [
            "'row'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1085
        },
        {
          "args": [
            "'wins'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1086
        },
        {
          "args": [
            "'name'"
          ],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [
            "'name'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [
            "'abbreviation'"
          ],
          "kwargs": {},
          "line_number": 227
        },
        {
          "args": [
            "'abbreviation'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 227
        },
        {
          "args": [
            "'default'",
            "''"
          ],
          "kwargs": {},
          "line_number": 334
        },
        {
          "args": [
            "'default'",
            "''"
          ],
          "kwargs": {},
          "line_number": 343
        }
      ],
      "st.warning": [
        {
          "args": [
            "'Unexpected team stats data format'"
          ],
          "kwargs": {},
          "line_number": 432
        },
        {
          "args": [
            "'Received list format for standings data, attempting to process'"
          ],
          "kwargs": {},
          "line_number": 363
        },
        {
          "args": [
            "'Non-dictionary standings data response'"
          ],
          "kwargs": {},
          "line_number": 384
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 529
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 533
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 913
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1059
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1231
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 411
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1329
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 79
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 85
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 299
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 360
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 502
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1274
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1283
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1378
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1455
        }
      ],
      "requests.get": [
        {
          "args": [
            "url"
          ],
          "kwargs": {
            "headers": "<value>",
            "timeout": "<value>"
          },
          "line_number": 514
        },
        {
          "args": [
            "url"
          ],
          "kwargs": {
            "headers": "<value>",
            "timeout": "<value>"
          },
          "line_number": 74
        }
      ],
      "mean": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 820
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 821
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 840
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1426
        }
      ],
      "pd.read_csv": [
        {
          "args": [
            "playoff_history_path"
          ],
          "kwargs": {},
          "line_number": 884
        },
        {
          "args": [
            "standings_path"
          ],
          "kwargs": {},
          "line_number": 133
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 522
        },
        {
          "args": [
            "filepath"
          ],
          "kwargs": {},
          "line_number": 1226
        },
        {
          "args": [
            "team_data_path"
          ],
          "kwargs": {},
          "line_number": 1595
        },
        {
          "args": [
            "team_data_path"
          ],
          "kwargs": {},
          "line_number": 1624
        },
        {
          "args": [
            "csv_path"
          ],
          "kwargs": {},
          "line_number": 498
        }
      ],
      "calculate_playoff_history": [
        {
          "args": [
            "playoff_history",
            "seasons",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 892
        }
      ],
      "pd.merge": [
        {
          "args": [
            "team_data",
            "history_data"
          ],
          "kwargs": {
            "on": "<value>",
            "how": "<value>"
          },
          "line_number": 895
        },
        {
          "args": [
            "standings_df",
            "stats_df"
          ],
          "kwargs": {
            "on": "<value>",
            "how": "<value>",
            "suffixes": "<value>"
          },
          "line_number": 1363
        },
        {
          "args": [
            "merged_df",
            "advanced_stats_df"
          ],
          "kwargs": {
            "left_on": "<value>",
            "right_on": "<value>",
            "how": "<value>"
          },
          "line_number": 1415
        },
        {
          "args": [
            "standings_df",
            "stats_df"
          ],
          "kwargs": {
            "on": "<value>",
            "how": "<value>",
            "suffixes": "<value>"
          },
          "line_number": 1524
        }
      ],
      "drop_duplicates": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 925
        }
      ],
      "dict": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 926
        }
      ],
      "current_teams_df.iterrows": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 939
        }
      ],
      "copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1001
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 549
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1009
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1023
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1049
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 553
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1030
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 1245
        },
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 1314
        },
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 408
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 881
        }
      ],
      "should_refresh_data": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1317
        }
      ],
      "load_data": [
        {
          "args": [
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1569
        }
      ],
      "update_daily_data": [
        {
          "args": [
            "data_folder",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 1611
        },
        {
          "args": [
            "data_folder",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 1662
        }
      ],
      "subprocess.check_call": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 35
        }
      ],
      "response.raise_for_status": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 75
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "filepath"
          ],
          "kwargs": {},
          "line_number": 1245
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1588
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1639
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1686
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 179
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 407
        },
        {
          "args": [
            "playoff_history_path"
          ],
          "kwargs": {},
          "line_number": 881
        }
      ],
      "st.info": [
        {
          "args": [
            "'Using cached standings data from file'"
          ],
          "kwargs": {},
          "line_number": 132
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 870
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 910
        },
        {
          "args": [
            "'Using cached team stats data from file'"
          ],
          "kwargs": {},
          "line_number": 185
        }
      ],
      "astype": [
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 392
        },
        {
          "args": [
            "int"
          ],
          "kwargs": {},
          "line_number": 888
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 441
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1618
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1627
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1600
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1358
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1360
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1404
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1406
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1520
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1521
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 1397
        }
      ],
      "df.to_csv": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "index": "<value>"
          },
          "line_number": 409
        },
        {
          "args": [
            "csv_path"
          ],
          "kwargs": {
            "index": "<value>"
          },
          "line_number": 525
        }
      ],
      "team_stats.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 424
        }
      ],
      "all_stats_data.append": [
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 430
        }
      ],
      "stats_df.rename": [
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 470
        },
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 474
        }
      ],
      "process_advanced_stats": [
        {
          "args": [
            "df",
            "<complex-arg>",
            "situation"
          ],
          "kwargs": {},
          "line_number": 527
        },
        {
          "args": [
            "df",
            "<complex-arg>",
            "situation"
          ],
          "kwargs": {},
          "line_number": 500
        }
      ],
      "create_empty_advanced_stats_df": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 530
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 534
        }
      ],
      "df.drop": [
        {
          "args": [],
          "kwargs": {
            "columns": "<value>",
            "inplace": "<value>"
          },
          "line_number": 563
        }
      ],
      "pd.to_numeric": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "errors": "<value>"
          },
          "line_number": 573
        }
      ],
      "apply": [
        {
          "args": [
            "standardize_percentage"
          ],
          "kwargs": {},
          "line_number": 679
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1785
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1789
        },
        {
          "args": [
            "standardize_percentage"
          ],
          "kwargs": {},
          "line_number": 448
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1397
        }
      ],
      "clip": [
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 727
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 732
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 737
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 763
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 769
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 775
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 781
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 813
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 743
        },
        {
          "args": [],
          "kwargs": {
            "lower": "<value>"
          },
          "line_number": 752
        },
        {
          "args": [
            "0.01",
            "0.99"
          ],
          "kwargs": {},
          "line_number": 798
        },
        {
          "args": [
            "0.01",
            "0.99"
          ],
          "kwargs": {},
          "line_number": 803
        },
        {
          "args": [
            "0.01",
            "0.99"
          ],
          "kwargs": {},
          "line_number": 788
        },
        {
          "args": [
            "0.01",
            "0.99"
          ],
          "kwargs": {},
          "line_number": 793
        }
      ],
      "any": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 837
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1778
        }
      ],
      "sum": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 838
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 845
        },
        {
          "args": [
            "top_team_filter"
          ],
          "kwargs": {},
          "line_number": 1162
        },
        {
          "args": [
            "bottom_team_filter"
          ],
          "kwargs": {},
          "line_number": 1162
        }
      ],
      "fillna": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 840
        },
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 905
        }
      ],
      "dummy_df.to_csv": [
        {
          "args": [
            "playoff_history_path"
          ],
          "kwargs": {
            "index": "<value>"
          },
          "line_number": 882
        }
      ],
      "zip": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 926
        }
      ],
      "int": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 930
        },
        {
          "args": [
            "season"
          ],
          "kwargs": {},
          "line_number": 930
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 950
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 1398
        }
      ],
      "team_row.get": [
        {
          "args": [
            "'teamName'",
            "''"
          ],
          "kwargs": {},
          "line_number": 941
        }
      ],
      "history_data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 971
        }
      ],
      "div_teams.sort_values": [
        {
          "args": [],
          "kwargs": {
            "by": "<value>",
            "ascending": "<value>"
          },
          "line_number": 1020
        }
      ],
      "division_qualifiers.append": [
        {
          "args": [
            "division_top3"
          ],
          "kwargs": {},
          "line_number": 1027
        }
      ],
      "wildcard_candidates.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1030
        }
      ],
      "pd.concat": [
        {
          "args": [
            "division_qualifiers"
          ],
          "kwargs": {},
          "line_number": 1033
        },
        {
          "args": [
            "wildcard_candidates"
          ],
          "kwargs": {},
          "line_number": 1038
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1056
        }
      ],
      "wildcard_df.sort_values": [
        {
          "args": [],
          "kwargs": {
            "by": "<value>",
            "ascending": "<value>"
          },
          "line_number": 1046
        }
      ],
      "len": [
        {
          "args": [
            "conference_playoff_teams"
          ],
          "kwargs": {},
          "line_number": 1058
        },
        {
          "args": [
            "standings_data"
          ],
          "kwargs": {},
          "line_number": 361
        },
        {
          "args": [
            "situation_values"
          ],
          "kwargs": {},
          "line_number": 552
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 722
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 722
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 930
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1199
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 856
        },
        {
          "args": [
            "weights"
          ],
          "kwargs": {},
          "line_number": 948
        },
        {
          "args": [
            "sorted_divisions"
          ],
          "kwargs": {},
          "line_number": 1092
        },
        {
          "args": [
            "wildcards"
          ],
          "kwargs": {},
          "line_number": 1093
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 402
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 874
        },
        {
          "args": [
            "conference_playoff_teams"
          ],
          "kwargs": {},
          "line_number": 1059
        },
        {
          "args": [
            "wildcards"
          ],
          "kwargs": {},
          "line_number": 1107
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 1183
        },
        {
          "args": [
            "feature_cols"
          ],
          "kwargs": {},
          "line_number": 1183
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1209
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 480
        },
        {
          "args": [
            "data"
          ],
          "kwargs": {},
          "line_number": 1252
        },
        {
          "args": [
            "data"
          ],
          "kwargs": {},
          "line_number": 1256
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1329
        },
        {
          "args": [
            "v"
          ],
          "kwargs": {},
          "line_number": 294
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1378
        },
        {
          "args": [
            "merged_df"
          ],
          "kwargs": {},
          "line_number": 1534
        },
        {
          "args": [
            "standings_df"
          ],
          "kwargs": {},
          "line_number": 1534
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 874
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1455
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1441
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 1398
        },
        {
          "args": [
            "standings_df"
          ],
          "kwargs": {},
          "line_number": 1535
        },
        {
          "args": [
            "merged_df"
          ],
          "kwargs": {},
          "line_number": 1535
        }
      ],
      "div_winners.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1078
        }
      ],
      "sorted_div_winners.sort": [
        {
          "args": [],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 1082
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1142
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1142
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1142
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1607
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1658
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 180
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1607
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1607
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1658
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1658
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 180
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 180
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 873
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 873
        }
      ],
      "filename.endswith": [
        {
          "args": [
            "'.json'"
          ],
          "kwargs": {},
          "line_number": 1249
        },
        {
          "args": [
            "'.json'"
          ],
          "kwargs": {},
          "line_number": 1259
        },
        {
          "args": [
            "'.json'"
          ],
          "kwargs": {},
          "line_number": 1278
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Updating NHL data...'"
          ],
          "kwargs": {},
          "line_number": 1318
        }
      ],
      "get_standings_data": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1320
        }
      ],
      "process_standings_data": [
        {
          "args": [
            "standings_data",
            "season_str"
          ],
          "kwargs": {},
          "line_number": 1321
        }
      ],
      "get_team_stats_data": [
        {
          "args": [
            "current_season"
          ],
          "kwargs": {},
          "line_number": 1332
        }
      ],
      "process_team_stats_data": [
        {
          "args": [
            "stats_data"
          ],
          "kwargs": {},
          "line_number": 1333
        }
      ],
      "get_advanced_stats_data": [
        {
          "args": [
            "data_folder",
            "current_season"
          ],
          "kwargs": {},
          "line_number": 1350
        }
      ],
      "get_standings": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 99
        }
      ],
      "response.json": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 121
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 159
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 1588
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 1639
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 1686
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 179
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 407
        }
      ],
      "standings_df.to_dict": [
        {
          "args": [],
          "kwargs": {
            "orient": "<value>"
          },
          "line_number": 135
        }
      ],
      "team_record.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 378
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 235
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 278
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 350
        }
      ],
      "all_standings.append": [
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 382
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 247
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 291
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 358
        }
      ],
      "open": [
        {
          "args": [
            "<complex-arg>",
            "'wb'"
          ],
          "kwargs": {},
          "line_number": 519
        },
        {
          "args": [
            "<complex-arg>",
            "'r'"
          ],
          "kwargs": {},
          "line_number": 1575
        },
        {
          "args": [
            "matchups_path",
            "'r'"
          ],
          "kwargs": {},
          "line_number": 1650
        },
        {
          "args": [
            "matchups_path",
            "'r'"
          ],
          "kwargs": {},
          "line_number": 1670
        },
        {
          "args": [
            "sim_path",
            "'r'"
          ],
          "kwargs": {},
          "line_number": 1693
        },
        {
          "args": [
            "stats_path",
            "'r'"
          ],
          "kwargs": {},
          "line_number": 187
        },
        {
          "args": [
            "filepath",
            "'w'"
          ],
          "kwargs": {
            "encoding": "<value>"
          },
          "line_number": 1260
        },
        {
          "args": [
            "filepath",
            "'w'"
          ],
          "kwargs": {
            "encoding": "<value>"
          },
          "line_number": 1279
        },
        {
          "args": [
            "refresh_log_path",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 1507
        },
        {
          "args": [
            "refresh_log_path",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 1474
        },
        {
          "args": [
            "refresh_log_path",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 1555
        },
        {
          "args": [
            "error_log_path",
            "'a'"
          ],
          "kwargs": {},
          "line_number": 1564
        }
      ],
      "f.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 520
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1508
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1475
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1556
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1565
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 636
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 640
        }
      ],
      "sorted_div_winners.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1079
        }
      ],
      "data.to_json": [
        {
          "args": [
            "filepath"
          ],
          "kwargs": {
            "orient": "<value>",
            "date_format": "<value>"
          },
          "line_number": 1251
        }
      ],
      "data.to_csv": [
        {
          "args": [
            "filepath"
          ],
          "kwargs": {
            "index": "<value>",
            "encoding": "<value>"
          },
          "line_number": 1255
        }
      ],
      "getsize": [
        {
          "args": [
            "filepath"
          ],
          "kwargs": {},
          "line_number": 1289
        }
      ],
      "json.load": [
        {
          "args": [
            "f"
          ],
          "kwargs": {},
          "line_number": 1576
        },
        {
          "args": [
            "f"
          ],
          "kwargs": {},
          "line_number": 1651
        },
        {
          "args": [
            "f"
          ],
          "kwargs": {},
          "line_number": 1671
        },
        {
          "args": [
            "f"
          ],
          "kwargs": {},
          "line_number": 1694
        },
        {
          "args": [
            "f"
          ],
          "kwargs": {},
          "line_number": 188
        }
      ],
      "max": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1784
        },
        {
          "args": [
            "potential_team_lists"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 297
        }
      ],
      "time.sleep": [
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 80
        },
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 86
        }
      ],
      "alt_response.json": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 165
        }
      ],
      "team_record.get": [
        {
          "args": [
            "'divisionName'",
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 257
        },
        {
          "args": [
            "'conferenceName'",
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 258
        },
        {
          "args": [
            "'teamId'",
            "0"
          ],
          "kwargs": {},
          "line_number": 263
        },
        {
          "args": [
            "'teamLogo'",
            "''"
          ],
          "kwargs": {},
          "line_number": 275
        },
        {
          "args": [
            "'teamName'"
          ],
          "kwargs": {},
          "line_number": 265
        },
        {
          "args": [
            "'teamName'",
            "'Unknown'"
          ],
          "kwargs": {},
          "line_number": 268
        },
        {
          "args": [
            "'teamAbbrev'"
          ],
          "kwargs": {},
          "line_number": 270
        }
      ],
      "value.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 426
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 241
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 285
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 353
        }
      ],
      "is_numeric_dtype": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 446
        }
      ],
      "rename_dict.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 469
        }
      ],
      "situation.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 545
        }
      ],
      "s.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 545
        }
      ],
      "value.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 640
        },
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 636
        }
      ],
      "isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 675
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 837
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 838
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 845
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1741
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1782
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1746
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1426
        }
      ],
      "randint": [
        {
          "args": [
            "0",
            "16"
          ],
          "kwargs": {},
          "line_number": 875
        },
        {
          "args": [
            "0",
            "4"
          ],
          "kwargs": {},
          "line_number": 876
        }
      ],
      "sort_columns.append": [
        {
          "args": [
            "tiebreaker"
          ],
          "kwargs": {},
          "line_number": 1017
        },
        {
          "args": [
            "tiebreaker"
          ],
          "kwargs": {},
          "line_number": 1044
        }
      ],
      "div_teams.head": [
        {
          "args": [
            "3"
          ],
          "kwargs": {},
          "line_number": 1023
        }
      ],
      "wildcard_df.head": [
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 1049
        }
      ],
      "to_dict": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1128
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1129
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1097
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1098
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1104
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1105
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1111
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1112
        }
      ],
      "json.loads": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1698
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1266
        }
      ],
      "division_record.get": [
        {
          "args": [
            "'division'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 207
        },
        {
          "args": [
            "'conference'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 208
        }
      ],
      "standings_data.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 294
        }
      ],
      "tolist": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 874
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 874
        }
      ],
      "pd.notna": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1189
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1189
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 1786
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 1790
        }
      ],
      "traceback.format_exc": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1297
        }
      ],
      "engineer_features": [
        {
          "args": [
            "merged_df"
          ],
          "kwargs": {},
          "line_number": 1490
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 1430
        },
        {
          "args": [
            "merged_df"
          ],
          "kwargs": {},
          "line_number": 1538
        }
      ],
      "add_playoff_history_metrics": [
        {
          "args": [
            "team_data",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1491
        },
        {
          "args": [
            "team_data",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1447
        },
        {
          "args": [
            "team_data",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1539
        }
      ],
      "save_data": [
        {
          "args": [
            "team_data",
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1499
        },
        {
          "args": [
            "team_data",
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1458
        },
        {
          "args": [
            "playoff_matchups",
            "'playoff_matchups.json'",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1466
        },
        {
          "args": [
            "team_data",
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 1547
        }
      ],
      "get_eastern_time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1503
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1470
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1551
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1565
        }
      ],
      "data.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1264
        }
      ],
      "json.dump": [
        {
          "args": [
            "processed_data",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "ensure_ascii": "<value>"
          },
          "line_number": 1269
        },
        {
          "args": [
            "data",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "ensure_ascii": "<value>"
          },
          "line_number": 1271
        },
        {
          "args": [
            "data",
            "f"
          ],
          "kwargs": {
            "default": "<value>",
            "indent": "<value>",
            "ensure_ascii": "<value>"
          },
          "line_number": 1280
        }
      ],
      "calculate_standard_metrics": [
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 1434
        }
      ],
      "determine_playoff_teams": [
        {
          "args": [
            "standings_df"
          ],
          "kwargs": {},
          "line_number": 1464
        }
      ],
      "format_percentage_for_display": [
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 1786
        }
      ],
      "list": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 299
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 360
        }
      ],
      "missing_cols.append": [
        {
          "args": [
            "'teamAbbrev in merged_df'"
          ],
          "kwargs": {},
          "line_number": 1482
        },
        {
          "args": [
            "'team in advanced_stats_df'"
          ],
          "kwargs": {},
          "line_number": 1484
        }
      ],
      "standings_data.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 299
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 360
        }
      ],
      "type": [
        {
          "args": [
            "data"
          ],
          "kwargs": {},
          "line_number": 1281
        },
        {
          "args": [
            "data"
          ],
          "kwargs": {},
          "line_number": 1283
        },
        {
          "args": [
            "data"
          ],
          "kwargs": {},
          "line_number": 1285
        }
      ],
      "value.to_json": [
        {
          "args": [],
          "kwargs": {
            "orient": "<value>",
            "date_format": "<value>"
          },
          "line_number": 1266
        }
      ],
      "isoformat": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1508
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1475
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1556
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1565
        }
      ],
      "x.isdigit": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1398
        }
      ]
    }
  },
  "streamlit_app/utils/simulation_utils.py": {
    "functions": {
      "get_series_schedule": {
        "params": [
          "series_length"
        ],
        "defaults": {},
        "docstring": "Get the home/away schedule for a playoff series of a given length.\n\nIn the NHL playoff format:\n- Higher seed gets home games 1, 2, 5, 7\n- Lower seed gets home games 3, 4, 6\n\nArgs:\n    series_length: Number of games in the series (4-7)\n    \nReturns:\n    list: Schedule of home/away games from higher seed perspective\n         (1 = home game, 0 = away game)",
        "line_number": 10,
        "end_line": 30
      },
      "simulate_series_length": {
        "params": [],
        "defaults": {},
        "docstring": "Simulate a series length based on historical NHL data.\n\nReturns:\n    int: Number of games in the series (4, 5, 6, or 7)",
        "line_number": 32,
        "end_line": 38
      },
      "determine_top_seed": {
        "params": [
          "team1",
          "team2",
          "team_data"
        ],
        "defaults": {},
        "docstring": "Determine which team is the higher seed based on NHL rules.\n\nArgs:\n    team1: First team dictionary\n    team2: Second team dictionary\n    team_data: DataFrame with team stats\n    \nReturns:\n    tuple: (top_seed, bottom_seed)",
        "line_number": 40,
        "end_line": 75
      },
      "generate_series_outcome": {
        "params": [
          "win_probability"
        ],
        "defaults": {},
        "docstring": "Generate NHL playoff series outcome distribution based on win probability.\n\nUsing the historically accurate series length distribution:\n- 4 games: 14.0%\n- 5 games: 24.3%\n- 6 games: 33.6%\n- 7 games: 28.1%\n\nArgs:\n    win_probability (float): Probability of the higher seed winning the series (0.0-1.0)\n    \nReturns:\n    dict: Series outcome distribution with keys like '4-0', '4-1', etc. and their probabilities",
        "line_number": 77,
        "end_line": 116
      }
    },
    "calls": {
      "choice": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "p": "<value>"
          },
          "line_number": 38
        }
      ],
      "team1.get": [
        {
          "args": [
            "'division_rank'",
            "99"
          ],
          "kwargs": {},
          "line_number": 52
        }
      ],
      "team2.get": [
        {
          "args": [
            "'division_rank'",
            "99"
          ],
          "kwargs": {},
          "line_number": 53
        }
      ]
    }
  },
  "streamlit_app/utils/visualization.py": {
    "functions": {
      "load_team_logo": {
        "params": [
          "logo_url"
        ],
        "defaults": {},
        "docstring": "Load team logo from URL and return as PIL Image.\n\nArgs:\n    logo_url (str): URL to the team logo\n    \nReturns:\n    PIL.Image or None: The loaded image or None if failed",
        "line_number": 23,
        "end_line": 54
      },
      "get_team_color": {
        "params": [
          "team_abbrev"
        ],
        "defaults": {},
        "docstring": "Get team primary color based on team abbreviation.\n\nArgs:\n    team_abbrev (str): Team abbreviation (e.g., 'TOR', 'NYR', etc.)\n    \nReturns:\n    str: Hex color code for the team",
        "line_number": 56,
        "end_line": 103
      },
      "plot_series_probabilities": {
        "params": [
          "top_seed",
          "bottom_seed",
          "lr_prob",
          "xgb_prob",
          "ensemble_prob",
          "sim_prob"
        ],
        "defaults": {},
        "docstring": "Plot bar chart comparing different model probabilities for a playoff series.\n\nArgs:\n    top_seed (dict): Top seeded team info\n    bottom_seed (dict): Bottom seeded team info\n    lr_prob (float): Logistic regression probability\n    xgb_prob (float): XGBoost model probability\n    ensemble_prob (float): Ensemble model probability (with home ice boost)\n    sim_prob (float): Simulation result probability",
        "line_number": 109,
        "end_line": 150
      },
      "plot_series_length_table": {
        "params": [
          "win_distribution",
          "top_team",
          "bottom_team"
        ],
        "defaults": {},
        "docstring": "Create a styled table showing probability of each series length outcome.\n\nArgs:\n    win_distribution (dict): Dictionary with series outcome counts\n    top_team (str): Name of the top seeded team\n    bottom_team (str): Name of the bottom seeded team",
        "line_number": 152,
        "end_line": 184
      },
      "plot_team_comparison": {
        "params": [
          "top_team_data",
          "bottom_team_data",
          "metrics"
        ],
        "defaults": {},
        "docstring": "Create a comparison chart for selected team metrics.\n\nArgs:\n    top_team_data (Series): Data for the top seeded team\n    bottom_team_data (Series): Data for the bottom seeded team\n    metrics (list): List of metrics to compare",
        "line_number": 186,
        "end_line": 255
      },
      "plot_win_probability_gauge": {
        "params": [
          "win_probability",
          "team1_name",
          "team2_name",
          "team1_abbrev",
          "team2_abbrev"
        ],
        "defaults": {
          "team1_abbrev": null,
          "team2_abbrev": null
        },
        "docstring": "Create a gauge chart showing the win probability for a playoff series.\n\nArgs:\n    win_probability (float): Probability of team1 winning (0.0-1.0)\n    team1_name (str): Name of team 1\n    team2_name (str): Name of team 2\n    team1_abbrev (str): Team 1 abbreviation for color (optional)\n    team2_abbrev (str): Team 2 abbreviation for color (optional)",
        "line_number": 257,
        "end_line": 315
      },
      "plot_team_stats_comparison": {
        "params": [
          "team1_data",
          "team2_data",
          "selected_stats",
          "team1_abbrev",
          "team2_abbrev"
        ],
        "defaults": {
          "team1_abbrev": null,
          "team2_abbrev": null
        },
        "docstring": "Create a table comparing selected team statistics.\n\nArgs:\n    team1_data (Series/dict): Statistics for team 1\n    team2_data (Series/dict): Statistics for team 2\n    selected_stats (list): List of (display_name, column_name) tuples for stats to show\n    team1_abbrev (str): Team 1 abbreviation for color (optional)\n    team2_abbrev (str): Team 2 abbreviation for color (optional)",
        "line_number": 317,
        "end_line": 371
      },
      "plot_championship_odds": {
        "params": [
          "results_df",
          "top_n"
        ],
        "defaults": {
          "top_n": 10
        },
        "docstring": "Plot bar chart showing championship odds for the top teams.\n\nArgs:\n    results_df (DataFrame): DataFrame with simulation results\n    top_n (int): Number of teams to include in the chart",
        "line_number": 377,
        "end_line": 415
      },
      "plot_advancement_heatmap": {
        "params": [
          "results_df",
          "top_n"
        ],
        "defaults": {
          "top_n": 16
        },
        "docstring": "Create heatmap showing advancement probabilities for each round.\n\nArgs:\n    results_df (DataFrame): DataFrame with simulation results\n    top_n (int): Number of teams to include in the chart",
        "line_number": 417,
        "end_line": 451
      },
      "plot_colored_advancement_table": {
        "params": [
          "results_df",
          "top_n"
        ],
        "defaults": {
          "top_n": 16
        },
        "docstring": "Display a colored table showing playoff advancement probabilities.\n\nArgs:\n    results_df (DataFrame): DataFrame with simulation results\n    top_n (int): Number of teams to include in the table",
        "line_number": 453,
        "end_line": 519
      },
      "plot_potential_matchups": {
        "params": [
          "matchups_df",
          "title",
          "top_n"
        ],
        "defaults": {
          "top_n": 10
        },
        "docstring": "Create a horizontal bar chart showing the most likely potential matchups.\n\nArgs:\n    matchups_df (DataFrame): DataFrame with potential matchups info\n    title (str): Chart title\n    top_n (int): Number of matchups to display",
        "line_number": 521,
        "end_line": 562
      },
      "display_matchup_probabilities_table": {
        "params": [
          "matchups_df",
          "title",
          "top_n"
        ],
        "defaults": {
          "top_n": 10
        },
        "docstring": "Display a table of potential matchups with their probabilities.\n\nArgs:\n    matchups_df (DataFrame): DataFrame with potential matchups info\n    title (str): Table title\n    top_n (int): Number of matchups to display",
        "line_number": 564,
        "end_line": 602
      },
      "_color_distance": {
        "params": [
          "color1",
          "color2"
        ],
        "defaults": {},
        "docstring": "Calculate visual distance between two colors.\n\nArgs:\n    color1 (str): First color in hex format (e.g., '#FF0000')\n    color2 (str): Second color in hex format\n    \nReturns:\n    float: Visual distance between colors (higher values mean more distinct colors)",
        "line_number": 608,
        "end_line": 644
      },
      "plot_head_to_head_probabilities": {
        "params": [
          "team1",
          "team2",
          "lr_prob",
          "xgb_prob",
          "ensemble_prob",
          "sim_prob",
          "team1_abbrev",
          "team2_abbrev"
        ],
        "defaults": {
          "sim_prob": null,
          "team1_abbrev": null,
          "team2_abbrev": null
        },
        "docstring": "Create visual comparison of model predictions for head-to-head matchup.\n\nArgs:\n    team1 (str): Name of team 1 (home team)\n    team2 (str): Name of team 2 (away team)\n    lr_prob (float): Logistic regression probability (RAW, no home ice)\n    xgb_prob (float): XGBoost model probability (RAW, no home ice)\n    ensemble_prob (float): Ensemble model probability (WITH home ice boost)\n    sim_prob (float): Probability from simulation (optional)\n    team1_abbrev (str): Team 1 abbreviation for color (optional)\n    team2_abbrev (str): Team 2 abbreviation for color (optional)",
        "line_number": 646,
        "end_line": 817
      },
      "plot_head_to_head_metrics": {
        "params": [
          "team1_data",
          "team2_data",
          "metrics"
        ],
        "defaults": {},
        "docstring": "Create a radar chart comparing team metrics.\n\nArgs:\n    team1_data (Series): Data for team 1\n    team2_data (Series): Data for team 2\n    metrics (list): List of (display_name, column_name) tuples for metrics to compare",
        "line_number": 819,
        "end_line": 900
      },
      "create_bracket_visual": {
        "params": [
          "playoff_results"
        ],
        "defaults": {},
        "docstring": "Create a visual representation of a playoff bracket.\n\nArgs:\n    playoff_results (dict): Results from simulate_single_bracket function",
        "line_number": 906,
        "end_line": 1022
      },
      "create_simple_bracket_visual": {
        "params": [
          "playoff_results"
        ],
        "defaults": {},
        "docstring": "Create a simpler text-based representation of a playoff bracket.\n\nArgs:\n    playoff_results (dict): Results from simulate_single_bracket function",
        "line_number": 1024,
        "end_line": 1078
      },
      "display_colored_table": {
        "params": [
          "df",
          "color_columns",
          "cmap",
          "text_color_threshold"
        ],
        "defaults": {
          "cmap": "Blues",
          "text_color_threshold": 0.7
        },
        "docstring": "Display a DataFrame with background colors based on values.\n\nArgs:\n    df (DataFrame): DataFrame to display\n    color_columns (list): Columns to apply color formatting\n    cmap (str): Matplotlib colormap name\n    text_color_threshold (float): Threshold for switching to white text",
        "line_number": 1084,
        "end_line": 1125
      },
      "plot_top_teams_chart": {
        "params": [
          "teams_to_plot",
          "metric",
          "top_n",
          "title"
        ],
        "defaults": {
          "metric": "champion",
          "top_n": 10,
          "title": null
        },
        "docstring": "Create a horizontal bar chart for the top teams based on the selected metric.\n\nArgs:\n    teams_to_plot (DataFrame): DataFrame with team data\n    metric (str): Column name for the metric to plot\n    top_n (int): Number of teams to include\n    title (str): Chart title (optional)",
        "line_number": 1127,
        "end_line": 1169
      },
      "create_round_advancement_chart": {
        "params": [
          "teams_to_plot"
        ],
        "defaults": {},
        "docstring": "Create a chart showing advancement through playoff rounds.\n\nArgs:\n    teams_to_plot (DataFrame): DataFrame with team advancement data",
        "line_number": 1171,
        "end_line": 1212
      },
      "plot_championship_odds_plotly": {
        "params": [
          "results_df",
          "top_n"
        ],
        "defaults": {
          "top_n": 10
        },
        "docstring": "Create an interactive bar chart showing championship odds using Plotly.\n\nArgs:\n    results_df (DataFrame): DataFrame with simulation results\n    top_n (int): Number of teams to include in the chart",
        "line_number": 1214,
        "end_line": 1253
      },
      "plot_bracket_simulation_summary": {
        "params": [
          "most_common_bracket",
          "total_sims"
        ],
        "defaults": {},
        "docstring": "Display the most common bracket outcome from simulations.\n\nArgs:\n    most_common_bracket (dict): Dictionary containing the most common bracket info\n    total_sims (int): Total number of simulations run",
        "line_number": 1255,
        "end_line": 1311
      },
      "create_small_multiple_charts": {
        "params": [
          "dataframes",
          "plot_func",
          "n_cols",
          "**kwargs"
        ],
        "defaults": {
          "n_cols": 2
        },
        "docstring": "Create a grid of small multiple charts using the same plot function.\n\nArgs:\n    dataframes (list): List of dataframes to plot\n    plot_func (callable): Function that takes a dataframe and returns a figure\n    n_cols (int): Number of columns in the grid\n    **kwargs: Additional keyword arguments for plot_func",
        "line_number": 1317,
        "end_line": 1339
      },
      "style_df": {
        "params": [
          "val",
          "max_value",
          "col_name"
        ],
        "defaults": {},
        "docstring": null,
        "line_number": 481,
        "end_line": 491
      },
      "hex_to_rgb": {
        "params": [
          "hex_color"
        ],
        "defaults": {},
        "docstring": null,
        "line_number": 619,
        "end_line": 623
      },
      "color_cells": {
        "params": [
          "val",
          "min_val",
          "max_val",
          "cmap_name"
        ],
        "defaults": {},
        "docstring": null,
        "line_number": 1097,
        "end_line": 1111
      }
    },
    "calls": {
      "use": [
        {
          "args": [
            "'seaborn-v0_8-whitegrid'"
          ],
          "kwargs": {},
          "line_number": 15
        }
      ],
      "sns.set_style": [
        {
          "args": [
            "'whitegrid'"
          ],
          "kwargs": {},
          "line_number": 16
        }
      ],
      "sns.set_palette": [
        {
          "args": [
            "'colorblind'"
          ],
          "kwargs": {},
          "line_number": 17
        }
      ],
      "team_colors.get": [
        {
          "args": [
            "<complex-arg>",
            "'#004C97'"
          ],
          "kwargs": {},
          "line_number": 103
        }
      ],
      "plt.subplots": [
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 125
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 388
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 922
        }
      ],
      "ax.bar": [
        {
          "args": [
            "models",
            "probs"
          ],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 129
        }
      ],
      "ax.set_ylabel": [
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 132
        }
      ],
      "ax.set_title": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 133
        },
        {
          "args": [
            "'Stanley Cup Championship Odds'"
          ],
          "kwargs": {},
          "line_number": 405
        }
      ],
      "ax.set_ylim": [
        {
          "args": [
            "0",
            "100"
          ],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "0",
            "100"
          ],
          "kwargs": {},
          "line_number": 924
        }
      ],
      "ax.axhline": [
        {
          "args": [],
          "kwargs": {
            "y": "<value>",
            "linestyle": "<value>",
            "color": "<value>",
            "alpha": "<value>"
          },
          "line_number": 147
        }
      ],
      "st.pyplot": [
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 150
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 415
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 451
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 1022
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 1339
        }
      ],
      "sum": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 161
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 641
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "series_data"
          ],
          "kwargs": {},
          "line_number": 181
        },
        {
          "args": [
            "comparison_data"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "comparison_data"
          ],
          "kwargs": {},
          "line_number": 362
        },
        {
          "args": [
            "path_data"
          ],
          "kwargs": {},
          "line_number": 1077
        }
      ],
      "st.table": [
        {
          "args": [
            "series_df"
          ],
          "kwargs": {},
          "line_number": 184
        },
        {
          "args": [
            "comparison_df"
          ],
          "kwargs": {},
          "line_number": 369
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 602
        },
        {
          "args": [
            "path_df"
          ],
          "kwargs": {},
          "line_number": 1078
        }
      ],
      "pd.melt": [
        {
          "args": [
            "df"
          ],
          "kwargs": {
            "id_vars": "<value>",
            "value_vars": "<value>"
          },
          "line_number": 233
        }
      ],
      "configure_axis": [
        {
          "args": [],
          "kwargs": {
            "labelAngle": "<value>"
          },
          "line_number": 240
        }
      ],
      "st.altair_chart": [
        {
          "args": [
            "chart"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 255
        }
      ],
      "go.Figure": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 272
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 684
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 865
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1225
        }
      ],
      "fig.update_layout": [
        {
          "args": [],
          "kwargs": {
            "height": "<value>",
            "margin": "<value>",
            "annotations": "<value>"
          },
          "line_number": 296
        },
        {
          "args": [],
          "kwargs": {
            "xaxis_title": "<value>",
            "yaxis_title": "<value>",
            "xaxis": "<value>",
            "margin": "<value>",
            "height": "<value>"
          },
          "line_number": 553
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "xaxis": "<value>",
            "yaxis": "<value>",
            "barmode": "<value>",
            "height": "<value>",
            "legend": "<value>",
            "plot_bgcolor": "<value>",
            "paper_bgcolor": "<value>",
            "margin": "<value>"
          },
          "line_number": 707
        },
        {
          "args": [],
          "kwargs": {
            "polar": "<value>",
            "title": "<value>",
            "showlegend": "<value>"
          },
          "line_number": 888
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "xaxis_title": "<value>",
            "yaxis_title": "<value>",
            "showlegend": "<value>",
            "height": "<value>",
            "margin": "<value>",
            "xaxis": "<value>"
          },
          "line_number": 1243
        }
      ],
      "head": [
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 385
        },
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 425
        },
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 461
        },
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 534
        },
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 576
        },
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 1142
        },
        {
          "args": [
            "top_n"
          ],
          "kwargs": {},
          "line_number": 1222
        }
      ],
      "ax.barh": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 391
        }
      ],
      "enumerate": [
        {
          "args": [
            "bars"
          ],
          "kwargs": {},
          "line_number": 394
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 760
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 945
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 961
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 977
        },
        {
          "args": [
            "x_values"
          ],
          "kwargs": {},
          "line_number": 1158
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1200
        },
        {
          "args": [
            "matchups"
          ],
          "kwargs": {},
          "line_number": 1045
        },
        {
          "args": [
            "results_per_round"
          ],
          "kwargs": {},
          "line_number": 1293
        }
      ],
      "ax.set_xlabel": [
        {
          "args": [
            "'Championship Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 404
        }
      ],
      "set_visible": [
        {
          "args": [
            "False"
          ],
          "kwargs": {},
          "line_number": 408
        },
        {
          "args": [
            "False"
          ],
          "kwargs": {},
          "line_number": 409
        }
      ],
      "ax.set_xlim": [
        {
          "args": [
            "0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 412
        },
        {
          "args": [
            "0",
            "100"
          ],
          "kwargs": {},
          "line_number": 923
        }
      ],
      "set_index": [
        {
          "args": [
            "'teamName'"
          ],
          "kwargs": {},
          "line_number": 430
        }
      ],
      "plt.figure": [
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 433
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 1154
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 1188
        }
      ],
      "sns.heatmap": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "annot": "<value>",
            "fmt": "<value>",
            "cmap": "<value>",
            "linewidths": "<value>",
            "cbar_kws": "<value>"
          },
          "line_number": 436
        }
      ],
      "plt.xlabel": [
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 440
        },
        {
          "args": [
            "x_label"
          ],
          "kwargs": {},
          "line_number": 1162
        },
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 1207
        }
      ],
      "plt.ylabel": [
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 441
        }
      ],
      "plt.title": [
        {
          "args": [
            "'Playoff Advancement Probabilities by Round'"
          ],
          "kwargs": {},
          "line_number": 442
        },
        {
          "args": [
            "'Playoff Round Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 1208
        },
        {
          "args": [
            "title"
          ],
          "kwargs": {},
          "line_number": 1164
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1166
        }
      ],
      "ax.set_xticklabels": [
        {
          "args": [
            "round_labels"
          ],
          "kwargs": {},
          "line_number": 445
        }
      ],
      "plt.xticks": [
        {
          "args": [],
          "kwargs": {
            "rotation": "<value>",
            "ha": "<value>"
          },
          "line_number": 448
        }
      ],
      "copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 468
        }
      ],
      "round": [
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 475
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 472
        }
      ],
      "format": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 503
        }
      ],
      "max_values.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 512
        }
      ],
      "st.dataframe": [
        {
          "args": [
            "styled_df"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 519
        }
      ],
      "px.bar": [
        {
          "args": [
            "top_matchups"
          ],
          "kwargs": {
            "y": "<value>",
            "x": "<value>",
            "orientation": "<value>",
            "labels": "<value>",
            "title": "<value>",
            "text": "<value>"
          },
          "line_number": 537
        }
      ],
      "fig.update_traces": [
        {
          "args": [],
          "kwargs": {
            "texttemplate": "<value>",
            "textposition": "<value>",
            "marker_color": "<value>"
          },
          "line_number": 548
        }
      ],
      "st.plotly_chart": [
        {
          "args": [
            "fig"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 562
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 817
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 900
        }
      ],
      "top_matchups.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 579
        }
      ],
      "map": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 580
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 583
        }
      ],
      "st.subheader": [
        {
          "args": [
            "title"
          ],
          "kwargs": {},
          "line_number": 601
        },
        {
          "args": [
            "'Most Likely Playoff Outcome'"
          ],
          "kwargs": {},
          "line_number": 1268
        },
        {
          "args": [
            "round_name"
          ],
          "kwargs": {},
          "line_number": 1040
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1066
        }
      ],
      "_color_distance": [
        {
          "args": [
            "team1_color",
            "team2_color"
          ],
          "kwargs": {},
          "line_number": 677
        }
      ],
      "fig.add_trace": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 687
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 697
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 868
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 878
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1232
        }
      ],
      "fig.add_shape": [
        {
          "args": [],
          "kwargs": {
            "type": "<value>",
            "x0": "<value>",
            "y0": "<value>",
            "x1": "<value>",
            "y1": "<value>",
            "line": "<value>"
          },
          "line_number": 750
        }
      ],
      "playoff_results.get": [
        {
          "args": [
            "'champion'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 918
        },
        {
          "args": [
            "'team_results'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 919
        },
        {
          "args": [
            "'champion'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1036
        }
      ],
      "ax.axis": [
        {
          "args": [
            "'off'"
          ],
          "kwargs": {},
          "line_number": 927
        }
      ],
      "round_positions.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1018
        }
      ],
      "bracket_progression.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1039
        }
      ],
      "df.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1094
        }
      ],
      "plt.barh": [
        {
          "args": [
            "y_values",
            "x_values"
          ],
          "kwargs": {},
          "line_number": 1155
        },
        {
          "args": [
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {
            "left": "<value>",
            "height": "<value>",
            "label": "<value>",
            "alpha": "<value>"
          },
          "line_number": 1201
        }
      ],
      "plt.tight_layout": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1168
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1211
        }
      ],
      "teams_to_plot.sort_values": [
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 1185
        },
        {
          "args": [
            "metric"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 1142
        }
      ],
      "np.arange": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1195
        }
      ],
      "np.zeros": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1199
        }
      ],
      "plt.yticks": [
        {
          "args": [
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1206
        }
      ],
      "plt.legend": [
        {
          "args": [],
          "kwargs": {
            "loc": "<value>"
          },
          "line_number": 1209
        }
      ],
      "top_teams.iterrows": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1228
        }
      ],
      "most_common_bracket.get": [
        {
          "args": [
            "'count'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1271
        },
        {
          "args": [
            "'probability'",
            "0"
          ],
          "kwargs": {},
          "line_number": 1272
        },
        {
          "args": [
            "'bracket'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1278
        }
      ],
      "st.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1275
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1054
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1058
        }
      ],
      "len": [
        {
          "args": [
            "dataframes"
          ],
          "kwargs": {},
          "line_number": 1327
        },
        {
          "args": [
            "top_teams"
          ],
          "kwargs": {},
          "line_number": 1195
        },
        {
          "args": [
            "top_teams"
          ],
          "kwargs": {},
          "line_number": 1199
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 942
        },
        {
          "args": [
            "models"
          ],
          "kwargs": {},
          "line_number": 754
        },
        {
          "args": [
            "matchups"
          ],
          "kwargs": {},
          "line_number": 1043
        },
        {
          "args": [
            "cols"
          ],
          "kwargs": {},
          "line_number": 1046
        },
        {
          "args": [
            "metrics"
          ],
          "kwargs": {},
          "line_number": 250
        },
        {
          "args": [
            "bracket_results"
          ],
          "kwargs": {},
          "line_number": 1301
        },
        {
          "args": [
            "parts"
          ],
          "kwargs": {},
          "line_number": 1305
        }
      ],
      "range": [
        {
          "args": [
            "0",
            "n_charts",
            "n_cols"
          ],
          "kwargs": {},
          "line_number": 1331
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1336
        },
        {
          "args": [
            "results_count"
          ],
          "kwargs": {},
          "line_number": 1300
        }
      ],
      "requests.get": [
        {
          "args": [
            "logo_url"
          ],
          "kwargs": {
            "headers": "<value>",
            "stream": "<value>",
            "timeout": "<value>"
          },
          "line_number": 41
        }
      ],
      "team_abbrev.upper": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 103
        }
      ],
      "bar.get_height": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 138
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 400
        }
      ],
      "ax.annotate": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "xy": "<value>",
            "xytext": "<value>",
            "textcoords": "<value>",
            "ha": "<value>",
            "va": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 139
        }
      ],
      "win_distribution.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 161
        }
      ],
      "st.warning": [
        {
          "args": [
            "'Team data not available for comparison'"
          ],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [
            "'No valid metrics available for comparison'"
          ],
          "kwargs": {},
          "line_number": 226
        },
        {
          "args": [
            "'No bracket data available'"
          ],
          "kwargs": {},
          "line_number": 1264
        }
      ],
      "get_team_color": [
        {
          "args": [
            "team1_abbrev"
          ],
          "kwargs": {},
          "line_number": 268
        },
        {
          "args": [
            "team2_abbrev"
          ],
          "kwargs": {},
          "line_number": 269
        },
        {
          "args": [
            "team1_abbrev"
          ],
          "kwargs": {},
          "line_number": 669
        },
        {
          "args": [
            "team2_abbrev"
          ],
          "kwargs": {},
          "line_number": 670
        },
        {
          "args": [
            "team_abbrev"
          ],
          "kwargs": {},
          "line_number": 1230
        }
      ],
      "go.Indicator": [
        {
          "args": [],
          "kwargs": {
            "mode": "<value>",
            "value": "<value>",
            "domain": "<value>",
            "title": "<value>",
            "gauge": "<value>"
          },
          "line_number": 272
        }
      ],
      "bar.get_width": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 395
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 140
        }
      ],
      "ax.text": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "va": "<value>"
          },
          "line_number": 400
        },
        {
          "args": [
            "<complex-arg>",
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 955
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>"
          },
          "line_number": 957
        },
        {
          "args": [
            "<complex-arg>",
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 971
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>"
          },
          "line_number": 973
        },
        {
          "args": [
            "<complex-arg>",
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 988
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>"
          },
          "line_number": 991
        },
        {
          "args": [
            "<complex-arg>",
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 1006
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "color": "<value>",
            "ha": "<value>",
            "fontweight": "<value>"
          },
          "line_number": 1009
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "'\ud83c\udfc6'"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "ha": "<value>",
            "va": "<value>"
          },
          "line_number": 1014
        },
        {
          "args": [
            "x_pos",
            "98",
            "round_name"
          ],
          "kwargs": {
            "fontsize": "<value>",
            "fontweight": "<value>",
            "ha": "<value>"
          },
          "line_number": 1019
        }
      ],
      "plt.gcf": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 451
        }
      ],
      "max": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 495
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 496
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 497
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 498
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 499
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1117
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 412
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 848
        },
        {
          "args": [
            "100",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 556
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 556
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1250
        }
      ],
      "styled_df.applymap": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "subset": "<value>"
          },
          "line_number": 513
        }
      ],
      "st.info": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 530
        }
      ],
      "display_df.rename": [
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 584
        },
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 591
        }
      ],
      "hex_color.lstrip": [
        {
          "args": [
            "'#'"
          ],
          "kwargs": {},
          "line_number": 621
        }
      ],
      "tuple": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 623
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 630
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 635
        }
      ],
      "color1.startswith": [
        {
          "args": [
            "'rgb'"
          ],
          "kwargs": {},
          "line_number": 628
        }
      ],
      "color2.startswith": [
        {
          "args": [
            "'rgb'"
          ],
          "kwargs": {},
          "line_number": 634
        }
      ],
      "models.append": [
        {
          "args": [
            "'Simulation'"
          ],
          "kwargs": {},
          "line_number": 665
        }
      ],
      "probs.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 666
        }
      ],
      "go.Bar": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "name": "<value>",
            "marker_color": "<value>",
            "hoverinfo": "<value>",
            "hovertemplate": "<value>"
          },
          "line_number": 687
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "name": "<value>",
            "marker_color": "<value>",
            "hoverinfo": "<value>",
            "hovertemplate": "<value>"
          },
          "line_number": 697
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "orientation": "<value>",
            "marker_color": "<value>",
            "text": "<value>",
            "textposition": "<value>",
            "name": "<value>"
          },
          "line_number": 1232
        }
      ],
      "go.Scatterpolar": [
        {
          "args": [],
          "kwargs": {
            "r": "<value>",
            "theta": "<value>",
            "fill": "<value>",
            "name": "<value>",
            "line": "<value>",
            "fillcolor": "<value>"
          },
          "line_number": 868
        },
        {
          "args": [],
          "kwargs": {
            "r": "<value>",
            "theta": "<value>",
            "fill": "<value>",
            "name": "<value>",
            "line": "<value>",
            "fillcolor": "<value>"
          },
          "line_number": 878
        }
      ],
      "st.error": [
        {
          "args": [
            "'No playoff results to display'"
          ],
          "kwargs": {},
          "line_number": 913
        },
        {
          "args": [
            "'No playoff results to display'"
          ],
          "kwargs": {},
          "line_number": 1031
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1138
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1181
        }
      ],
      "matchup.get": [
        {
          "args": [
            "'result'",
            "''"
          ],
          "kwargs": {},
          "line_number": 948
        },
        {
          "args": [
            "'result'",
            "''"
          ],
          "kwargs": {},
          "line_number": 964
        },
        {
          "args": [
            "'result'",
            "''"
          ],
          "kwargs": {},
          "line_number": 980
        },
        {
          "args": [
            "'conference'",
            "''"
          ],
          "kwargs": {},
          "line_number": 981
        },
        {
          "args": [
            "'result'",
            "''"
          ],
          "kwargs": {},
          "line_number": 1000
        },
        {
          "args": [
            "'result'",
            "''"
          ],
          "kwargs": {},
          "line_number": 1050
        }
      ],
      "team_positions.get": [
        {
          "args": [
            "winner",
            "50"
          ],
          "kwargs": {},
          "line_number": 967
        },
        {
          "args": [
            "winner",
            "50"
          ],
          "kwargs": {},
          "line_number": 984
        },
        {
          "args": [
            "winner",
            "50"
          ],
          "kwargs": {},
          "line_number": 1003
        }
      ],
      "st.columns": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1043
        },
        {
          "args": [
            "num_rounds"
          ],
          "kwargs": {},
          "line_number": 1287
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1333
        }
      ],
      "get_cmap": [
        {
          "args": [
            "cmap_name"
          ],
          "kwargs": {},
          "line_number": 1102
        }
      ],
      "cmap": [
        {
          "args": [
            "norm_val"
          ],
          "kwargs": {},
          "line_number": 1103
        }
      ],
      "x_values.max": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1147
        }
      ],
      "title": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1151
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1166
        }
      ],
      "plt.text": [
        {
          "args": [
            "<complex-arg>",
            "i",
            "<complex-arg>"
          ],
          "kwargs": {
            "va": "<value>"
          },
          "line_number": 1159
        }
      ],
      "zip": [
        {
          "args": [
            "rounds",
            "round_labels"
          ],
          "kwargs": {},
          "line_number": 1200
        },
        {
          "args": [
            "c1",
            "c2"
          ],
          "kwargs": {},
          "line_number": 641
        }
      ],
      "row.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 1229
        }
      ],
      "properties": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "width": "<value>",
            "height": "<value>"
          },
          "line_number": 240
        }
      ],
      "dict": [
        {
          "args": [],
          "kwargs": {
            "l": "<value>",
            "r": "<value>",
            "t": "<value>",
            "b": "<value>"
          },
          "line_number": 298
        },
        {
          "args": [],
          "kwargs": {
            "range": "<value>"
          },
          "line_number": 556
        },
        {
          "args": [],
          "kwargs": {
            "l": "<value>",
            "r": "<value>",
            "t": "<value>",
            "b": "<value>"
          },
          "line_number": 557
        },
        {
          "args": [],
          "kwargs": {
            "text": "<value>",
            "font": "<value>",
            "xanchor": "<value>",
            "x": "<value>",
            "yanchor": "<value>",
            "y": "<value>"
          },
          "line_number": 708
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "tickfont": "<value>",
            "gridcolor": "<value>"
          },
          "line_number": 716
        },
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "tickfont": "<value>",
            "gridcolor": "<value>",
            "range": "<value>"
          },
          "line_number": 721
        },
        {
          "args": [],
          "kwargs": {
            "orientation": "<value>",
            "yanchor": "<value>",
            "y": "<value>",
            "xanchor": "<value>",
            "x": "<value>",
            "bgcolor": "<value>",
            "bordercolor": "<value>",
            "font": "<value>"
          },
          "line_number": 730
        },
        {
          "args": [],
          "kwargs": {
            "t": "<value>",
            "b": "<value>",
            "l": "<value>",
            "r": "<value>"
          },
          "line_number": 746
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "width": "<value>",
            "dash": "<value>"
          },
          "line_number": 756
        },
        {
          "args": [],
          "kwargs": {
            "radialaxis": "<value>"
          },
          "line_number": 889
        },
        {
          "args": [],
          "kwargs": {
            "l": "<value>",
            "r": "<value>",
            "t": "<value>",
            "b": "<value>"
          },
          "line_number": 1249
        },
        {
          "args": [],
          "kwargs": {
            "range": "<value>"
          },
          "line_number": 1250
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>"
          },
          "line_number": 300
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>"
          },
          "line_number": 306
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 873
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 883
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 710
        },
        {
          "args": [],
          "kwargs": {
            "text": "<value>",
            "font": "<value>"
          },
          "line_number": 717
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 718
        },
        {
          "args": [],
          "kwargs": {
            "text": "<value>",
            "font": "<value>"
          },
          "line_number": 722
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 723
        },
        {
          "args": [],
          "kwargs": {
            "size": "<value>",
            "color": "<value>"
          },
          "line_number": 738
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 768
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 781
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 796
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 810
        },
        {
          "args": [],
          "kwargs": {
            "visible": "<value>",
            "range": "<value>"
          },
          "line_number": 890
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 717
        },
        {
          "args": [],
          "kwargs": {
            "color": "<value>",
            "size": "<value>"
          },
          "line_number": 722
        }
      ],
      "results_df.sort_values": [
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 385
        },
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 425
        },
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 461
        },
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 1222
        }
      ],
      "matchups_df.sort_values": [
        {
          "args": [
            "'probability'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 534
        },
        {
          "args": [
            "'probability'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 576
        }
      ],
      "hex_to_rgb": [
        {
          "args": [
            "color1"
          ],
          "kwargs": {},
          "line_number": 632
        },
        {
          "args": [
            "color2"
          ],
          "kwargs": {},
          "line_number": 637
        }
      ],
      "fig.add_annotation": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "font": "<value>",
            "bgcolor": "<value>",
            "borderpad": "<value>",
            "opacity": "<value>"
          },
          "line_number": 763
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "font": "<value>",
            "bgcolor": "<value>",
            "borderpad": "<value>",
            "opacity": "<value>"
          },
          "line_number": 776
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "arrowhead": "<value>",
            "arrowcolor": "<value>",
            "font": "<value>",
            "bgcolor": "<value>",
            "bordercolor": "<value>",
            "borderpad": "<value>"
          },
          "line_number": 789
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "text": "<value>",
            "showarrow": "<value>",
            "arrowhead": "<value>",
            "arrowcolor": "<value>",
            "font": "<value>",
            "bgcolor": "<value>",
            "bordercolor": "<value>",
            "borderpad": "<value>"
          },
          "line_number": 803
        }
      ],
      "team1_values.append": [
        {
          "args": [
            "0.5"
          ],
          "kwargs": {},
          "line_number": 861
        },
        {
          "args": [
            "norm_val1"
          ],
          "kwargs": {},
          "line_number": 854
        },
        {
          "args": [
            "0.5"
          ],
          "kwargs": {},
          "line_number": 858
        }
      ],
      "team2_values.append": [
        {
          "args": [
            "0.5"
          ],
          "kwargs": {},
          "line_number": 862
        },
        {
          "args": [
            "norm_val2"
          ],
          "kwargs": {},
          "line_number": 855
        },
        {
          "args": [
            "0.5"
          ],
          "kwargs": {},
          "line_number": 859
        }
      ],
      "min": [
        {
          "args": [
            "<complex-arg>",
            "4"
          ],
          "kwargs": {},
          "line_number": 1043
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1116
        },
        {
          "args": [
            "n_cols",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1333
        },
        {
          "args": [
            "n_cols",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1336
        }
      ],
      "path_data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1071
        }
      ],
      "applymap": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "subset": "<value>"
          },
          "line_number": 1119
        }
      ],
      "isinstance": [
        {
          "args": [
            "logo_url",
            "str"
          ],
          "kwargs": {},
          "line_number": 34
        },
        {
          "args": [
            "top_val",
            "str"
          ],
          "kwargs": {},
          "line_number": 207
        },
        {
          "args": [
            "bottom_val",
            "str"
          ],
          "kwargs": {},
          "line_number": 209
        },
        {
          "args": [
            "val1",
            "str"
          ],
          "kwargs": {},
          "line_number": 839
        },
        {
          "args": [
            "val2",
            "str"
          ],
          "kwargs": {},
          "line_number": 841
        },
        {
          "args": [
            "val1",
            "str"
          ],
          "kwargs": {},
          "line_number": 338
        },
        {
          "args": [
            "val2",
            "str"
          ],
          "kwargs": {},
          "line_number": 340
        }
      ],
      "logo_url.startswith": [
        {
          "args": [
            "'http'"
          ],
          "kwargs": {},
          "line_number": 34
        }
      ],
      "BytesIO": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 45
        }
      ],
      "Image.open": [
        {
          "args": [
            "img_data"
          ],
          "kwargs": {},
          "line_number": 46
        },
        {
          "args": [
            "img_data"
          ],
          "kwargs": {},
          "line_number": 49
        }
      ],
      "img.verify": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 47
        }
      ],
      "img_data.seek": [
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 48
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 208
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 210
        },
        {
          "args": [
            "top_val"
          ],
          "kwargs": {},
          "line_number": 214
        },
        {
          "args": [
            "bottom_val"
          ],
          "kwargs": {},
          "line_number": 215
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 840
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 842
        },
        {
          "args": [
            "val1"
          ],
          "kwargs": {},
          "line_number": 846
        },
        {
          "args": [
            "val2"
          ],
          "kwargs": {},
          "line_number": 847
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 339
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 341
        }
      ],
      "comparison_data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 217
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 352
        }
      ],
      "bar.get_y": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 400
        }
      ],
      "style_df": [
        {
          "args": [
            "x",
            "max_val",
            "col"
          ],
          "kwargs": {},
          "line_number": 514
        }
      ],
      "int": [
        {
          "args": [
            "<complex-arg>",
            "16"
          ],
          "kwargs": {},
          "line_number": 623
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1106
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 630
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 635
        }
      ],
      "st.markdown": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1053
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1297
        },
        {
          "args": [
            "'### \ud83c\udfc6 STANLEY CUP CHAMPION \ud83c\udfc6'"
          ],
          "kwargs": {},
          "line_number": 1062
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1307
        }
      ],
      "metric.replace": [
        {
          "args": [
            "'_'",
            "' '"
          ],
          "kwargs": {},
          "line_number": 1151
        },
        {
          "args": [
            "'_'",
            "' '"
          ],
          "kwargs": {},
          "line_number": 1166
        }
      ],
      "plot_func": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "null": "**<value>"
          },
          "line_number": 1338
        }
      ],
      "top_val.strip": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 208
        }
      ],
      "bottom_val.strip": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 210
        }
      ],
      "encode": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "color": "<value>",
            "tooltip": "<value>"
          },
          "line_number": 240
        }
      ],
      "title.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 530
        }
      ],
      "val1.strip": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 840
        },
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 339
        }
      ],
      "val2.strip": [
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 842
        },
        {
          "args": [
            "'%'"
          ],
          "kwargs": {},
          "line_number": 341
        }
      ],
      "abs": [
        {
          "args": [
            "val1"
          ],
          "kwargs": {},
          "line_number": 848
        },
        {
          "args": [
            "val2"
          ],
          "kwargs": {},
          "line_number": 848
        }
      ],
      "color_cells": [
        {
          "args": [
            "x",
            "min_val",
            "max_val",
            "cmap"
          ],
          "kwargs": {},
          "line_number": 1121
        }
      ],
      "bar.get_x": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 140
        }
      ],
      "split": [
        {
          "args": [
            "','"
          ],
          "kwargs": {},
          "line_number": 630
        },
        {
          "args": [
            "','"
          ],
          "kwargs": {},
          "line_number": 635
        }
      ],
      "result.split": [
        {
          "args": [
            "' over '"
          ],
          "kwargs": {},
          "line_number": 1303
        }
      ],
      "mark_bar": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 240
        }
      ],
      "alt.X": [
        {
          "args": [
            "'value:Q'"
          ],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 241
        }
      ],
      "alt.Y": [
        {
          "args": [
            "'Metric:N'"
          ],
          "kwargs": {},
          "line_number": 242
        }
      ],
      "alt.Color": [
        {
          "args": [
            "'variable:N'"
          ],
          "kwargs": {
            "title": "<value>",
            "scale": "<value>"
          },
          "line_number": 243
        }
      ],
      "st.text": [
        {
          "args": [
            "result"
          ],
          "kwargs": {},
          "line_number": 1309
        }
      ],
      "team1_data.get": [
        {
          "args": [
            "'teamName'",
            "'Team 1'"
          ],
          "kwargs": {},
          "line_number": 354
        }
      ],
      "team2_data.get": [
        {
          "args": [
            "'teamName'",
            "'Team 2'"
          ],
          "kwargs": {},
          "line_number": 355
        }
      ],
      "color1.strip": [
        {
          "args": [
            "'rgb()'"
          ],
          "kwargs": {},
          "line_number": 630
        }
      ],
      "color2.strip": [
        {
          "args": [
            "'rgb()'"
          ],
          "kwargs": {},
          "line_number": 635
        }
      ],
      "alt.Chart": [
        {
          "args": [
            "df_melted"
          ],
          "kwargs": {},
          "line_number": 240
        }
      ],
      "alt.Scale": [
        {
          "args": [],
          "kwargs": {
            "domain": "<value>",
            "range": "<value>"
          },
          "line_number": 244
        }
      ]
    }
  },
  "streamlit_app/utils/matchup_utils.py": {
    "functions": {
      "create_matchup_data": {
        "params": [
          "top_seed",
          "bottom_seed",
          "team_data"
        ],
        "defaults": {},
        "docstring": "Create matchup data for model input\n\nArgs:\n    top_seed: Dictionary with top seed team information\n    bottom_seed: Dictionary with bottom seed team information\n    team_data: DataFrame with team statistics\n    \nReturns:\n    DataFrame: Matchup data for prediction",
        "line_number": 12,
        "end_line": 70
      },
      "generate_all_matchup_combinations": {
        "params": [
          "team_data"
        ],
        "defaults": {},
        "docstring": "Generate all possible matchup combinations between teams\n\nArgs:\n    team_data: DataFrame with team data\n    \nReturns:\n    dict: Dictionary of all possible matchups",
        "line_number": 72,
        "end_line": 112
      },
      "get_matchup_data": {
        "params": [
          "top_seed",
          "bottom_seed",
          "matchup_dict",
          "team_data"
        ],
        "defaults": {
          "team_data": null
        },
        "docstring": "Get matchup data from pre-calculated dictionary or create it\n\nArgs:\n    top_seed: Dictionary or string with top seed team information\n    bottom_seed: Dictionary or string with bottom seed team information\n    matchup_dict: Dictionary of pre-calculated matchups\n    team_data: DataFrame with team data (optional if matchup_dict has the matchup)\n    \nReturns:\n    DataFrame: Matchup data for prediction",
        "line_number": 114,
        "end_line": 158
      },
      "analyze_matchup_data": {
        "params": [
          "matchup_dict"
        ],
        "defaults": {},
        "docstring": "Analyze matchup data quality and availability\n\nArgs:\n    matchup_dict: Dictionary of matchups\n    \nReturns:\n    dict: Analysis of matchup data",
        "line_number": 160,
        "end_line": 211
      }
    },
    "calls": {
      "top_seed.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 27
        },
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 128
        }
      ],
      "bottom_seed.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 28
        },
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 133
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 59
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 158
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 153
        }
      ],
      "unique": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 86
        }
      ],
      "list": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 209
        }
      ],
      "isinstance": [
        {
          "args": [
            "top_seed",
            "dict"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "bottom_seed",
            "dict"
          ],
          "kwargs": {},
          "line_number": 132
        },
        {
          "args": [
            "matchup_df",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [
            "top_seed",
            "str"
          ],
          "kwargs": {},
          "line_number": 144
        },
        {
          "args": [
            "bottom_seed",
            "str"
          ],
          "kwargs": {},
          "line_number": 144
        }
      ],
      "set": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 173
        }
      ],
      "matchup_dict.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 178
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 195
        }
      ],
      "len": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 208
        },
        {
          "args": [
            "matchup_dict"
          ],
          "kwargs": {},
          "line_number": 170
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 48
        },
        {
          "args": [
            "CRITICAL_FEATURES"
          ],
          "kwargs": {},
          "line_number": 48
        }
      ],
      "validate_and_fix": [
        {
          "args": [
            "matchup_df",
            "'pre-model'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 65
        }
      ],
      "print": [
        {
          "args": [
            "'Error: team_data missing teamAbbrev column'"
          ],
          "kwargs": {},
          "line_number": 83
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 48
        }
      ],
      "combinations": [
        {
          "args": [
            "all_teams",
            "2"
          ],
          "kwargs": {},
          "line_number": 90
        }
      ],
      "to_dict": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 101
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 150
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 151
        }
      ],
      "create_matchup_data": [
        {
          "args": [
            "team1_dict",
            "team2_dict",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "team2_dict",
            "team1_dict",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 110
        },
        {
          "args": [
            "top_seed",
            "bottom_seed",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 155
        }
      ],
      "str": [
        {
          "args": [
            "top_seed"
          ],
          "kwargs": {},
          "line_number": 130
        },
        {
          "args": [
            "bottom_seed"
          ],
          "kwargs": {},
          "line_number": 135
        }
      ],
      "all_features.update": [
        {
          "args": [
            "diff_features"
          ],
          "kwargs": {},
          "line_number": 181
        }
      ],
      "sum": [
        {
          "args": [
            "top_team_filter"
          ],
          "kwargs": {},
          "line_number": 35
        },
        {
          "args": [
            "bottom_team_filter"
          ],
          "kwargs": {},
          "line_number": 35
        }
      ],
      "add": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 185
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 187
        }
      ],
      "any": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 204
        }
      ],
      "pd.notna": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 54
        }
      ],
      "isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 204
        }
      ]
    }
  },
  "streamlit_app/utils/debug_utils.py": {
    "functions": {
      "log_debug_message": {
        "params": [
          "message",
          "level"
        ],
        "defaults": {
          "level": "info"
        },
        "docstring": "Log a debug message with the appropriate level",
        "line_number": 49,
        "end_line": 62
      },
      "data_health_dashboard": {
        "params": [
          "team_data",
          "standings_df",
          "advanced_stats_df"
        ],
        "defaults": {
          "standings_df": null,
          "advanced_stats_df": null
        },
        "docstring": "Generate a comprehensive data health dashboard for the NHL playoff model.\n\nArgs:\n    team_data: Combined team data DataFrame\n    standings_df: Raw standings DataFrame\n    advanced_stats_df: Raw advanced stats DataFrame\n\nReturns:\n    dict: Data health metrics and validation results",
        "line_number": 64,
        "end_line": 182
      },
      "model_diagnostics_dashboard": {
        "params": [
          "models",
          "team_data"
        ],
        "defaults": {
          "team_data": null
        },
        "docstring": "Generate a comprehensive model diagnostics dashboard.\n\nArgs:\n    models: Dictionary with model information and objects\n    team_data: Team data DataFrame for feature validation\n    \nReturns:\n    dict: Model diagnostics metrics and validation results",
        "line_number": 184,
        "end_line": 277
      },
      "matchup_validation_dashboard": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Validate a matchup for prediction and provide detailed diagnostics.\n\nArgs:\n    matchup_df: DataFrame with matchup data\n    models: Dictionary with model information\n\nReturns:\n    dict: Validation results and diagnostics",
        "line_number": 279,
        "end_line": 363
      },
      "simulate_playoff_series_with_diagnostics": {
        "params": [
          "matchup_df",
          "models",
          "n_simulations"
        ],
        "defaults": {
          "n_simulations": 1000
        },
        "docstring": "Simulate a playoff series with detailed diagnostics.\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information\n    n_simulations: Number of simulations to run\n    \nReturns:\n    dict: Simulation results with detailed diagnostics",
        "line_number": 365,
        "end_line": 458
      },
      "create_model_interpretation_graph": {
        "params": [
          "model_diagnostics"
        ],
        "defaults": {},
        "docstring": "Create a feature importance visualization from model diagnostics.\n\nArgs:\n    model_diagnostics: Dictionary from model_diagnostics_dashboard()\n    \nReturns:\n    fig: Matplotlib figure object",
        "line_number": 460,
        "end_line": 521
      },
      "create_home_ice_impact_graph": {
        "params": [
          "diagnostics"
        ],
        "defaults": {},
        "docstring": "Create a visualization of home ice advantage impact.\n\nArgs:\n    diagnostics: Dictionary from simulate_playoff_series_with_diagnostics()\n    \nReturns:\n    fig: Matplotlib figure object",
        "line_number": 523,
        "end_line": 573
      },
      "create_convergence_analysis_graph": {
        "params": [
          "diagnostics"
        ],
        "defaults": {},
        "docstring": "Create a visualization of simulation convergence.\n\nArgs:\n    diagnostics: Dictionary from simulate_playoff_series_with_diagnostics()\n    \nReturns:\n    fig: Matplotlib figure object",
        "line_number": 575,
        "end_line": 639
      },
      "create_series_outcome_graph": {
        "params": [
          "diagnostics"
        ],
        "defaults": {},
        "docstring": "Create a visualization of series outcomes.\n\nArgs:\n    diagnostics: Dictionary from simulate_playoff_series_with_diagnostics()\n    \nReturns:\n    fig: Matplotlib figure object",
        "line_number": 641,
        "end_line": 733
      },
      "create_feature_heatmap": {
        "params": [
          "team_data",
          "critical_features"
        ],
        "defaults": {
          "critical_features": null
        },
        "docstring": "Create a heatmap visualizing the availability and values of features.\n\nArgs:\n    team_data: DataFrame with team data\n    critical_features: List of critical features to highlight\n    \nReturns:\n    fig: Matplotlib figure object",
        "line_number": 735,
        "end_line": 812
      },
      "run_api_connection_test": {
        "params": [],
        "defaults": {},
        "docstring": "Test API connections to various data sources.\n\nReturns:\n    dict: Results of the connection tests",
        "line_number": 814,
        "end_line": 870
      },
      "monitor_memory_usage": {
        "params": [],
        "defaults": {},
        "docstring": "Monitor memory usage of the application.\n\nReturns:\n    dict: Memory usage statistics",
        "line_number": 872,
        "end_line": 901
      },
      "create_debug_report": {
        "params": [
          "team_data",
          "models",
          "matchup_df",
          "standings_df",
          "advanced_stats_df"
        ],
        "defaults": {
          "matchup_df": null,
          "standings_df": null,
          "advanced_stats_df": null
        },
        "docstring": "Create a comprehensive debug report for the NHL playoff model.\n\nArgs:\n    team_data: Combined team data DataFrame\n    models: Dictionary with model information\n    matchup_df: Optional matchup DataFrame for validation\n    standings_df: Optional standings DataFrame for validation\n    advanced_stats_df: Optional advanced stats DataFrame for validation\n    \nReturns:\n    dict: Comprehensive debug report",
        "line_number": 903,
        "end_line": 941
      },
      "get_data_quality_metrics": {
        "params": [
          "team_data"
        ],
        "defaults": {},
        "docstring": "Calculate data quality metrics for team data\n\nArgs:\n    team_data (DataFrame): Team data to analyze\n    \nReturns:\n    dict: Dictionary of data quality metrics",
        "line_number": 943,
        "end_line": 994
      },
      "analyze_feature_distributions": {
        "params": [
          "team_data",
          "feature_name"
        ],
        "defaults": {},
        "docstring": "Analyze the distribution of a feature across teams\n\nArgs:\n    team_data (DataFrame): Team data\n    feature_name (str): Name of the feature to analyze\n    \nReturns:\n    tuple: (matplotlib figure, stats dictionary)",
        "line_number": 996,
        "end_line": 1036
      },
      "check_simulation_consistency": {
        "params": [
          "playoff_matchups",
          "models",
          "n_runs",
          "n_sims_per_run"
        ],
        "defaults": {
          "n_runs": 5,
          "n_sims_per_run": 100
        },
        "docstring": "Run multiple simulations to check for consistency in results\n\nArgs:\n    playoff_matchups (dict): Dictionary of playoff matchups\n    models (dict): Dictionary of models\n    n_runs (int): Number of separate simulation runs to execute\n    n_sims_per_run (int): Number of simulations per run\n    \nReturns:\n    dict: Consistency metrics",
        "line_number": 1038,
        "end_line": 1131
      },
      "check_model_loading": {
        "params": [
          "model_folder"
        ],
        "defaults": {},
        "docstring": "Check if models can be loaded properly\n\nArgs:\n    model_folder (str): Path to the model folder\n    \nReturns:\n    dict: Model loading status",
        "line_number": 1133,
        "end_line": 1172
      },
      "test_matchup_prediction": {
        "params": [
          "team1_abbrev",
          "team2_abbrev",
          "team_data",
          "models"
        ],
        "defaults": {},
        "docstring": "Test prediction for a specific matchup\n\nArgs:\n    team1_abbrev (str): Abbreviation of first team (higher seed)\n    team2_abbrev (str): Abbreviation of second team (lower seed)\n    team_data (DataFrame): Team data\n    models (dict): Dictionary of models\n    \nReturns:\n    dict: Prediction results",
        "line_number": 1174,
        "end_line": 1245
      },
      "monitor_data_refresh": {
        "params": [],
        "defaults": {},
        "docstring": "Monitor data refresh status and frequency\n\nReturns:\n    dict: Data refresh statistics",
        "line_number": 1247,
        "end_line": 1274
      }
    },
    "calls": {
      "logging.basicConfig": [
        {
          "args": [],
          "kwargs": {
            "level": "<value>",
            "format": "<value>",
            "handlers": "<value>"
          },
          "line_number": 38
        }
      ],
      "logging.getLogger": [
        {
          "args": [
            "'nhl_playoff_debug'"
          ],
          "kwargs": {},
          "line_number": 47
        }
      ],
      "models.get": [
        {
          "args": [
            "'mode'",
            "'unknown'"
          ],
          "kwargs": {},
          "line_number": 209
        },
        {
          "args": [
            "'home_ice_boost'",
            "HOME_ICE_ADVANTAGE"
          ],
          "kwargs": {},
          "line_number": 210
        },
        {
          "args": [
            "'mode'",
            "'unknown'"
          ],
          "kwargs": {},
          "line_number": 1160
        },
        {
          "args": [
            "'home_ice_boost'",
            "0.039"
          ],
          "kwargs": {},
          "line_number": 1163
        },
        {
          "args": [
            "'home_ice_boost'",
            "0.039"
          ],
          "kwargs": {},
          "line_number": 1226
        },
        {
          "args": [
            "'home_ice_boost'",
            "HOME_ICE_ADVANTAGE"
          ],
          "kwargs": {},
          "line_number": 412
        }
      ],
      "len": [
        {
          "args": [
            "diff_features"
          ],
          "kwargs": {},
          "line_number": 313
        },
        {
          "args": [
            "feature_importance"
          ],
          "kwargs": {},
          "line_number": 485
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 955
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 956
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 970
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 705
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 932
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 990
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 86
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 87
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "standings_df"
          ],
          "kwargs": {},
          "line_number": 149
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 150
        },
        {
          "args": [
            "advanced_stats_df"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 169
        },
        {
          "args": [
            "features"
          ],
          "kwargs": {},
          "line_number": 500
        },
        {
          "args": [
            "top_seed_outcomes"
          ],
          "kwargs": {},
          "line_number": 683
        },
        {
          "args": [
            "bottom_seed_outcomes"
          ],
          "kwargs": {},
          "line_number": 683
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 849
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 924
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 925
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 971
        },
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 1081
        },
        {
          "args": [
            "top_seed_outcomes"
          ],
          "kwargs": {},
          "line_number": 706
        },
        {
          "args": [
            "bottom_seed_outcomes"
          ],
          "kwargs": {},
          "line_number": 707
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 935
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 936
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 979
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1100
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "required_features"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 267
        },
        {
          "args": [
            "nan_features"
          ],
          "kwargs": {},
          "line_number": 320
        },
        {
          "args": [
            "required_features"
          ],
          "kwargs": {},
          "line_number": 331
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 332
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 100
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 220
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 264
        },
        {
          "args": [
            "required_features"
          ],
          "kwargs": {},
          "line_number": 264
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 329
        },
        {
          "args": [
            "required_features"
          ],
          "kwargs": {},
          "line_number": 329
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 774
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {},
          "line_number": 793
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 793
        },
        {
          "args": [
            "coeffs"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "features"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "importances"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "features"
          ],
          "kwargs": {},
          "line_number": 244
        }
      ],
      "predict_series": [
        {
          "args": [
            "matchup_df",
            "models",
            "n_simulations"
          ],
          "kwargs": {},
          "line_number": 380
        },
        {
          "args": [
            "matchup_df",
            "modified_models"
          ],
          "kwargs": {
            "n_simulations": "<value>"
          },
          "line_number": 406
        },
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {
            "n_simulations": "<value>"
          },
          "line_number": 422
        }
      ],
      "standard_results.get": [
        {
          "args": [
            "'top_seed'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 392
        },
        {
          "args": [
            "'bottom_seed'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 393
        },
        {
          "args": [
            "'win_probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 394
        },
        {
          "args": [
            "'home_win_prob'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 394
        }
      ],
      "plt.subplots": [
        {
          "args": [
            "1",
            "n_models"
          ],
          "kwargs": {
            "figsize": "<value>",
            "sharey": "<value>"
          },
          "line_number": 486
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 542
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 594
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 659
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 793
        },
        {
          "args": [
            "2",
            "1"
          ],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 1021
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 471
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 479
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 535
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 587
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 652
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 747
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 760
        }
      ],
      "enumerate": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 492
        },
        {
          "args": [
            "values"
          ],
          "kwargs": {},
          "line_number": 507
        },
        {
          "args": [
            "top_seed_probs"
          ],
          "kwargs": {},
          "line_number": 689
        },
        {
          "args": [
            "bottom_seed_probs"
          ],
          "kwargs": {},
          "line_number": 696
        },
        {
          "args": [
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 1089
        }
      ],
      "plt.tight_layout": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 520
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 572
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 638
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 732
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 811
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1034
        }
      ],
      "ax.plot": [
        {
          "args": [
            "home_ice_values",
            "win_probs"
          ],
          "kwargs": {
            "marker": "<value>",
            "linewidth": "<value>",
            "markersize": "<value>"
          },
          "line_number": 548
        },
        {
          "args": [
            "sim_counts",
            "win_probs"
          ],
          "kwargs": {
            "marker": "<value>",
            "linewidth": "<value>",
            "markersize": "<value>",
            "color": "<value>"
          },
          "line_number": 606
        }
      ],
      "ax.axvline": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 552
        },
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 518
        }
      ],
      "ax.text": [
        {
          "args": [
            "current_home_ice",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "color": "<value>"
          },
          "line_number": 553
        },
        {
          "args": [
            "0.02",
            "0.02",
            "explanation"
          ],
          "kwargs": {
            "transform": "<value>",
            "bbox": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 569
        },
        {
          "args": [
            "<complex-arg>",
            "final_prob",
            "<complex-arg>"
          ],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 611
        },
        {
          "args": [
            "0.02",
            "0.02",
            "explanation"
          ],
          "kwargs": {
            "transform": "<value>",
            "bbox": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 635
        },
        {
          "args": [
            "0.02",
            "0.98",
            "explanation"
          ],
          "kwargs": {
            "transform": "<value>",
            "va": "<value>",
            "bbox": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 729
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No feature importance data available'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 472
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No feature importance data available'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 480
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No home ice analysis data available'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 536
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No convergence analysis data available'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 588
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No series distribution data available'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 653
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No team data available'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 748
        },
        {
          "args": [
            "0.5",
            "0.5",
            "'No critical features available in data'"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 761
        },
        {
          "args": [
            "<complex-arg>",
            "j",
            "label"
          ],
          "kwargs": {
            "va": "<value>",
            "ha": "<value>",
            "color": "<value>"
          },
          "line_number": 510
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "ha": "<value>"
          },
          "line_number": 690
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "ha": "<value>"
          },
          "line_number": 697
        }
      ],
      "ax.axhline": [
        {
          "args": [],
          "kwargs": {
            "y": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 557
        },
        {
          "args": [],
          "kwargs": {
            "y": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 610
        },
        {
          "args": [],
          "kwargs": {
            "y": "<value>",
            "color": "<value>",
            "linestyle": "<value>",
            "alpha": "<value>"
          },
          "line_number": 614
        }
      ],
      "ax.set_xlabel": [
        {
          "args": [
            "'Home Ice Advantage Value'"
          ],
          "kwargs": {},
          "line_number": 560
        },
        {
          "args": [
            "'Number of Simulations (log scale)'"
          ],
          "kwargs": {},
          "line_number": 620
        },
        {
          "args": [
            "'Features'"
          ],
          "kwargs": {},
          "line_number": 804
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 514
        }
      ],
      "ax.set_ylabel": [
        {
          "args": [
            "'Win Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 561
        },
        {
          "args": [
            "'Win Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 621
        },
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 700
        },
        {
          "args": [
            "'Teams'"
          ],
          "kwargs": {},
          "line_number": 805
        }
      ],
      "ax.set_title": [
        {
          "args": [
            "'Impact of Home Ice Advantage on Win Probability'"
          ],
          "kwargs": {},
          "line_number": 562
        },
        {
          "args": [
            "'Convergence of Win Probability with Increasing Simulations'"
          ],
          "kwargs": {},
          "line_number": 622
        },
        {
          "args": [
            "'Playoff Series Outcome Distribution'"
          ],
          "kwargs": {},
          "line_number": 701
        },
        {
          "args": [
            "'Feature Availability and Values by Team'"
          ],
          "kwargs": {},
          "line_number": 803
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "fontsize": "<value>"
          },
          "line_number": 513
        }
      ],
      "ax.fill_between": [
        {
          "args": [
            "sim_counts",
            "ci_lowers",
            "ci_uppers"
          ],
          "kwargs": {
            "alpha": "<value>",
            "color": "<value>"
          },
          "line_number": 603
        }
      ],
      "ax.set_xscale": [
        {
          "args": [
            "'log'"
          ],
          "kwargs": {},
          "line_number": 617
        }
      ],
      "ax.set_ylim": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 627
        }
      ],
      "np.arange": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 683
        }
      ],
      "range": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 705
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 500
        },
        {
          "args": [
            "n_runs"
          ],
          "kwargs": {},
          "line_number": 1067
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 774
        }
      ],
      "ax.set_xticks": [
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 710
        }
      ],
      "ax.set_xticklabels": [
        {
          "args": [
            "all_outcomes"
          ],
          "kwargs": {},
          "line_number": 711
        },
        {
          "args": [
            "available_features"
          ],
          "kwargs": {
            "rotation": "<value>"
          },
          "line_number": 809
        }
      ],
      "ax.legend": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 714
        }
      ],
      "sum": [
        {
          "args": [
            "historical_dist"
          ],
          "kwargs": {},
          "line_number": 718
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 959
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 968
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 447
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1016
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 959
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 99
        }
      ],
      "copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 777
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 767
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 770
        }
      ],
      "sns.heatmap": [
        {
          "args": [
            "feature_data"
          ],
          "kwargs": {
            "cmap": "<value>",
            "ax": "<value>",
            "cbar_kws": "<value>",
            "mask": "<value>"
          },
          "line_number": 795
        },
        {
          "args": [
            "is_missing"
          ],
          "kwargs": {
            "cmap": "<value>",
            "ax": "<value>",
            "cbar": "<value>",
            "alpha": "<value>"
          },
          "line_number": 800
        }
      ],
      "feature_data.isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 799
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 796
        }
      ],
      "ax.set_yticklabels": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "rotation": "<value>"
          },
          "line_number": 808
        },
        {
          "args": [
            "features"
          ],
          "kwargs": {},
          "line_number": 503
        }
      ],
      "endpoints.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 837
        }
      ],
      "all": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 867
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 358
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 350
        }
      ],
      "psutil.Process": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 882
        }
      ],
      "process.memory_info": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 883
        }
      ],
      "psutil.virtual_memory": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 886
        }
      ],
      "max": [
        {
          "args": [
            "0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 935
        },
        {
          "args": [
            "0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 936
        },
        {
          "args": [
            "ci_uppers"
          ],
          "kwargs": {},
          "line_number": 626
        },
        {
          "args": [
            "0",
            "y_min"
          ],
          "kwargs": {},
          "line_number": 627
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 683
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1015
        },
        {
          "args": [
            "sim_counts"
          ],
          "kwargs": {},
          "line_number": 611
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 788
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 432
        },
        {
          "args": [
            "10",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 793
        },
        {
          "args": [
            "8",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 793
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 509
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1107
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 107
        }
      ],
      "any": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 975
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 781
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 317
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 131
        }
      ],
      "min": [
        {
          "args": [
            "4.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 979
        },
        {
          "args": [
            "4.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 980
        },
        {
          "args": [
            "ci_lowers"
          ],
          "kwargs": {},
          "line_number": 625
        },
        {
          "args": [
            "100",
            "y_max"
          ],
          "kwargs": {},
          "line_number": 627
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1014
        },
        {
          "args": [
            "1.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1227
        },
        {
          "args": [
            "win_probs"
          ],
          "kwargs": {},
          "line_number": 553
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 787
        },
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 433
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1105
        },
        {
          "args": [
            "10",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1123
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1107
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 106
        }
      ],
      "sns.histplot": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "kde": "<value>",
            "ax": "<value>"
          },
          "line_number": 1024
        }
      ],
      "set_title": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1025
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1032
        }
      ],
      "axvline": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "color": "<value>",
            "linestyle": "<value>",
            "label": "<value>"
          },
          "line_number": 1026
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "color": "<value>",
            "linestyle": "<value>",
            "label": "<value>"
          },
          "line_number": 1027
        }
      ],
      "legend": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1028
        }
      ],
      "sns.boxplot": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "ax": "<value>"
          },
          "line_number": 1031
        }
      ],
      "utcnow": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1262
        }
      ],
      "level.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 51
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 53
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        }
      ],
      "logger.debug": [
        {
          "args": [
            "message"
          ],
          "kwargs": {},
          "line_number": 52
        }
      ],
      "strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 77
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 291
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 384
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 824
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 889
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 918
        }
      ],
      "append": [
        {
          "args": [
            "'Team data is empty or not loaded'"
          ],
          "kwargs": {},
          "line_number": 144
        },
        {
          "args": [
            "'Standings data is empty or not loaded'"
          ],
          "kwargs": {},
          "line_number": 163
        },
        {
          "args": [
            "'Advanced stats data is empty or not loaded'"
          ],
          "kwargs": {},
          "line_number": 180
        },
        {
          "args": [
            "'Models dictionary is empty or not loaded'"
          ],
          "kwargs": {},
          "line_number": 205
        },
        {
          "args": [
            "'No valid models found in the models dictionary'"
          ],
          "kwargs": {},
          "line_number": 254
        },
        {
          "args": [
            "'Matchup DataFrame is empty or not provided'"
          ],
          "kwargs": {},
          "line_number": 300
        },
        {
          "args": [
            "'Matchup data is missing team information (top_seed_abbrev or bottom_seed_abbrev)'"
          ],
          "kwargs": {},
          "line_number": 309
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 320
        },
        {
          "args": [
            "'points_diff is missing - no fallback metric available for prediction'"
          ],
          "kwargs": {},
          "line_number": 344
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 361
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "model_info"
          ],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 355
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1095
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 136
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 273
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 338
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 214
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 324
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 346
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 359
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 351
        },
        {
          "args": [
            "null_pct"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 105
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 107
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 237
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 249
        }
      ],
      "dict": [
        {
          "args": [
            "models"
          ],
          "kwargs": {},
          "line_number": 402
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1111
        },
        {
          "args": [],
          "kwargs": {
            "facecolor": "<value>",
            "alpha": "<value>"
          },
          "line_number": 570
        },
        {
          "args": [],
          "kwargs": {
            "facecolor": "<value>",
            "alpha": "<value>"
          },
          "line_number": 636
        },
        {
          "args": [],
          "kwargs": {
            "facecolor": "<value>",
            "alpha": "<value>"
          },
          "line_number": 730
        }
      ],
      "modified_results.get": [
        {
          "args": [
            "'win_probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 407
        },
        {
          "args": [
            "'home_win_prob'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 407
        }
      ],
      "home_ice_results.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 409
        }
      ],
      "sample_results.get": [
        {
          "args": [
            "'win_probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 423
        },
        {
          "args": [
            "'home_win_prob'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 423
        }
      ],
      "convergence_results.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 429
        }
      ],
      "win_dist.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 450
        }
      ],
      "feature_importance.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 492
        }
      ],
      "ax.barh": [
        {
          "args": [
            "y_pos",
            "<complex-arg>"
          ],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 501
        }
      ],
      "ax.set_yticks": [
        {
          "args": [
            "y_pos"
          ],
          "kwargs": {},
          "line_number": 502
        }
      ],
      "ax.invert_yaxis": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 504
        }
      ],
      "ax.bar": [
        {
          "args": [
            "<complex-arg>",
            "top_seed_probs",
            "bar_width"
          ],
          "kwargs": {
            "label": "<value>",
            "color": "<value>"
          },
          "line_number": 686
        },
        {
          "args": [
            "<complex-arg>",
            "bottom_seed_probs",
            "bar_width"
          ],
          "kwargs": {
            "label": "<value>",
            "color": "<value>"
          },
          "line_number": 693
        }
      ],
      "all_outcomes.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 708
        }
      ],
      "time.time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 838
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 846
        }
      ],
      "os.getpid": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 882
        }
      ],
      "data_health_dashboard": [
        {
          "args": [
            "team_data",
            "standings_df",
            "advanced_stats_df"
          ],
          "kwargs": {},
          "line_number": 919
        },
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 924
        }
      ],
      "model_diagnostics_dashboard": [
        {
          "args": [
            "models",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 920
        },
        {
          "args": [
            "models"
          ],
          "kwargs": {},
          "line_number": 925
        }
      ],
      "run_api_connection_test": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 921
        }
      ],
      "monitor_memory_usage": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 922
        }
      ],
      "matchup_validation_dashboard": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 931
        }
      ],
      "validate_and_fix": [
        {
          "args": [
            "team_data",
            "'general'"
          ],
          "kwargs": {},
          "line_number": 989
        }
      ],
      "mean": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1011
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1017
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 171
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 171
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 105
        }
      ],
      "median": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1012
        }
      ],
      "std": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1013
        }
      ],
      "dropna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1024
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1031
        }
      ],
      "load_team_data": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1058
        }
      ],
      "log_debug_message": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1064
        },
        {
          "args": [
            "'Calculating consistency metrics'"
          ],
          "kwargs": {},
          "line_number": 1085
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1078
        },
        {
          "args": [
            "<complex-arg>",
            "'error'"
          ],
          "kwargs": {},
          "line_number": 1130
        },
        {
          "args": [
            "<complex-arg>",
            "'error'"
          ],
          "kwargs": {},
          "line_number": 1244
        }
      ],
      "champ_probs.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1099
        }
      ],
      "np.mean": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1116
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1117
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1102
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1104
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1104
        }
      ],
      "load_models": [
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {},
          "line_number": 1147
        }
      ],
      "create_matchup_data": [
        {
          "args": [
            "team1_dict",
            "team2_dict",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 1211
        }
      ],
      "check_matchup_features": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 1220
        }
      ],
      "predict_series_winner": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 1223
        }
      ],
      "time_since_refresh.total_seconds": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1264
        }
      ],
      "last_refresh.strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S UTC'"
          ],
          "kwargs": {},
          "line_number": 1270
        }
      ],
      "logging.FileHandler": [
        {
          "args": [
            "'debug.log'"
          ],
          "kwargs": {},
          "line_number": 42
        }
      ],
      "logging.StreamHandler": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 43
        }
      ],
      "logger.info": [
        {
          "args": [
            "message"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "message"
          ],
          "kwargs": {},
          "line_number": 62
        }
      ],
      "nunique": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 151
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 152
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 153
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 170
        }
      ],
      "col.endswith": [
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 312
        }
      ],
      "np.sqrt": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 427
        }
      ],
      "win_dist.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 447
        }
      ],
      "top_seed_outcomes.append": [
        {
          "args": [
            "outcome"
          ],
          "kwargs": {},
          "line_number": 667
        }
      ],
      "top_seed_probs.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 668
        }
      ],
      "bottom_seed_outcomes.append": [
        {
          "args": [
            "reverse_outcome"
          ],
          "kwargs": {},
          "line_number": 678
        }
      ],
      "bottom_seed_probs.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 679
        }
      ],
      "pd.DataFrame": [
        {
          "args": [],
          "kwargs": {
            "index": "<value>"
          },
          "line_number": 773
        }
      ],
      "requests.get": [
        {
          "args": [
            "url"
          ],
          "kwargs": {
            "headers": "<value>",
            "timeout": "<value>"
          },
          "line_number": 843
        }
      ],
      "response.raise_for_status": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 844
        }
      ],
      "get": [
        {
          "args": [
            "'Content-Type'",
            "'unknown'"
          ],
          "kwargs": {},
          "line_number": 850
        }
      ],
      "validation_report.get": [
        {
          "args": [
            "'issues'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 990
        }
      ],
      "simulate_playoff_bracket": [
        {
          "args": [
            "playoff_matchups",
            "team_data",
            "models"
          ],
          "kwargs": {
            "n_simulations": "<value>",
            "detailed_tracking": "<value>"
          },
          "line_number": 1069
        }
      ],
      "result_df.iterrows": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1090
        }
      ],
      "sorted": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 1111
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 233
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 245
        }
      ],
      "available_models.append": [
        {
          "args": [
            "'Logistic Regression'"
          ],
          "kwargs": {},
          "line_number": 1155
        },
        {
          "args": [
            "'XGBoost'"
          ],
          "kwargs": {},
          "line_number": 1157
        }
      ],
      "logger.warning": [
        {
          "args": [
            "message"
          ],
          "kwargs": {},
          "line_number": 56
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 77
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 291
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 384
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 824
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 889
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 918
        }
      ],
      "isinstance": [
        {
          "args": [
            "model_data",
            "dict"
          ],
          "kwargs": {},
          "line_number": 216
        }
      ],
      "abs": [
        {
          "args": [
            "pk_value"
          ],
          "kwargs": {},
          "line_number": 360
        },
        {
          "args": [
            "pk_value"
          ],
          "kwargs": {},
          "line_number": 360
        },
        {
          "args": [
            "v"
          ],
          "kwargs": {},
          "line_number": 501
        },
        {
          "args": [
            "v"
          ],
          "kwargs": {},
          "line_number": 509
        },
        {
          "args": [
            "v"
          ],
          "kwargs": {},
          "line_number": 510
        },
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 354
        },
        {
          "args": [
            "x"
          ],
          "kwargs": {},
          "line_number": 509
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 233
        }
      ],
      "notna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 781
        }
      ],
      "is_numeric_dtype": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 783
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 105
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 107
        }
      ],
      "values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 867
        }
      ],
      "isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1016
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 317
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 358
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1017
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 99
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 350
        }
      ],
      "simulation_results.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1076
        }
      ],
      "consistency.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1111
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1131
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1172
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1245
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 862
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1130
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1244
        }
      ],
      "logger.error": [
        {
          "args": [
            "message"
          ],
          "kwargs": {},
          "line_number": 58
        }
      ],
      "int": [
        {
          "args": [
            "null_count"
          ],
          "kwargs": {},
          "line_number": 103
        }
      ],
      "model_name.upper": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 513
        }
      ],
      "team_data.isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 959
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 89
        }
      ],
      "np.std": [
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1103
        },
        {
          "args": [
            "probs"
          ],
          "kwargs": {},
          "line_number": 1104
        }
      ],
      "consistency.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 1116
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1117
        }
      ],
      "logger.critical": [
        {
          "args": [
            "message"
          ],
          "kwargs": {},
          "line_number": 60
        }
      ],
      "type": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 219
        }
      ],
      "hasattr": [
        {
          "args": [
            "<complex-arg>",
            "'coef_'"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "<complex-arg>",
            "'feature_importances_'"
          ],
          "kwargs": {},
          "line_number": 242
        }
      ],
      "model_data.get": [
        {
          "args": [
            "'features'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 220
        }
      ],
      "advanced_stats_df.isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 171
        }
      ],
      "zip": [
        {
          "args": [
            "features",
            "coeffs"
          ],
          "kwargs": {},
          "line_number": 233
        },
        {
          "args": [
            "features",
            "importances"
          ],
          "kwargs": {},
          "line_number": 245
        }
      ]
    }
  },
  "streamlit_app/utils/model_utils.py": {
    "functions": {
      "load_models": {
        "params": [
          "model_folder"
        ],
        "defaults": {},
        "docstring": "Load the trained machine learning models for playoff predictions.\n\nArgs:\n    model_folder (str): Path to the directory containing model files\n    \nReturns:\n    dict: Dictionary containing model information and objects",
        "line_number": 19,
        "end_line": 209
      },
      "create_matchup_data": {
        "params": [
          "top_seed",
          "bottom_seed",
          "team_data"
        ],
        "defaults": {},
        "docstring": "Create matchup data for model input\n\nArgs:\n    top_seed (dict): Higher seed team information\n    bottom_seed (dict): Lower seed team information\n    team_data (DataFrame): Team statistics data\n    \nReturns:\n    DataFrame: Single row with matchup data for prediction",
        "line_number": 211,
        "end_line": 313
      },
      "predict_series_winner": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Predict the winner of a playoff series using available models\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information and objects\n    \nReturns:\n    tuple: (ensemble_prob, lr_prob, xgb_prob) - Raw probabilities of top seed winning (no home ice boost)\n\nNote: This function DOES NOT apply home ice advantage - this should be applied separately\n      by the calling function. See simulate_playoff_bracket() for correct usage.",
        "line_number": 315,
        "end_line": 529
      },
      "check_matchup_features": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Check the availability and values of features needed for model prediction\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information and objects\n    \nReturns:\n    dict: Statistics on feature availability and values",
        "line_number": 532,
        "end_line": 594
      },
      "predict_matchup": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Predict matchup outcome using loaded models\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information\n    \nReturns:\n    dict: Prediction results and metadata",
        "line_number": 596,
        "end_line": 648
      },
      "predict_series": {
        "params": [
          "matchup_df",
          "models",
          "n_simulations"
        ],
        "defaults": {
          "n_simulations": 1000
        },
        "docstring": "Predict series outcome using the pre-trained models with updated historical series length distribution\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information\n    n_simulations: Number of series simulations to run\n    \nReturns:\n    dict: Results including win probability and series outcome distribution",
        "line_number": 650,
        "end_line": 725
      },
      "get_series_outcome_distributions": {
        "params": [],
        "defaults": {},
        "docstring": "Get the series outcome distributions for playoffs based on historical data.\n\nReturns:\n    tuple: (higher_seed_dist, lower_seed_dist) - Distributions for series outcomes",
        "line_number": 727,
        "end_line": 753
      },
      "get_raw_model_predictions": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Get raw model predictions without home ice advantage\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information and objects\n    \nReturns:\n    tuple: (lr_prob, xgb_prob) - Raw probabilities from each model",
        "line_number": 755,
        "end_line": 817
      },
      "predict_lr": {
        "params": [
          "model",
          "features"
        ],
        "defaults": {},
        "docstring": "Make a prediction using the Linear Regression model.",
        "line_number": 873,
        "end_line": 888
      },
      "predict_xgb": {
        "params": [
          "model",
          "features"
        ],
        "defaults": {},
        "docstring": "Make a prediction using the XGBoost model.",
        "line_number": 890,
        "end_line": 903
      },
      "get_prediction_features": {
        "params": [
          "home_team_features",
          "away_team_features",
          "model_type"
        ],
        "defaults": {},
        "docstring": "Extract the correct features for prediction based on model type.",
        "line_number": 850,
        "end_line": 869
      },
      "get_model_features": {
        "params": [
          "model_data",
          "model_type"
        ],
        "defaults": {},
        "docstring": "Get the feature list for a specific model type.",
        "line_number": 905,
        "end_line": 917
      },
      "check_pk_scaling_issues": {
        "params": [
          "feature_dict"
        ],
        "defaults": {},
        "docstring": "Check for PK%_rel scaling issues in the data.",
        "line_number": 919,
        "end_line": 928
      },
      "silent_predict_series_winner": {
        "params": [
          "matchup_df",
          "models"
        ],
        "defaults": {},
        "docstring": "Silent version of predict_series_winner that doesn't print debug info.\n\nArgs:\n    matchup_df: DataFrame with matchup features\n    models: Dictionary with model information and objects\n    \nReturns:\n    tuple: (ensemble_prob, lr_prob, xgb_prob, debug_info) - \n           Raw probabilities and debug information dictionary",
        "line_number": 931,
        "end_line": 1138
      }
    },
    "calls": {
      "warnings.filterwarnings": [
        {
          "args": [
            "'ignore'"
          ],
          "kwargs": {},
          "line_number": 10
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 29
        }
      ],
      "join": [
        {
          "args": [
            "model_folder",
            "'logistic_regression_model_final.pkl'"
          ],
          "kwargs": {},
          "line_number": 35
        },
        {
          "args": [
            "model_folder",
            "'xgboost_playoff_model_final.pkl'"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "model_folder",
            "'playoff_model.pkl'"
          ],
          "kwargs": {},
          "line_number": 37
        },
        {
          "args": [
            "available_files"
          ],
          "kwargs": {},
          "line_number": 47
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 40
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 41
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 42
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 43
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 47
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 51
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 53
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 253
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 311
        },
        {
          "args": [
            "'Warning: Empty matchup dataframe provided to predict_series_winner'"
          ],
          "kwargs": {},
          "line_number": 335
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 344
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 349
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 503
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 61
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 66
        },
        {
          "args": [
            "'Installing XGBoost package...'"
          ],
          "kwargs": {},
          "line_number": 72
        },
        {
          "args": [
            "'No models found - using basic predictions'"
          ],
          "kwargs": {},
          "line_number": 158
        },
        {
          "args": [
            "'No valid models found - creating a basic logistic regression fallback model'"
          ],
          "kwargs": {},
          "line_number": 183
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 304
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 351
        },
        {
          "args": [
            "'WARNING: No differential features available for prediction!'"
          ],
          "kwargs": {},
          "line_number": 353
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 506
        },
        {
          "args": [
            "'XGBoost installed successfully'"
          ],
          "kwargs": {},
          "line_number": 76
        },
        {
          "args": [
            "'Using ensemble mode (LR + XGB)'"
          ],
          "kwargs": {},
          "line_number": 165
        },
        {
          "args": [
            "'Created fallback logistic regression model'"
          ],
          "kwargs": {},
          "line_number": 197
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 292
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 301
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 509
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 78
        },
        {
          "args": [
            "\"WARNING: LR model doesn't have predict_proba method!\""
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "'\u2713 Loaded Logistic Regression model with predict_proba'"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 107
        },
        {
          "args": [
            "\"WARNING: XGB model doesn't have predict_proba method!\""
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "'\u2713 Loaded XGBoost model with predict_proba'"
          ],
          "kwargs": {},
          "line_number": 131
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "'\u2713 Loaded combined model package'"
          ],
          "kwargs": {},
          "line_number": 148
        },
        {
          "args": [
            "'\u2713 Loaded default model'"
          ],
          "kwargs": {},
          "line_number": 152
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 154
        },
        {
          "args": [
            "'Using Logistic Regression model only'"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 297
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 298
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 447
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 481
        },
        {
          "args": [
            "'XGB model does not have predict_proba method or no features available'"
          ],
          "kwargs": {},
          "line_number": 483
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 485
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 494
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 498
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 512
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 794
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 815
        },
        {
          "args": [
            "'Using XGBoost model only'"
          ],
          "kwargs": {},
          "line_number": 171
        },
        {
          "args": [
            "'Using default model mode'"
          ],
          "kwargs": {},
          "line_number": 174
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 371
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 394
        },
        {
          "args": [
            "'LR prediction data:'"
          ],
          "kwargs": {},
          "line_number": 422
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 429
        },
        {
          "args": [
            "'LR model does not have predict_proba method or no features available'"
          ],
          "kwargs": {},
          "line_number": 432
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 435
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 450
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 454
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 461
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 468
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 515
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 289
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 374
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 379
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 387
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 414
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 424
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 457
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 521
        },
        {
          "args": [
            "'Using default 0.5 probability (no model predictions or points difference)'"
          ],
          "kwargs": {},
          "line_number": 523
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 382
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 472
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 403
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 405
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 306
        }
      ],
      "silent_predict_series_winner": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 614
        }
      ],
      "models.get": [
        {
          "args": [
            "'home_ice_boost'",
            "HOME_ICE_ADVANTAGE"
          ],
          "kwargs": {},
          "line_number": 617
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 501
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 621
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 1105
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 504
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 623
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 1110
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 507
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 625
        },
        {
          "args": [
            "'mode'"
          ],
          "kwargs": {},
          "line_number": 1114
        }
      ],
      "min": [
        {
          "args": [
            "1.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 618
        },
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 708
        }
      ],
      "predict_matchup": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 666
        }
      ],
      "get_series_outcome_distributions": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 671
        }
      ],
      "range": [
        {
          "args": [
            "n_simulations"
          ],
          "kwargs": {},
          "line_number": 681
        }
      ],
      "max": [
        {
          "args": [
            "0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 707
        },
        {
          "args": [
            "0.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 618
        }
      ],
      "sum": [
        {
          "args": [
            "SERIES_LENGTH_DISTRIBUTION"
          ],
          "kwargs": {},
          "line_number": 735
        },
        {
          "args": [
            "top_team_filter"
          ],
          "kwargs": {},
          "line_number": 261
        },
        {
          "args": [
            "bottom_team_filter"
          ],
          "kwargs": {},
          "line_number": 261
        }
      ],
      "np.array": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 839
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 895
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 189
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 493
        }
      ],
      "enumerate": [
        {
          "args": [
            "features"
          ],
          "kwargs": {},
          "line_number": 876
        }
      ],
      "feature_dict.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 922
        }
      ],
      "len": [
        {
          "args": [
            "diff_features"
          ],
          "kwargs": {},
          "line_number": 971
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 547
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 587
        },
        {
          "args": [
            "present_features"
          ],
          "kwargs": {},
          "line_number": 588
        },
        {
          "args": [
            "null_features"
          ],
          "kwargs": {},
          "line_number": 589
        },
        {
          "args": [
            "diff_features"
          ],
          "kwargs": {},
          "line_number": 350
        },
        {
          "args": [
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 590
        },
        {
          "args": [
            "present_features"
          ],
          "kwargs": {},
          "line_number": 590
        },
        {
          "args": [
            "present_features"
          ],
          "kwargs": {},
          "line_number": 591
        },
        {
          "args": [
            "null_features"
          ],
          "kwargs": {},
          "line_number": 591
        },
        {
          "args": [
            "features"
          ],
          "kwargs": {},
          "line_number": 822
        },
        {
          "args": [
            "diff_features"
          ],
          "kwargs": {},
          "line_number": 311
        },
        {
          "args": [
            "diff_features"
          ],
          "kwargs": {},
          "line_number": 349
        },
        {
          "args": [
            "lr_features"
          ],
          "kwargs": {},
          "line_number": 390
        },
        {
          "args": [
            "xgb_features"
          ],
          "kwargs": {},
          "line_number": 464
        },
        {
          "args": [
            "lr_features"
          ],
          "kwargs": {},
          "line_number": 791
        },
        {
          "args": [
            "xgb_features"
          ],
          "kwargs": {},
          "line_number": 812
        },
        {
          "args": [
            "lr_features"
          ],
          "kwargs": {},
          "line_number": 1011
        },
        {
          "args": [
            "xgb_features"
          ],
          "kwargs": {},
          "line_number": 1080
        },
        {
          "args": [
            "expected_xgb_features"
          ],
          "kwargs": {},
          "line_number": 447
        },
        {
          "args": [
            "xgb_features"
          ],
          "kwargs": {},
          "line_number": 447
        },
        {
          "args": [
            "expected_lr_features"
          ],
          "kwargs": {},
          "line_number": 371
        },
        {
          "args": [
            "lr_features"
          ],
          "kwargs": {},
          "line_number": 371
        },
        {
          "args": [
            "expected_xgb_features"
          ],
          "kwargs": {},
          "line_number": 454
        },
        {
          "args": [
            "xgb_features"
          ],
          "kwargs": {},
          "line_number": 454
        },
        {
          "args": [
            "xgb_features"
          ],
          "kwargs": {},
          "line_number": 461
        },
        {
          "args": [
            "expected_lr_features"
          ],
          "kwargs": {},
          "line_number": 379
        },
        {
          "args": [
            "lr_features"
          ],
          "kwargs": {},
          "line_number": 379
        },
        {
          "args": [
            "lr_features"
          ],
          "kwargs": {},
          "line_number": 387
        }
      ],
      "exists": [
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {},
          "line_number": 46
        },
        {
          "args": [
            "lr_path"
          ],
          "kwargs": {},
          "line_number": 50
        },
        {
          "args": [
            "xgb_path"
          ],
          "kwargs": {},
          "line_number": 52
        },
        {
          "args": [
            "default_path"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "lr_path"
          ],
          "kwargs": {},
          "line_number": 58
        },
        {
          "args": [
            "xgb_path"
          ],
          "kwargs": {},
          "line_number": 63
        },
        {
          "args": [
            "lr_path"
          ],
          "kwargs": {},
          "line_number": 83
        },
        {
          "args": [
            "xgb_path"
          ],
          "kwargs": {},
          "line_number": 110
        },
        {
          "args": [
            "default_path"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "os.listdir": [
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "isinstance": [
        {
          "args": [
            "top_seed",
            "dict"
          ],
          "kwargs": {},
          "line_number": 234
        },
        {
          "args": [
            "bottom_seed",
            "dict"
          ],
          "kwargs": {},
          "line_number": 235
        },
        {
          "args": [
            "top_seed",
            "str"
          ],
          "kwargs": {},
          "line_number": 238
        },
        {
          "args": [
            "bottom_seed",
            "str"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "top_seed",
            "dict"
          ],
          "kwargs": {},
          "line_number": 245
        },
        {
          "args": [
            "bottom_seed",
            "dict"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 361
        },
        {
          "args": [
            "<complex-arg>",
            "dict"
          ],
          "kwargs": {},
          "line_number": 438
        },
        {
          "args": [
            "lr_model_package",
            "dict"
          ],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [
            "xgb_model_package",
            "dict"
          ],
          "kwargs": {},
          "line_number": 115
        },
        {
          "args": [
            "default_model",
            "dict"
          ],
          "kwargs": {},
          "line_number": 141
        },
        {
          "args": [
            "m",
            "dict"
          ],
          "kwargs": {},
          "line_number": 182
        }
      ],
      "top_seed.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 234
        },
        {
          "args": [
            "'division_rank'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 245
        },
        {
          "args": [
            "'wildcard_rank'",
            "0"
          ],
          "kwargs": {},
          "line_number": 245
        }
      ],
      "bottom_seed.get": [
        {
          "args": [
            "'teamAbbrev'",
            "''"
          ],
          "kwargs": {},
          "line_number": 235
        },
        {
          "args": [
            "'division_rank'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "'wildcard_rank'",
            "0"
          ],
          "kwargs": {},
          "line_number": 246
        }
      ],
      "np.sqrt": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 706
        }
      ],
      "float": [
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 1108
        },
        {
          "args": [
            "lr_prob"
          ],
          "kwargs": {},
          "line_number": 1109
        },
        {
          "args": [
            "xgb_prob"
          ],
          "kwargs": {},
          "line_number": 1109
        },
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 1113
        },
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 1117
        },
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 1121
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1034
        },
        {
          "args": [
            "lr_prob"
          ],
          "kwargs": {},
          "line_number": 1041
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1091
        },
        {
          "args": [
            "xgb_prob"
          ],
          "kwargs": {},
          "line_number": 1098
        },
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 1125
        },
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 1132
        },
        {
          "args": [
            "points_diff"
          ],
          "kwargs": {},
          "line_number": 1133
        }
      ],
      "all": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 181
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 227
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 227
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 227
        }
      ],
      "col.endswith": [
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 347
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 969
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 310
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 548
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 385
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 460
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 788
        },
        {
          "args": [
            "'_diff'"
          ],
          "kwargs": {},
          "line_number": 809
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 583
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 584
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 142
        }
      ],
      "random": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 683
        }
      ],
      "choice": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "p": "<value>"
          },
          "line_number": 688
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "p": "<value>"
          },
          "line_number": 696
        }
      ],
      "abs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 822
        },
        {
          "args": [
            "feat_val"
          ],
          "kwargs": {},
          "line_number": 878
        },
        {
          "args": [
            "feat_val"
          ],
          "kwargs": {},
          "line_number": 878
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 923
        },
        {
          "args": [
            "pk_value"
          ],
          "kwargs": {},
          "line_number": 413
        },
        {
          "args": [
            "pk_value"
          ],
          "kwargs": {},
          "line_number": 1023
        }
      ],
      "model.predict": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 828
        },
        {
          "args": [
            "feature_array"
          ],
          "kwargs": {},
          "line_number": 843
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 884
        },
        {
          "args": [
            "feature_array"
          ],
          "kwargs": {},
          "line_number": 899
        }
      ],
      "feature_diff.get": [
        {
          "args": [
            "feat",
            "0"
          ],
          "kwargs": {},
          "line_number": 861
        },
        {
          "args": [
            "feat",
            "0"
          ],
          "kwargs": {},
          "line_number": 867
        }
      ],
      "st.error": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 887
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 902
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 832
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 847
        }
      ],
      "subprocess.check_call": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 74
        }
      ],
      "joblib.load": [
        {
          "args": [
            "lr_path"
          ],
          "kwargs": {},
          "line_number": 85
        },
        {
          "args": [
            "xgb_path"
          ],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [
            "default_path"
          ],
          "kwargs": {},
          "line_number": 139
        }
      ],
      "LogisticRegression": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 187
        }
      ],
      "reshape": [
        {
          "args": [
            "<complex-arg>",
            "1"
          ],
          "kwargs": {},
          "line_number": 188
        }
      ],
      "fallback_model.fit": [
        {
          "args": [
            "X",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 190
        }
      ],
      "pd.isna": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 573
        }
      ],
      "globals": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 831
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 846
        }
      ],
      "hasattr": [
        {
          "args": [
            "model_obj",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 101
        },
        {
          "args": [
            "model_obj",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 128
        },
        {
          "args": [
            "lr_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 375
        },
        {
          "args": [
            "lr_model",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 390
        },
        {
          "args": [
            "xgb_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 451
        },
        {
          "args": [
            "xgb_model",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 464
        },
        {
          "args": [
            "fallback_model",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 491
        },
        {
          "args": [
            "lr_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 784
        },
        {
          "args": [
            "lr_model",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 791
        },
        {
          "args": [
            "xgb_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 805
        },
        {
          "args": [
            "xgb_model",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 812
        },
        {
          "args": [
            "lr_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 994
        },
        {
          "args": [
            "xgb_model",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 1063
        },
        {
          "args": [
            "<complex-arg>",
            "'predict_proba'"
          ],
          "kwargs": {},
          "line_number": 181
        },
        {
          "args": [
            "lr_model_package",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 96
        },
        {
          "args": [
            "xgb_model_package",
            "'feature_names_in_'"
          ],
          "kwargs": {},
          "line_number": 123
        }
      ],
      "default_model.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 145
        }
      ],
      "copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 408
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1018
        }
      ],
      "prediction_data.fillna": [
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 418
        },
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 1030
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1045
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1102
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 887
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 902
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 832
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 847
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1043
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 1100
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 78
        },
        {
          "args": [
            "lr_error"
          ],
          "kwargs": {},
          "line_number": 107
        },
        {
          "args": [
            "xgb_error"
          ],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "default_error"
          ],
          "kwargs": {},
          "line_number": 154
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 485
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 498
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 794
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 815
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 435
        }
      ],
      "fillna": [
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 1087
        },
        {
          "args": [
            "0"
          ],
          "kwargs": {},
          "line_number": 475
        }
      ],
      "f.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 64
        }
      ],
      "values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 182
        }
      ],
      "pd.notna": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 283
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 283
        }
      ],
      "list": [
        {
          "args": [
            "expected_lr_features"
          ],
          "kwargs": {},
          "line_number": 997
        },
        {
          "args": [
            "expected_xgb_features"
          ],
          "kwargs": {},
          "line_number": 1066
        }
      ],
      "get_model_features": [
        {
          "args": [
            "models",
            "'LR'"
          ],
          "kwargs": {},
          "line_number": 1005
        },
        {
          "args": [
            "models",
            "'XGB'"
          ],
          "kwargs": {},
          "line_number": 1074
        }
      ],
      "predict_lr": [
        {
          "args": [
            "lr_model",
            "feature_values"
          ],
          "kwargs": {},
          "line_number": 1040
        }
      ],
      "predict_xgb": [
        {
          "args": [
            "xgb_model",
            "feature_values"
          ],
          "kwargs": {},
          "line_number": 1097
        }
      ],
      "m.get": [
        {
          "args": [
            "'model'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 181
        }
      ],
      "any": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 392
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 466
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1013
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1082
        }
      ],
      "lr_model.predict_proba": [
        {
          "args": [
            "prediction_data"
          ],
          "kwargs": {},
          "line_number": 427
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 792
        }
      ],
      "xgb_model.predict_proba": [
        {
          "args": [
            "prediction_data"
          ],
          "kwargs": {},
          "line_number": 480
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 813
        }
      ],
      "fallback_model.predict_proba": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 493
        }
      ],
      "matchup_data.get": [
        {
          "args": [
            "'points_diff'",
            "'N/A'"
          ],
          "kwargs": {},
          "line_number": 298
        }
      ],
      "isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 392
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 466
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1013
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 1082
        }
      ],
      "np.exp": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 520
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 1130
        }
      ]
    }
  },
  "streamlit_app/utils/__init__.py": {
    "functions": {},
    "calls": {}
  },
  "streamlit_app/utils/cache_manager.py": {
    "functions": {
      "get_eastern_time": {
        "params": [],
        "defaults": {},
        "docstring": "Get current time in Eastern timezone",
        "line_number": 15,
        "end_line": 18
      },
      "should_refresh_data": {
        "params": [],
        "defaults": {},
        "docstring": "Check if data should be refreshed based on schedule",
        "line_number": 20,
        "end_line": 42
      },
      "cache_simulation_results": {
        "params": [
          "results",
          "data_folder"
        ],
        "defaults": {},
        "docstring": "Cache simulation results to disk\n\nArgs:\n    results: Simulation results to cache\n    data_folder: Folder to store cached results\n    \nReturns:\n    bool: True if successful, False otherwise",
        "line_number": 44,
        "end_line": 80
      },
      "load_cached_simulation_results": {
        "params": [
          "data_folder"
        ],
        "defaults": {},
        "docstring": "Load cached simulation results\n\nArgs:\n    data_folder: Folder containing cached results\n    \nReturns:\n    dict: Cached simulation results or None if not found",
        "line_number": 82,
        "end_line": 115
      },
      "get_next_refresh_time": {
        "params": [],
        "defaults": {},
        "docstring": "Get the next scheduled data refresh time\n\nReturns:\n    datetime: Next scheduled refresh time",
        "line_number": 117,
        "end_line": 135
      },
      "get_cache_status": {
        "params": [],
        "defaults": {},
        "docstring": "Get current cache status\n\nReturns:\n    dict: Cache status information",
        "line_number": 137,
        "end_line": 156
      }
    },
    "calls": {
      "pytz.timezone": [
        {
          "args": [
            "TIMEZONE"
          ],
          "kwargs": {},
          "line_number": 17
        },
        {
          "args": [
            "TIMEZONE"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "TIMEZONE"
          ],
          "kwargs": {},
          "line_number": 31
        }
      ],
      "datetime.now": [
        {
          "args": [
            "eastern"
          ],
          "kwargs": {},
          "line_number": 18
        },
        {
          "args": [
            "eastern"
          ],
          "kwargs": {},
          "line_number": 124
        }
      ],
      "get_eastern_time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 26
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 75
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 153
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 60
        }
      ],
      "next_refresh.replace": [
        {
          "args": [],
          "kwargs": {
            "hour": "<value>",
            "minute": "<value>",
            "second": "<value>",
            "microsecond": "<value>"
          },
          "line_number": 133
        }
      ],
      "eastern.localize": [
        {
          "args": [
            "last_refresh"
          ],
          "kwargs": {},
          "line_number": 32
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 128
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 130
        }
      ],
      "timedelta": [
        {
          "args": [],
          "kwargs": {
            "hours": "<value>"
          },
          "line_number": 35
        },
        {
          "args": [],
          "kwargs": {
            "days": "<value>"
          },
          "line_number": 128
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 56
        }
      ],
      "isinstance": [
        {
          "args": [
            "results",
            "dict"
          ],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [
            "results",
            "dict"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "value",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "value",
            "str"
          ],
          "kwargs": {},
          "line_number": 106
        }
      ],
      "join": [
        {
          "args": [
            "data_folder",
            "'simulation_results.json'"
          ],
          "kwargs": {},
          "line_number": 92
        },
        {
          "args": [
            "data_folder",
            "'simulation_results.json'"
          ],
          "kwargs": {},
          "line_number": 71
        }
      ],
      "cache_obj.get": [
        {
          "args": [
            "'results'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 101
        }
      ],
      "get": [
        {
          "args": [
            "'last_data_refresh'",
            "None"
          ],
          "kwargs": {},
          "line_number": 146
        },
        {
          "args": [
            "'last_simulation'",
            "None"
          ],
          "kwargs": {},
          "line_number": 147
        }
      ],
      "get_next_refresh_time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "now.date": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "last_refresh.date": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "isoformat": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 60
        }
      ],
      "results.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 66
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 105
        }
      ],
      "open": [
        {
          "args": [
            "<complex-arg>",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 71
        },
        {
          "args": [
            "cache_path",
            "'r'"
          ],
          "kwargs": {},
          "line_number": 97
        }
      ],
      "json.dump": [
        {
          "args": [
            "cache_obj",
            "f"
          ],
          "kwargs": {},
          "line_number": 72
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 79
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 114
        }
      ],
      "exists": [
        {
          "args": [
            "cache_path"
          ],
          "kwargs": {},
          "line_number": 94
        }
      ],
      "json.load": [
        {
          "args": [
            "f"
          ],
          "kwargs": {},
          "line_number": 98
        }
      ],
      "datetime": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 130
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 128
        }
      ],
      "value.to_json": [
        {
          "args": [],
          "kwargs": {
            "orient": "<value>"
          },
          "line_number": 68
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 79
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 114
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 108
        }
      ],
      "json.loads": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 108
        }
      ]
    }
  },
  "streamlit_app/pages/first_round.py": {
    "functions": {
      "get_matchup_predictions": {
        "params": [
          "matchup_df",
          "model_data"
        ],
        "defaults": {},
        "docstring": "Cache matchup predictions to avoid recalculation on every page load",
        "line_number": 15,
        "end_line": 35
      },
      "get_playoff_matchups": {
        "params": [
          "standings_df"
        ],
        "defaults": {},
        "docstring": "Cache the playoff matchups to avoid recalculation",
        "line_number": 39,
        "end_line": 41
      },
      "get_matchup_data": {
        "params": [
          "top_seed",
          "bottom_seed",
          "team_data"
        ],
        "defaults": {},
        "docstring": "Cache the matchup data to avoid recalculation",
        "line_number": 45,
        "end_line": 47
      },
      "display_first_round_matchups": {
        "params": [
          "model_data"
        ],
        "defaults": {
          "model_data": null
        },
        "docstring": "Display the first round matchups page",
        "line_number": 49,
        "end_line": 247
      },
      "display_metrics_table": {
        "params": [
          "team1_data",
          "team2_data",
          "metrics",
          "team1_name",
          "team2_name"
        ],
        "defaults": {},
        "docstring": "Display a table of metrics with the better value highlighted.",
        "line_number": 249,
        "end_line": 326
      },
      "app": {
        "params": [],
        "defaults": {},
        "docstring": "Main entry point for the first round page",
        "line_number": 328,
        "end_line": 336
      }
    },
    "calls": {
      "st.cache_data": [
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>",
            "show_spinner": "<value>"
          },
          "line_number": 14
        },
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>",
            "show_spinner": "<value>"
          },
          "line_number": 38
        },
        {
          "args": [],
          "kwargs": {
            "ttl": "<value>",
            "show_spinner": "<value>"
          },
          "line_number": 44
        }
      ],
      "model_utils.predict_series_winner": [
        {
          "args": [
            "matchup_df",
            "model_data"
          ],
          "kwargs": {},
          "line_number": 18
        }
      ],
      "model_utils.predict_matchup": [
        {
          "args": [
            "matchup_df",
            "model_data"
          ],
          "kwargs": {},
          "line_number": 21
        }
      ],
      "model_utils.predict_series": [
        {
          "args": [
            "matchup_df",
            "model_data"
          ],
          "kwargs": {
            "n_simulations": "<value>"
          },
          "line_number": 25
        }
      ],
      "data_handlers.determine_playoff_teams": [
        {
          "args": [
            "standings_df"
          ],
          "kwargs": {},
          "line_number": 41
        }
      ],
      "data_handlers.create_matchup_data": [
        {
          "args": [
            "top_seed",
            "bottom_seed",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 47
        }
      ],
      "st.title": [
        {
          "args": [
            "'NHL Playoff First Round Matchups'"
          ],
          "kwargs": {},
          "line_number": 51
        }
      ],
      "join": [
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 63
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "table_data"
          ],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 325
        }
      ],
      "st.table": [
        {
          "args": [
            "df"
          ],
          "kwargs": {},
          "line_number": 326
        }
      ],
      "display_first_round_matchups": [
        {
          "args": [],
          "kwargs": {
            "model_data": "<value>"
          },
          "line_number": 336
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 340
        }
      ],
      "expander": [
        {
          "args": [
            "'Developer Options'"
          ],
          "kwargs": {
            "expanded": "<value>"
          },
          "line_number": 54
        }
      ],
      "st.checkbox": [
        {
          "args": [
            "'Debug Mode'"
          ],
          "kwargs": {
            "value": "<value>"
          },
          "line_number": 55
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 63
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 63
        }
      ],
      "get_playoff_matchups": [
        {
          "args": [
            "standings_df"
          ],
          "kwargs": {},
          "line_number": 110
        }
      ],
      "playoff_matchups.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 117
        }
      ],
      "table_data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 322
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        }
      ],
      "st.write": [
        {
          "args": [
            "'Using data from session state'"
          ],
          "kwargs": {},
          "line_number": 70
        },
        {
          "args": [
            "'### Series Length Probabilities'"
          ],
          "kwargs": {},
          "line_number": 186
        },
        {
          "args": [
            "'### Team Stats Comparison'"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 138
        },
        {
          "args": [
            "'Simulation data not available'"
          ],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 162
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 163
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 164
        }
      ],
      "data_handlers.load_data": [
        {
          "args": [
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 75
        },
        {
          "args": [
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 92
        },
        {
          "args": [
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 93
        }
      ],
      "st.warning": [
        {
          "args": [
            "'Could not determine playoff matchups with the current standings.'"
          ],
          "kwargs": {},
          "line_number": 113
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 166
        }
      ],
      "st.header": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 118
        }
      ],
      "matchups.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 121
        }
      ],
      "st.error": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "'Required data not available. Please make sure data has been fetched.'"
          ],
          "kwargs": {},
          "line_number": 84
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "'Team data not available for comparison'"
          ],
          "kwargs": {},
          "line_number": 225
        },
        {
          "args": [
            "'Failed to refresh data.'"
          ],
          "kwargs": {},
          "line_number": 247
        },
        {
          "args": [
            "'Failed to fetch data. Please check logs for details.'"
          ],
          "kwargs": {},
          "line_number": 101
        }
      ],
      "st.exception": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 231
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 105
        }
      ],
      "st.button": [
        {
          "args": [
            "'Refresh Data'"
          ],
          "kwargs": {},
          "line_number": 233
        },
        {
          "args": [
            "'Fetch Data Now'"
          ],
          "kwargs": {},
          "line_number": 86
        }
      ],
      "field_name.split": [
        {
          "args": [
            "'/'"
          ],
          "kwargs": {},
          "line_number": 262
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 63
        }
      ],
      "get_matchup_data": [
        {
          "args": [
            "top_seed",
            "bottom_seed",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 126
        }
      ],
      "st.subheader": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 128
        }
      ],
      "st.columns": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 131
        },
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 142
        }
      ],
      "st.markdown": [
        {
          "args": [
            "'---'"
          ],
          "kwargs": {},
          "line_number": 227
        }
      ],
      "abs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 316
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "visualization.plot_head_to_head_probabilities": [
        {
          "args": [],
          "kwargs": {
            "team1": "<value>",
            "team2": "<value>",
            "lr_prob": "<value>",
            "xgb_prob": "<value>",
            "ensemble_prob": "<value>",
            "sim_prob": "<value>",
            "team1_abbrev": "<value>",
            "team2_abbrev": "<value>"
          },
          "line_number": 174
        }
      ],
      "visualization.plot_series_length_table": [
        {
          "args": [],
          "kwargs": {
            "win_distribution": "<value>",
            "top_team": "<value>",
            "bottom_team": "<value>"
          },
          "line_number": 190
        }
      ],
      "any": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 202
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        }
      ],
      "display_metrics_table": [
        {
          "args": [
            "team1_data",
            "team2_data",
            "metrics",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 223
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Refreshing NHL data...'"
          ],
          "kwargs": {},
          "line_number": 234
        },
        {
          "args": [
            "'Fetching NHL data...'"
          ],
          "kwargs": {},
          "line_number": 87
        }
      ],
      "data_handlers.update_daily_data": [
        {
          "args": [
            "data_folder",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 235
        },
        {
          "args": [
            "data_folder",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 88
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 279
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 285
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 272
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 272
        }
      ],
      "get_matchup_predictions": [
        {
          "args": [
            "matchup_df",
            "model_data"
          ],
          "kwargs": {},
          "line_number": 151
        }
      ],
      "get": [
        {
          "args": [
            "'debug_mode'",
            "False"
          ],
          "kwargs": {},
          "line_number": 161
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 230
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 166
        }
      ],
      "clear": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 243
        }
      ],
      "st.success": [
        {
          "args": [
            "'Data refreshed successfully!'"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "'Data fetched successfully! Reloading...'"
          ],
          "kwargs": {},
          "line_number": 90
        }
      ],
      "st.experimental_rerun": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 245
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 99
        }
      ],
      "max": [
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 272
        }
      ],
      "st.image": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "width": "<value>"
          },
          "line_number": 144
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "width": "<value>"
          },
          "line_number": 146
        }
      ],
      "top_seed.get": [
        {
          "args": [
            "'division_rank'",
            "''"
          ],
          "kwargs": {},
          "line_number": 135
        },
        {
          "args": [
            "'wildcard_rank'",
            "''"
          ],
          "kwargs": {},
          "line_number": 135
        }
      ],
      "bottom_seed.get": [
        {
          "args": [
            "'division_rank'",
            "''"
          ],
          "kwargs": {},
          "line_number": 136
        },
        {
          "args": [
            "'wildcard_rank'",
            "''"
          ],
          "kwargs": {},
          "line_number": 136
        }
      ]
    }
  },
  "streamlit_app/pages/sim_bracket.py": {
    "functions": {
      "display_sim_your_bracket": {
        "params": [],
        "defaults": {},
        "docstring": null,
        "line_number": 16,
        "end_line": 79
      },
      "app": {
        "params": [],
        "defaults": {},
        "docstring": "Main entry point for the bracket simulator page",
        "line_number": 81,
        "end_line": 99
      }
    },
    "calls": {
      "st.title": [
        {
          "args": [
            "'Simulate Your Own Bracket'"
          ],
          "kwargs": {},
          "line_number": 17
        }
      ],
      "st.write": [
        {
          "args": [
            "'Select matchups and see how your bracket would perform'"
          ],
          "kwargs": {},
          "line_number": 18
        },
        {
          "args": [
            "'Path to the Stanley Cup:'"
          ],
          "kwargs": {},
          "line_number": 77
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 79
        }
      ],
      "model_data.get": [
        {
          "args": [
            "'models'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 24
        }
      ],
      "data_handlers.load_team_data": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 28
        }
      ],
      "data_handlers.load_current_playoff_matchups": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 32
        }
      ],
      "st.button": [
        {
          "args": [
            "'Run Playoff Bracket Simulation'"
          ],
          "kwargs": {},
          "line_number": 44
        }
      ],
      "display_bracket_simulator": [
        {
          "args": [],
          "kwargs": {
            "team_data": "<value>",
            "model_data": "<value>",
            "playoff_matchups": "<value>"
          },
          "line_number": 99
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 103
        }
      ],
      "st.error": [
        {
          "args": [
            "'Could not load team data. Please check the data files.'"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "'Could not load playoff matchups. Please check the data files.'"
          ],
          "kwargs": {},
          "line_number": 40
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Playoff Bracket Results'"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 73
        }
      ],
      "visualization.create_simple_bracket_visual": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 68
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Simulating playoff bracket...'"
          ],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "simulation.simulate_single_bracket": [
        {
          "args": [
            "playoff_matchups",
            "team_data",
            "models"
          ],
          "kwargs": {},
          "line_number": 48
        }
      ],
      "time.time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 60
        }
      ],
      "st.success": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        }
      ],
      "champion.get": [
        {
          "args": [
            "'name'",
            "''"
          ],
          "kwargs": {},
          "line_number": 73
        }
      ],
      "int": [
        {
          "args": [
            "time_diff"
          ],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        }
      ]
    }
  },
  "streamlit_app/pages/head_to_head.py": {
    "functions": {
      "display_head_to_head_comparison": {
        "params": [],
        "defaults": {},
        "docstring": "Display head-to-head comparison between two selected teams.",
        "line_number": 10,
        "end_line": 289
      },
      "show_simulation_status": {
        "params": [
          "team1_name",
          "team2_name",
          "simulation_results"
        ],
        "defaults": {},
        "docstring": "Display whether the teams met in simulations and related information.",
        "line_number": 291,
        "end_line": 326
      },
      "get_simulation_matchup_probability": {
        "params": [
          "team1_name",
          "team2_name",
          "simulation_results"
        ],
        "defaults": {},
        "docstring": "Get the probability of team1 winning against team2 in simulations.",
        "line_number": 328,
        "end_line": 349
      },
      "display_metrics_table": {
        "params": [
          "team1_data",
          "team2_data",
          "metrics",
          "team1_name",
          "team2_name"
        ],
        "defaults": {},
        "docstring": "Display a table of metrics with the better value highlighted.",
        "line_number": 351,
        "end_line": 428
      },
      "simulate_series": {
        "params": [
          "win_prob",
          "n_simulations"
        ],
        "defaults": {
          "n_simulations": 10000
        },
        "docstring": "Simulate a playoff series with the given win probability.",
        "line_number": 430,
        "end_line": 491
      },
      "app": {
        "params": [],
        "defaults": {},
        "docstring": "Main entry point for the head to head comparison page",
        "line_number": 493,
        "end_line": 506
      }
    },
    "calls": {
      "st.header": [
        {
          "args": [
            "'Head-to-Head Playoff Comparison'"
          ],
          "kwargs": {},
          "line_number": 12
        }
      ],
      "model_data.get": [
        {
          "args": [
            "'team_data'"
          ],
          "kwargs": {},
          "line_number": 23
        }
      ],
      "st.info": [
        {
          "args": [
            "'**Note:** The first team selected is considered the **Home Team** and the second is the **Away Team**. This can affect home-ice advantage calculations.'"
          ],
          "kwargs": {},
          "line_number": 60
        },
        {
          "args": [
            "'Try selecting different teams or check if team data is complete'"
          ],
          "kwargs": {},
          "line_number": 289
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 326
        }
      ],
      "st.columns": [
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [
            "3"
          ],
          "kwargs": {},
          "line_number": 191
        }
      ],
      "st.write": [
        {
          "args": [
            "'---'"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "'### Key Scenarios'"
          ],
          "kwargs": {},
          "line_number": 265
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 269
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 273
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 277
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 281
        },
        {
          "args": [
            "'Available metrics in team1_data:'"
          ],
          "kwargs": {},
          "line_number": 248
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 251
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 252
        }
      ],
      "matchup_results.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 336
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "table_data"
          ],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 427
        }
      ],
      "st.table": [
        {
          "args": [
            "df"
          ],
          "kwargs": {},
          "line_number": 428
        }
      ],
      "max": [
        {
          "args": [
            "0.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 459
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 212
        },
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 368
        },
        {
          "args": [
            "1",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 374
        },
        {
          "args": [
            "ensemble_prob",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 195
        }
      ],
      "range": [
        {
          "args": [
            "n_simulations"
          ],
          "kwargs": {},
          "line_number": 462
        }
      ],
      "display_head_to_head": [
        {
          "args": [],
          "kwargs": {
            "team_data": "<value>",
            "model_data": "<value>"
          },
          "line_number": 506
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 510
        }
      ],
      "st.error": [
        {
          "args": [
            "'No model data available. Please load the models first from the main page.'"
          ],
          "kwargs": {},
          "line_number": 16
        },
        {
          "args": [
            "'No team data available for comparison. Please ensure data is loaded.'"
          ],
          "kwargs": {},
          "line_number": 56
        },
        {
          "args": [
            "'Unable to create matchup data for these teams'"
          ],
          "kwargs": {},
          "line_number": 286
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 288
        },
        {
          "args": [
            "'Could not load team data from file. Please ensure data has been fetched.'"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 52
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 283
        },
        {
          "args": [
            "'Unexpected prediction result format'"
          ],
          "kwargs": {},
          "line_number": 153
        },
        {
          "args": [
            "'Failed to fetch data. Please check logs for details.'"
          ],
          "kwargs": {},
          "line_number": 49
        }
      ],
      "st.markdown": [
        {
          "args": [
            "'### Home Team'"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "'### Away Team'"
          ],
          "kwargs": {},
          "line_number": 81
        }
      ],
      "st.selectbox": [
        {
          "args": [
            "'Select Home Team'",
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 68
        },
        {
          "args": [
            "'Select Away Team'",
            "available_teams"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 85
        }
      ],
      "sorted": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 83
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 69
        }
      ],
      "team1_data.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 250
        }
      ],
      "team2_data.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 118
        }
      ],
      "model_utils.create_matchup_data": [
        {
          "args": [
            "home_team",
            "away_team",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 129
        }
      ],
      "st.warning": [
        {
          "args": [
            "'No simulation data available. Showing model predictions only.'"
          ],
          "kwargs": {},
          "line_number": 294
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 320
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 322
        }
      ],
      "any": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 305
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 306
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 311
        }
      ],
      "matchup.split": [
        {
          "args": [
            "' vs '"
          ],
          "kwargs": {},
          "line_number": 337
        }
      ],
      "table_data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 424
        }
      ],
      "min": [
        {
          "args": [
            "1.0",
            "win_prob"
          ],
          "kwargs": {},
          "line_number": 459
        }
      ],
      "isinstance": [
        {
          "args": [
            "team_data",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 26
        },
        {
          "args": [
            "team_data",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [
            "prediction_results",
            "tuple"
          ],
          "kwargs": {},
          "line_number": 146
        },
        {
          "args": [
            "prediction_results",
            "dict"
          ],
          "kwargs": {},
          "line_number": 148
        }
      ],
      "join": [
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "data_handlers.load_data": [
        {
          "args": [
            "<complex-arg>",
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 36
        }
      ],
      "visualization.load_team_logo": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 76
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 93
        }
      ],
      "show_simulation_status": [
        {
          "args": [
            "team1_name",
            "team2_name",
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 138
        }
      ],
      "len": [
        {
          "args": [
            "teams"
          ],
          "kwargs": {},
          "line_number": 338
        },
        {
          "args": [
            "prediction_results"
          ],
          "kwargs": {},
          "line_number": 146
        }
      ],
      "results.get": [
        {
          "args": [
            "'win_percentage'",
            "None"
          ],
          "kwargs": {},
          "line_number": 343
        },
        {
          "args": [
            "'win_percentage'",
            "None"
          ],
          "kwargs": {},
          "line_number": 346
        }
      ],
      "field_name.split": [
        {
          "args": [
            "'/'"
          ],
          "kwargs": {},
          "line_number": 364
        }
      ],
      "random": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 464
        }
      ],
      "choice": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "p": "<value>"
          },
          "line_number": 468
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "p": "<value>"
          },
          "line_number": 480
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 33
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "st.button": [
        {
          "args": [
            "'Fetch Data Now'"
          ],
          "kwargs": {},
          "line_number": 42
        }
      ],
      "unique": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 69
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 83
        }
      ],
      "st.image": [
        {
          "args": [
            "logo"
          ],
          "kwargs": {
            "width": "<value>"
          },
          "line_number": 78
        },
        {
          "args": [
            "logo"
          ],
          "kwargs": {
            "width": "<value>"
          },
          "line_number": 95
        }
      ],
      "model_utils.predict_series_winner": [
        {
          "args": [
            "matchup_df",
            "model_data"
          ],
          "kwargs": {},
          "line_number": 143
        }
      ],
      "simulate_series": [
        {
          "args": [
            "ensemble_prob"
          ],
          "kwargs": {},
          "line_number": 157
        }
      ],
      "sum": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 160
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 161
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 268
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 272
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 276
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 223
        }
      ],
      "get_simulation_matchup_probability": [
        {
          "args": [
            "team1_name",
            "team2_name",
            "simulation_results"
          ],
          "kwargs": {},
          "line_number": 165
        }
      ],
      "st.tabs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 168
        }
      ],
      "abs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 418
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 420
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 29
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 29
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 29
        }
      ],
      "pd.isna": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 115
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 119
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Series Prediction'"
          ],
          "kwargs": {},
          "line_number": 176
        },
        {
          "args": [
            "'Team Stats Comparison'"
          ],
          "kwargs": {},
          "line_number": 228
        },
        {
          "args": [
            "'Series Length Probabilities'"
          ],
          "kwargs": {},
          "line_number": 259
        }
      ],
      "visualization.plot_head_to_head_probabilities": [
        {
          "args": [],
          "kwargs": {
            "team1": "<value>",
            "team2": "<value>",
            "lr_prob": "<value>",
            "xgb_prob": "<value>",
            "ensemble_prob": "<value>",
            "sim_prob": "<value>",
            "team1_abbrev": "<value>",
            "team2_abbrev": "<value>"
          },
          "line_number": 179
        }
      ],
      "get": [
        {
          "args": [
            "'debug_mode'",
            "False"
          ],
          "kwargs": {},
          "line_number": 247
        }
      ],
      "display_metrics_table": [
        {
          "args": [
            "team1_data",
            "team2_data",
            "metrics",
            "team1_name",
            "team2_name"
          ],
          "kwargs": {},
          "line_number": 255
        }
      ],
      "visualization.plot_series_length_table": [
        {
          "args": [
            "win_distribution",
            "team1_name",
            "team2_name"
          ],
          "kwargs": {},
          "line_number": 262
        }
      ],
      "st.exception": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 284
        }
      ],
      "st.success": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 324
        },
        {
          "args": [
            "'Data fetched successfully! Reloading...'"
          ],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "float": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 381
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 387
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 368
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 374
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 368
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 374
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Fetching NHL data...'"
          ],
          "kwargs": {},
          "line_number": 43
        }
      ],
      "data_handlers.update_daily_data": [
        {
          "args": [
            "data_folder",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 44
        }
      ],
      "prediction_results.get": [
        {
          "args": [
            "'ensemble'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 149
        },
        {
          "args": [
            "'logistic'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 150
        },
        {
          "args": [
            "'xgboost'",
            "0.5"
          ],
          "kwargs": {},
          "line_number": 151
        }
      ],
      "st.metric": [
        {
          "args": [
            "'Predicted Winner'",
            "winner",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [
            "'Expected Series Length'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 208
        },
        {
          "args": [
            "'Most Likely Outcome'",
            "outcome_text",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 224
        }
      ],
      "win_distribution.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 202
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 212
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 288
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 52
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 283
        },
        {
          "args": [
            "col"
          ],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [
            "col"
          ],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [
            "col"
          ],
          "kwargs": {},
          "line_number": 250
        },
        {
          "args": [
            "col"
          ],
          "kwargs": {},
          "line_number": 250
        }
      ],
      "st.experimental_rerun": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 47
        }
      ],
      "int": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 216
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 216
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 220
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 220
        }
      ],
      "win_distribution.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 268
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 272
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 276
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 223
        }
      ],
      "lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 250
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 250
        }
      ]
    }
  },
  "streamlit_app/pages/debug.py": {
    "functions": {
      "display_debug_page": {
        "params": [
          "team_data",
          "model_data"
        ],
        "defaults": {
          "team_data": null,
          "model_data": null
        },
        "docstring": "Display debug information and tools for developers",
        "line_number": 25,
        "end_line": 588
      },
      "app": {
        "params": [],
        "defaults": {},
        "docstring": "Main entry point for the debug page",
        "line_number": 590,
        "end_line": 597
      },
      "highlight_status": {
        "params": [
          "val"
        ],
        "defaults": {},
        "docstring": null,
        "line_number": 165,
        "end_line": 174
      }
    },
    "calls": {
      "append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 15
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 15
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 15
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 405
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 524
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 525
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 405
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 451
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 524
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 525
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 451
        }
      ],
      "st.title": [
        {
          "args": [
            "'Debug & Diagnostics'"
          ],
          "kwargs": {},
          "line_number": 27
        }
      ],
      "st.info": [
        {
          "args": [
            "'This page is intended for developers to debug model issues and data quality problems.'"
          ],
          "kwargs": {},
          "line_number": 30
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Cache Status'"
          ],
          "kwargs": {},
          "line_number": 33
        },
        {
          "args": [
            "'Team Data Validation'"
          ],
          "kwargs": {},
          "line_number": 100
        },
        {
          "args": [
            "'Session State'"
          ],
          "kwargs": {},
          "line_number": 502
        },
        {
          "args": [
            "'File System Check'"
          ],
          "kwargs": {},
          "line_number": 521
        },
        {
          "args": [
            "'Memory Usage'"
          ],
          "kwargs": {},
          "line_number": 550
        },
        {
          "args": [
            "'Python and Package Versions'"
          ],
          "kwargs": {},
          "line_number": 562
        },
        {
          "args": [
            "'Critical Feature Availability'"
          ],
          "kwargs": {},
          "line_number": 131
        },
        {
          "args": [
            "'Model Information'"
          ],
          "kwargs": {},
          "line_number": 225
        },
        {
          "args": [
            "'Prediction Tester'"
          ],
          "kwargs": {},
          "line_number": 251
        },
        {
          "args": [
            "'Current Playoff Matchups'"
          ],
          "kwargs": {},
          "line_number": 409
        },
        {
          "args": [
            "'Series Length Distribution'"
          ],
          "kwargs": {},
          "line_number": 421
        },
        {
          "args": [
            "'Home Ice Advantage Testing'"
          ],
          "kwargs": {},
          "line_number": 448
        },
        {
          "args": [
            "'Model Features'"
          ],
          "kwargs": {},
          "line_number": 243
        },
        {
          "args": [
            "'Feature Quality Check'"
          ],
          "kwargs": {},
          "line_number": 293
        },
        {
          "args": [
            "'Prediction Results'"
          ],
          "kwargs": {},
          "line_number": 309
        },
        {
          "args": [
            "'Series Simulation'"
          ],
          "kwargs": {},
          "line_number": 335
        }
      ],
      "st.tabs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 62
        }
      ],
      "get": [
        {
          "args": [
            "'models'",
            "None"
          ],
          "kwargs": {},
          "line_number": 593
        },
        {
          "args": [
            "'team_data'",
            "None"
          ],
          "kwargs": {},
          "line_number": 594
        }
      ],
      "display_debug_page": [
        {
          "args": [],
          "kwargs": {
            "team_data": "<value>",
            "model_data": "<value>"
          },
          "line_number": 597
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 601
        }
      ],
      "st.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 59
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 49
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 52
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 81
        },
        {
          "args": [
            "'Refreshing data...'"
          ],
          "kwargs": {},
          "line_number": 87
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 228
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 229
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 238
        },
        {
          "args": [
            "'Data Files:'"
          ],
          "kwargs": {},
          "line_number": 534
        },
        {
          "args": [
            "'Model Files:'"
          ],
          "kwargs": {},
          "line_number": 542
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 554
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 559
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 588
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 331
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 413
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 539
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 547
        },
        {
          "args": [
            "stats"
          ],
          "kwargs": {},
          "line_number": 186
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 248
        },
        {
          "args": [
            "'Higher Seed (Home Team)'"
          ],
          "kwargs": {},
          "line_number": 260
        },
        {
          "args": [
            "'Lower Seed (Away Team)'"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 298
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 299
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 300
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 301
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 302
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 418
        }
      ],
      "get_eastern_time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "st.warning": [
        {
          "args": [
            "'No data refresh recorded in session state'"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "'No data refresh timestamp found. Data may be stale.'"
          ],
          "kwargs": {},
          "line_number": 83
        },
        {
          "args": [
            "'No team data available for validation. Try refreshing the data.'"
          ],
          "kwargs": {},
          "line_number": 214
        },
        {
          "args": [
            "'No playoff matchups available. Try refreshing the data.'"
          ],
          "kwargs": {},
          "line_number": 495
        },
        {
          "args": [
            "'No team data available for prediction testing.'"
          ],
          "kwargs": {},
          "line_number": 396
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 306
        }
      ],
      "st.header": [
        {
          "args": [
            "'Data Quality Metrics'"
          ],
          "kwargs": {},
          "line_number": 71
        },
        {
          "args": [
            "'Model Diagnostics'"
          ],
          "kwargs": {},
          "line_number": 218
        },
        {
          "args": [
            "'Simulation Testing'"
          ],
          "kwargs": {},
          "line_number": 402
        },
        {
          "args": [
            "'System Diagnostics'"
          ],
          "kwargs": {},
          "line_number": 499
        }
      ],
      "st.button": [
        {
          "args": [
            "'Force Data Refresh'"
          ],
          "kwargs": {},
          "line_number": 86
        },
        {
          "args": [
            "'Run Prediction'"
          ],
          "kwargs": {},
          "line_number": 272
        }
      ],
      "join": [
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 405
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 524
        },
        {
          "args": [
            "<complex-arg>",
            "'models'"
          ],
          "kwargs": {},
          "line_number": 525
        },
        {
          "args": [
            "<complex-arg>",
            "'data'"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "<complex-arg>",
            "'models'"
          ],
          "kwargs": {},
          "line_number": 451
        },
        {
          "args": [
            "data_folder",
            "file"
          ],
          "kwargs": {},
          "line_number": 536
        },
        {
          "args": [
            "model_folder",
            "file"
          ],
          "kwargs": {},
          "line_number": 544
        },
        {
          "args": [
            "model_types"
          ],
          "kwargs": {},
          "line_number": 238
        },
        {
          "args": [
            "model_features"
          ],
          "kwargs": {},
          "line_number": 248
        }
      ],
      "load_current_playoff_matchups": [
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 406
        }
      ],
      "pd.DataFrame": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 513
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 428
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 467
        },
        {
          "args": [
            "outcome_data"
          ],
          "kwargs": {},
          "line_number": 361
        }
      ],
      "st.dataframe": [
        {
          "args": [
            "session_df"
          ],
          "kwargs": {},
          "line_number": 518
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 478
        },
        {
          "args": [
            "display_df"
          ],
          "kwargs": {},
          "line_number": 212
        },
        {
          "args": [
            "matchup_df"
          ],
          "kwargs": {},
          "line_number": 394
        }
      ],
      "st.columns": [
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 531
        },
        {
          "args": [
            "3"
          ],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [
            "2"
          ],
          "kwargs": {},
          "line_number": 257
        },
        {
          "args": [
            "3"
          ],
          "kwargs": {},
          "line_number": 319
        }
      ],
      "versions.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 587
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 15
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 405
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 524
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 525
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 451
        }
      ],
      "make_datetime_timezone_aware": [
        {
          "args": [
            "refresh_time"
          ],
          "kwargs": {},
          "line_number": 43
        }
      ],
      "time_since_refresh.total_seconds": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 46
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 80
        }
      ],
      "st.success": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 76
        },
        {
          "args": [
            "'Data refreshed successfully!'"
          ],
          "kwargs": {},
          "line_number": 95
        },
        {
          "args": [
            "'Simulation consistency check completed!'"
          ],
          "kwargs": {},
          "line_number": 490
        }
      ],
      "update_daily_data": [
        {
          "args": [
            "data_folder",
            "current_season",
            "season_str"
          ],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 93
        }
      ],
      "get_data_quality_metrics": [
        {
          "args": [
            "team_data"
          ],
          "kwargs": {},
          "line_number": 109
        }
      ],
      "st.checkbox": [
        {
          "args": [
            "'Show Data Validation Report'"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "'Show Feature Distributions'"
          ],
          "kwargs": {},
          "line_number": 180
        },
        {
          "args": [
            "'Explore Team Data'"
          ],
          "kwargs": {},
          "line_number": 191
        },
        {
          "args": [
            "'Run Simulation Consistency Check'"
          ],
          "kwargs": {},
          "line_number": 485
        },
        {
          "args": [
            "'Show feature list'"
          ],
          "kwargs": {},
          "line_number": 247
        },
        {
          "args": [
            "'Show raw matchup data'"
          ],
          "kwargs": {},
          "line_number": 393
        }
      ],
      "from_dict": [
        {
          "args": [
            "feature_status"
          ],
          "kwargs": {
            "orient": "<value>"
          },
          "line_number": 160
        },
        {
          "args": [
            "display_data"
          ],
          "kwargs": {
            "orient": "<value>",
            "columns": "<value>"
          },
          "line_number": 211
        }
      ],
      "feature_df.reset_index": [
        {
          "args": [],
          "kwargs": {
            "inplace": "<value>"
          },
          "line_number": 161
        }
      ],
      "feature_df.rename": [
        {
          "args": [],
          "kwargs": {
            "columns": "<value>",
            "inplace": "<value>"
          },
          "line_number": 162
        }
      ],
      "get_model_features": [
        {
          "args": [
            "models",
            "'ensemble'"
          ],
          "kwargs": {},
          "line_number": 241
        }
      ],
      "st.error": [
        {
          "args": [
            "'No models loaded. Check the model files in the models directory.'"
          ],
          "kwargs": {},
          "line_number": 398
        },
        {
          "args": [
            "'Data refresh failed.'"
          ],
          "kwargs": {},
          "line_number": 97
        }
      ],
      "playoff_matchups.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 412
        }
      ],
      "plt.subplots": [
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 434
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 364
        }
      ],
      "ax.bar": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 435
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "label": "<value>",
            "alpha": "<value>"
          },
          "line_number": 368
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "label": "<value>",
            "alpha": "<value>"
          },
          "line_number": 377
        }
      ],
      "ax.set_xlabel": [
        {
          "args": [
            "'Series Length (Games)'"
          ],
          "kwargs": {},
          "line_number": 436
        },
        {
          "args": [
            "'Series Outcome'"
          ],
          "kwargs": {},
          "line_number": 384
        }
      ],
      "ax.set_ylabel": [
        {
          "args": [
            "'Percentage of Series (%)'"
          ],
          "kwargs": {},
          "line_number": 437
        },
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 385
        }
      ],
      "ax.set_title": [
        {
          "args": [
            "'NHL Playoff Series Length Distribution'"
          ],
          "kwargs": {},
          "line_number": 438
        },
        {
          "args": [
            "'Series Outcome Distribution'"
          ],
          "kwargs": {},
          "line_number": 386
        }
      ],
      "ax.set_xticks": [
        {
          "args": [
            "series_lengths"
          ],
          "kwargs": {},
          "line_number": 439
        }
      ],
      "enumerate": [
        {
          "args": [
            "percentages"
          ],
          "kwargs": {},
          "line_number": 442
        }
      ],
      "st.pyplot": [
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 445
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 390
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 185
        }
      ],
      "load_models": [
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {},
          "line_number": 452
        }
      ],
      "st.slider": [
        {
          "args": [
            "'Test home ice advantage'"
          ],
          "kwargs": {
            "min_value": "<value>",
            "max_value": "<value>",
            "value": "<value>",
            "step": "<value>",
            "format": "<value>"
          },
          "line_number": 456
        }
      ],
      "exists": [
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 528
        },
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {},
          "line_number": 529
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 537
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 538
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 545
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 546
        }
      ],
      "os.listdir": [
        {
          "args": [
            "data_folder"
          ],
          "kwargs": {},
          "line_number": 528
        },
        {
          "args": [
            "model_folder"
          ],
          "kwargs": {},
          "line_number": 529
        }
      ],
      "platform.python_version": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 565
        }
      ],
      "datetime.utcnow": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 79
        }
      ],
      "st.metric": [
        {
          "args": [
            "'Total Teams'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [
            "'Missing Values %'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 115
        },
        {
          "args": [
            "'Critical Features'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "'Advanced Stats Available'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 119
        },
        {
          "args": [
            "'Data Quality Score'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "'Validation Issues'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "'Final Win Probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 332
        },
        {
          "args": [
            "'Raw LR Probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 322
        },
        {
          "args": [
            "'Raw XGB Probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 325
        },
        {
          "args": [
            "'Raw Ensemble Probability'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 328
        }
      ],
      "validate_and_fix": [
        {
          "args": [
            "team_data",
            "'general'"
          ],
          "kwargs": {},
          "line_number": 127
        }
      ],
      "st.json": [
        {
          "args": [
            "validation_report"
          ],
          "kwargs": {},
          "line_number": 128
        },
        {
          "args": [
            "consistency_results"
          ],
          "kwargs": {},
          "line_number": 493
        }
      ],
      "applymap": [
        {
          "args": [
            "highlight_status"
          ],
          "kwargs": {
            "subset": "<value>"
          },
          "line_number": 177
        }
      ],
      "st.selectbox": [
        {
          "args": [
            "'Select feature to analyze:'",
            "critical_features"
          ],
          "kwargs": {},
          "line_number": 181
        },
        {
          "args": [
            "'Select team:'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 192
        },
        {
          "args": [
            "'Select higher seed:'",
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 261
        },
        {
          "args": [
            "'Select lower seed:'",
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 267
        }
      ],
      "model_types.append": [
        {
          "args": [
            "'Logistic Regression'"
          ],
          "kwargs": {},
          "line_number": 234
        },
        {
          "args": [
            "'XGBoost'"
          ],
          "kwargs": {},
          "line_number": 236
        }
      ],
      "predict_series_winner": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 312
        }
      ],
      "models.get": [
        {
          "args": [
            "'home_ice_boost'",
            "0.039"
          ],
          "kwargs": {},
          "line_number": 315
        },
        {
          "args": [
            "'home_ice_boost'",
            "0.039"
          ],
          "kwargs": {},
          "line_number": 453
        },
        {
          "args": [
            "'mode'",
            "'unknown'"
          ],
          "kwargs": {},
          "line_number": 228
        },
        {
          "args": [
            "'home_ice_boost'",
            "0.039"
          ],
          "kwargs": {},
          "line_number": 229
        }
      ],
      "min": [
        {
          "args": [
            "1.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 316
        },
        {
          "args": [
            "1.0",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 469
        }
      ],
      "predict_series": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {
            "n_simulations": "<value>"
          },
          "line_number": 336
        }
      ],
      "sum": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 340
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 553
        }
      ],
      "zip": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 354
        }
      ],
      "ax.legend": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 387
        }
      ],
      "matchups.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 415
        }
      ],
      "ax.text": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "ha": "<value>"
          },
          "line_number": 443
        }
      ],
      "format": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 478
        }
      ],
      "session_vars.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 514
        }
      ],
      "session_vars.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 515
        }
      ],
      "sys.getsizeof": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 558
        }
      ],
      "refresh_time.strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S %Z'"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S UTC'"
          ],
          "kwargs": {},
          "line_number": 76
        }
      ],
      "sim_time.strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S %Z'"
          ],
          "kwargs": {},
          "line_number": 59
        }
      ],
      "now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 88
        }
      ],
      "analyze_feature_distributions": [
        {
          "args": [
            "team_data",
            "selected_feature"
          ],
          "kwargs": {},
          "line_number": 184
        }
      ],
      "tolist": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 192
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 261
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 267
        }
      ],
      "any": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 201
        }
      ],
      "create_matchup_data": [
        {
          "args": [
            "team1_dict",
            "team2_dict",
            "team_data"
          ],
          "kwargs": {},
          "line_number": 287
        }
      ],
      "check_matchup_features": [
        {
          "args": [
            "matchup_df",
            "models"
          ],
          "kwargs": {},
          "line_number": 290
        }
      ],
      "outcomes.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 340
        }
      ],
      "outcome_data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 347
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 355
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Running simulation consistency checks...'"
          ],
          "kwargs": {},
          "line_number": 486
        }
      ],
      "check_simulation_consistency": [
        {
          "args": [
            "playoff_matchups",
            "models"
          ],
          "kwargs": {},
          "line_number": 487
        }
      ],
      "strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 538
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 546
        }
      ],
      "str": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 558
        }
      ],
      "mean": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 146
        }
      ],
      "getsize": [
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 537
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 545
        }
      ],
      "memory_usage": [
        {
          "args": [],
          "kwargs": {
            "deep": "<value>"
          },
          "line_number": 553
        }
      ],
      "isinstance": [
        {
          "args": [
            "value",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 202
        }
      ],
      "len": [
        {
          "args": [
            "model_features"
          ],
          "kwargs": {},
          "line_number": 244
        }
      ],
      "fromtimestamp": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 538
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 546
        }
      ],
      "isna": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 146
        }
      ],
      "pd.isna": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 202
        }
      ],
      "format_percentage_for_display": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 204
        }
      ],
      "getmtime": [
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 538
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 546
        }
      ]
    }
  },
  "streamlit_app/pages/simulation_results.py": {
    "functions": {
      "display_simulation_results": {
        "params": [
          "model_data"
        ],
        "defaults": {
          "model_data": null
        },
        "docstring": "Display the full simulation results page",
        "line_number": 20,
        "end_line": 297
      },
      "app": {
        "params": [],
        "defaults": {},
        "docstring": "Main entry point for the simulation results page",
        "line_number": 299,
        "end_line": 302
      }
    },
    "calls": {
      "append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 11
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 11
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 11
        }
      ],
      "st.title": [
        {
          "args": [
            "'NHL Playoff Simulation Results'"
          ],
          "kwargs": {},
          "line_number": 22
        }
      ],
      "simulation.get_simulation_results": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 25
        }
      ],
      "st.tabs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 51
        }
      ],
      "subheader": [
        {
          "args": [
            "'Refresh Simulations'"
          ],
          "kwargs": {},
          "line_number": 289
        }
      ],
      "button": [
        {
          "args": [
            "'Run New Simulations'"
          ],
          "kwargs": {},
          "line_number": 290
        }
      ],
      "display_simulation_results": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 302
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 306
        }
      ],
      "st.error": [
        {
          "args": [
            "'No simulation results available. Try running a simulation first.'"
          ],
          "kwargs": {},
          "line_number": 28
        },
        {
          "args": [
            "'Failed to run simulations. Please check logs for details.'"
          ],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "st.button": [
        {
          "args": [
            "'Run Simulations Now'"
          ],
          "kwargs": {
            "key": "<value>"
          },
          "line_number": 31
        }
      ],
      "st.caption": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 45
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Stanley Cup Championship Odds'"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "'Full Championship Odds Table'"
          ],
          "kwargs": {},
          "line_number": 84
        },
        {
          "args": [
            "'Team Playoff Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "'Round-by-Round Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "'Round-by-Round Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 159
        },
        {
          "args": [
            "'Detailed Probability Table'"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "'Potential Playoff Matchups'"
          ],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [
            "'Most Likely Second Round Matchups'"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "'Most Likely Conference Finals Matchups'"
          ],
          "kwargs": {},
          "line_number": 257
        },
        {
          "args": [
            "'Most Likely Stanley Cup Finals Matchups'"
          ],
          "kwargs": {},
          "line_number": 274
        }
      ],
      "results_df.copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 93
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 209
        }
      ],
      "round": [
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 58
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 212
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 95
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 211
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 243
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 260
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 261
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 277
        },
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 278
        }
      ],
      "display_df.sort_values": [
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 59
        },
        {
          "args": [
            "'sort_key'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 103
        }
      ],
      "plt.subplots": [
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 62
        },
        {
          "args": [],
          "kwargs": {
            "figsize": "<value>"
          },
          "line_number": 163
        }
      ],
      "np.arange": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [
            "0",
            "101",
            "20"
          ],
          "kwargs": {},
          "line_number": 204
        }
      ],
      "ax.barh": [
        {
          "args": [
            "y_pos",
            "probs"
          ],
          "kwargs": {
            "color": "<value>"
          },
          "line_number": 68
        },
        {
          "args": [
            "team_order",
            "<complex-arg>"
          ],
          "kwargs": {
            "left": "<value>",
            "label": "<value>",
            "color": "<value>",
            "alpha": "<value>"
          },
          "line_number": 188
        }
      ],
      "ax.set_yticks": [
        {
          "args": [
            "y_pos"
          ],
          "kwargs": {},
          "line_number": 69
        }
      ],
      "ax.set_yticklabels": [
        {
          "args": [
            "teams"
          ],
          "kwargs": {},
          "line_number": 70
        }
      ],
      "ax.invert_yaxis": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 71
        }
      ],
      "ax.set_xlabel": [
        {
          "args": [
            "'Championship Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 72
        },
        {
          "args": [
            "'Probability (%)'"
          ],
          "kwargs": {},
          "line_number": 192
        }
      ],
      "ax.set_title": [
        {
          "args": [
            "'Stanley Cup Championship Odds'"
          ],
          "kwargs": {},
          "line_number": 73
        },
        {
          "args": [
            "'Round-by-Round Playoff Advancement Probabilities'"
          ],
          "kwargs": {},
          "line_number": 193
        }
      ],
      "enumerate": [
        {
          "args": [
            "bars"
          ],
          "kwargs": {},
          "line_number": 76
        },
        {
          "args": [
            "round_labels"
          ],
          "kwargs": {},
          "line_number": 187
        }
      ],
      "st.pyplot": [
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 81
        },
        {
          "args": [
            "fig"
          ],
          "kwargs": {},
          "line_number": 206
        }
      ],
      "copy": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 85
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 242
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 259
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 276
        }
      ],
      "st.dataframe": [
        {
          "args": [
            "table_df"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 87
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 115
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 233
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 253
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 270
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 286
        }
      ],
      "drop": [
        {
          "args": [
            "'sort_key'"
          ],
          "kwargs": {
            "axis": "<value>"
          },
          "line_number": 103
        },
        {
          "args": [
            "'sort_key'"
          ],
          "kwargs": {
            "axis": "<value>"
          },
          "line_number": 229
        }
      ],
      "head": [
        {
          "args": [
            "10"
          ],
          "kwargs": {},
          "line_number": 121
        }
      ],
      "melt": [
        {
          "args": [],
          "kwargs": {
            "id_vars": "<value>",
            "value_vars": "<value>",
            "var_name": "<value>",
            "value_name": "<value>"
          },
          "line_number": 128
        }
      ],
      "dict": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 139
        }
      ],
      "map": [
        {
          "args": [
            "round_map"
          ],
          "kwargs": {},
          "line_number": 140
        }
      ],
      "properties": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>",
            "height": "<value>"
          },
          "line_number": 143
        }
      ],
      "st.altair_chart": [
        {
          "args": [
            "stacked_chart"
          ],
          "kwargs": {
            "use_container_width": "<value>"
          },
          "line_number": 156
        }
      ],
      "np.array": [
        {
          "args": [
            "data"
          ],
          "kwargs": {},
          "line_number": 181
        }
      ],
      "np.zeros": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 182
        }
      ],
      "ax.legend": [
        {
          "args": [],
          "kwargs": {
            "loc": "<value>",
            "framealpha": "<value>",
            "frameon": "<value>",
            "fancybox": "<value>",
            "shadow": "<value>",
            "fontsize": "<value>"
          },
          "line_number": 196
        }
      ],
      "ax.grid": [
        {
          "args": [],
          "kwargs": {
            "axis": "<value>",
            "alpha": "<value>",
            "linestyle": "<value>"
          },
          "line_number": 200
        }
      ],
      "plt.tight_layout": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 203
        }
      ],
      "plt.xticks": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 204
        }
      ],
      "round_df.rename": [
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 224
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 11
        }
      ],
      "len": [
        {
          "args": [
            "teams"
          ],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [
            "team_order"
          ],
          "kwargs": {},
          "line_number": 182
        }
      ],
      "bar.get_width": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 77
        }
      ],
      "ax.text": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {
            "ha": "<value>",
            "va": "<value>"
          },
          "line_number": 78
        }
      ],
      "rename": [
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 115
        },
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 253
        },
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 270
        },
        {
          "args": [],
          "kwargs": {
            "columns": "<value>"
          },
          "line_number": 286
        }
      ],
      "zip": [
        {
          "args": [
            "rounds",
            "round_names"
          ],
          "kwargs": {},
          "line_number": 139
        }
      ],
      "st.spinner": [
        {
          "args": [
            "'Running playoff simulations...'"
          ],
          "kwargs": {},
          "line_number": 291
        },
        {
          "args": [
            "'Running playoff simulations...'"
          ],
          "kwargs": {},
          "line_number": 32
        }
      ],
      "simulation.update_daily_simulations": [
        {
          "args": [],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 292
        },
        {
          "args": [],
          "kwargs": {
            "force": "<value>"
          },
          "line_number": 33
        }
      ],
      "astype": [
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 95
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 211
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 243
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 260
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 261
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 277
        },
        {
          "args": [
            "str"
          ],
          "kwargs": {},
          "line_number": 278
        }
      ],
      "results_df.sort_values": [
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 121
        },
        {
          "args": [
            "'champion'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 171
        }
      ],
      "encode": [
        {
          "args": [],
          "kwargs": {
            "x": "<value>",
            "y": "<value>",
            "color": "<value>",
            "tooltip": "<value>"
          },
          "line_number": 143
        }
      ],
      "data.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 178
        }
      ],
      "round_df.sort_values": [
        {
          "args": [
            "'sort_key'"
          ],
          "kwargs": {
            "ascending": "<value>"
          },
          "line_number": 229
        }
      ],
      "display_cols.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 233
        }
      ],
      "success": [
        {
          "args": [
            "'Simulations completed successfully!'"
          ],
          "kwargs": {},
          "line_number": 294
        }
      ],
      "st.experimental_rerun": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 295
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 37
        }
      ],
      "error": [
        {
          "args": [
            "'Failed to run simulations. Please check logs for details.'"
          ],
          "kwargs": {},
          "line_number": 297
        }
      ],
      "st.success": [
        {
          "args": [
            "'Simulations completed successfully!'"
          ],
          "kwargs": {},
          "line_number": 35
        }
      ],
      "last_refresh.strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M'"
          ],
          "kwargs": {},
          "line_number": 45
        }
      ],
      "bar.get_y": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 78
        }
      ],
      "bar.get_height": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 78
        }
      ],
      "display_cols.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 115
        }
      ],
      "mark_bar": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 143
        }
      ],
      "alt.X": [
        {
          "args": [
            "'probability_pct:Q'"
          ],
          "kwargs": {
            "axis": "<value>",
            "title": "<value>"
          },
          "line_number": 144
        }
      ],
      "alt.Y": [
        {
          "args": [
            "'teamName:N'"
          ],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 145
        }
      ],
      "alt.Color": [
        {
          "args": [
            "'round_name:N'"
          ],
          "kwargs": {
            "scale": "<value>",
            "legend": "<value>"
          },
          "line_number": 146
        }
      ],
      "alt.Tooltip": [
        {
          "args": [
            "'probability_pct:Q'"
          ],
          "kwargs": {
            "format": "<value>",
            "title": "<value>"
          },
          "line_number": 150
        }
      ],
      "r2_cols.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 253
        }
      ],
      "cf_cols.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 270
        }
      ],
      "f_cols.keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 286
        }
      ],
      "alt.Chart": [
        {
          "args": [
            "chart_data"
          ],
          "kwargs": {},
          "line_number": 143
        }
      ],
      "alt.Axis": [
        {
          "args": [],
          "kwargs": {
            "format": "<value>"
          },
          "line_number": 144
        }
      ],
      "alt.Scale": [
        {
          "args": [],
          "kwargs": {
            "domain": "<value>",
            "range": "<value>"
          },
          "line_number": 147
        }
      ],
      "alt.Legend": [
        {
          "args": [],
          "kwargs": {
            "title": "<value>"
          },
          "line_number": 149
        }
      ]
    }
  },
  "streamlit_app/pages/about.py": {
    "functions": {
      "display_about_page": {
        "params": [
          "model_data"
        ],
        "defaults": {
          "model_data": null
        },
        "docstring": "Display information about the application and models.",
        "line_number": 7,
        "end_line": 60
      },
      "app": {
        "params": [],
        "defaults": {},
        "docstring": "Main entry point for the about page",
        "line_number": 62,
        "end_line": 65
      }
    },
    "calls": {
      "st.header": [
        {
          "args": [
            "'About NHL Playoff Predictor'"
          ],
          "kwargs": {},
          "line_number": 9
        }
      ],
      "st.markdown": [
        {
          "args": [
            "'\\n    ### Overview\\n    This application predicts NHL playoff outcomes using machine learning models \\n    trained on historical playoff data. It provides probabilities for each playoff \\n    series and simulates entire playoff tournaments to estimate championship odds.\\n    \\n    ### Models\\n    The application uses three primary models:\\n    - **Logistic Regression**: A simple model that captures linear relationships\\n    - **XGBoost**: A gradient boosting model that captures non-linear relationships\\n    - **Ensemble Model**: A weighted average of the above models\\n    \\n    The models use team statistics from the regular season to predict playoff performance.\\n    '"
          ],
          "kwargs": {},
          "line_number": 11
        },
        {
          "args": [
            "'\\n    - Team statistics are sourced from NHL API\\n    - Advanced metrics from Natural Stat Trick and Money Puck\\n    - Historical playoff results from Hockey Reference\\n    '"
          ],
          "kwargs": {},
          "line_number": 42
        },
        {
          "args": [
            "'\\n    Developed by an NHL enthusiast and data scientist.\\n    \\n    This application is for entertainment purposes only.\\n    '"
          ],
          "kwargs": {},
          "line_number": 50
        },
        {
          "args": [
            "'\\n    If you have questions or suggestions, please reach out on GitHub.\\n    '"
          ],
          "kwargs": {},
          "line_number": 58
        }
      ],
      "st.subheader": [
        {
          "args": [
            "'Data Sources'"
          ],
          "kwargs": {},
          "line_number": 41
        },
        {
          "args": [
            "'Credits'"
          ],
          "kwargs": {},
          "line_number": 49
        },
        {
          "args": [
            "'Contact'"
          ],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [
            "'Model Details'"
          ],
          "kwargs": {},
          "line_number": 28
        }
      ],
      "display_about_page": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 69
        }
      ],
      "st.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 31
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 32
        },
        {
          "args": [
            "'**Key features:**'"
          ],
          "kwargs": {},
          "line_number": 36
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 38
        }
      ],
      "model_data.get": [
        {
          "args": [
            "'mode'",
            "'default'"
          ],
          "kwargs": {},
          "line_number": 31
        },
        {
          "args": [
            "'home_ice_boost'",
            "0.039"
          ],
          "kwargs": {},
          "line_number": 32
        }
      ]
    }
  },
  "streamlit_app/pages/__init__.py": {
    "functions": {},
    "calls": {
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "file": "<value>"
          },
          "line_number": 12
        }
      ]
    }
  },
  "streamlit_app/models/simulation.py": {
    "functions": {},
    "calls": {}
  },
  "streamlit_app/models/__init__.py": {
    "functions": {},
    "calls": {}
  },
  "tools/dependency_analyzer.py": {
    "functions": {
      "__init__": {
        "params": [
          "self",
          "project_dir",
          "output_dir"
        ],
        "defaults": {
          "output_dir": null
        },
        "docstring": "Initialize the analyzer with project directory",
        "line_number": 17,
        "end_line": 28
      },
      "find_python_files": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Find all Python files in the project directory",
        "line_number": 30,
        "end_line": 54
      },
      "analyze_file": {
        "params": [
          "self",
          "file_path"
        ],
        "defaults": {},
        "docstring": "Analyze a single Python file for imports, constants, and function calls",
        "line_number": 56,
        "end_line": 117
      },
      "analyze_all_files": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Analyze all Python files in the project",
        "line_number": 119,
        "end_line": 133
      },
      "_json_serializer": {
        "params": [
          "self",
          "obj"
        ],
        "defaults": {},
        "docstring": "Custom JSON serializer to handle non-serializable objects",
        "line_number": 135,
        "end_line": 139
      },
      "analyze_constants_usage": {
        "params": [
          "self",
          "results"
        ],
        "defaults": {},
        "docstring": "Analyze how constants are used across files",
        "line_number": 141,
        "end_line": 182
      },
      "analyze_function_usage": {
        "params": [
          "self",
          "results"
        ],
        "defaults": {},
        "docstring": "Analyze how functions are used across files",
        "line_number": 184,
        "end_line": 237
      },
      "generate_dependency_graph": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Generate a visualization of the dependency graph",
        "line_number": 239,
        "end_line": 272
      },
      "generate_report": {
        "params": [
          "self",
          "results",
          "constants_analysis",
          "function_analysis"
        ],
        "defaults": {},
        "docstring": "Generate a summary report of the analysis",
        "line_number": 274,
        "end_line": 367
      },
      "run_analysis": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Run the full analysis pipeline",
        "line_number": 369,
        "end_line": 382
      }
    },
    "calls": {
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 386
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 386
        }
      ],
      "DependencyAnalyzer": [
        {
          "args": [
            "project_dir"
          ],
          "kwargs": {},
          "line_number": 387
        }
      ],
      "analyzer.run_analysis": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 388
        }
      ],
      "nx.DiGraph": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 22
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 242
        }
      ],
      "defaultdict": [
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 23
        },
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 24
        },
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 198
        }
      ],
      "os.walk": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "dict": [
        {
          "args": [
            "python_files"
          ],
          "kwargs": {},
          "line_number": 52
        },
        {
          "args": [
            "function_usage"
          ],
          "kwargs": {},
          "line_number": 228
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 53
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 132
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 181
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 271
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 366
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 267
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 116
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 269
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 315
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 292
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 306
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 254
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 255
        }
      ],
      "join": [
        {
          "args": [
            "<complex-arg>",
            "'file_analysis.json'"
          ],
          "kwargs": {},
          "line_number": 128
        },
        {
          "args": [
            "<complex-arg>",
            "'constants_analysis.json'"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "<complex-arg>",
            "'function_analysis.json'"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "<complex-arg>",
            "'dependency_graph.dot'"
          ],
          "kwargs": {},
          "line_number": 259
        },
        {
          "args": [
            "<complex-arg>",
            "'analysis_report.md'"
          ],
          "kwargs": {},
          "line_number": 362
        },
        {
          "args": [
            "project_dir",
            "'analysis_output'"
          ],
          "kwargs": {},
          "line_number": 20
        },
        {
          "args": [
            "<complex-arg>",
            "'dependency_graph.png'"
          ],
          "kwargs": {},
          "line_number": 265
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 364
        },
        {
          "args": [
            "root",
            "file"
          ],
          "kwargs": {},
          "line_number": 48
        },
        {
          "args": [
            "sources"
          ],
          "kwargs": {},
          "line_number": 293
        },
        {
          "args": [
            "sources"
          ],
          "kwargs": {},
          "line_number": 307
        }
      ],
      "isinstance": [
        {
          "args": [
            "obj",
            "set"
          ],
          "kwargs": {},
          "line_number": 137
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 80
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 97
        },
        {
          "args": [
            "target",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 91
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 101
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 105
        }
      ],
      "TypeError": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 139
        }
      ],
      "results.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 151
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 325
        }
      ],
      "constant_sources.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 162
        }
      ],
      "function_definitions.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 220
        }
      ],
      "keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 245
        }
      ],
      "edges": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 251
        }
      ],
      "write_dot": [
        {
          "args": [
            "dep_graph",
            "graph_path"
          ],
          "kwargs": {},
          "line_number": 260
        }
      ],
      "report.append": [
        {
          "args": [
            "'### Constants Analysis'"
          ],
          "kwargs": {},
          "line_number": 286
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 287
        },
        {
          "args": [
            "'### Function Usage Analysis'"
          ],
          "kwargs": {},
          "line_number": 300
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 301
        },
        {
          "args": [
            "'#### Key Function Usage'"
          ],
          "kwargs": {},
          "line_number": 313
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 314
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 317
        },
        {
          "args": [
            "'### Import Analysis'"
          ],
          "kwargs": {},
          "line_number": 320
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 321
        },
        {
          "args": [
            "'#### Most Complex Import Patterns'"
          ],
          "kwargs": {},
          "line_number": 353
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 354
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 359
        },
        {
          "args": [
            "'#### Duplicate Constants'"
          ],
          "kwargs": {},
          "line_number": 290
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 291
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 294
        },
        {
          "args": [
            "'No duplicate constants found.'"
          ],
          "kwargs": {},
          "line_number": 296
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 297
        },
        {
          "args": [
            "'#### Duplicate Function Definitions'"
          ],
          "kwargs": {},
          "line_number": 304
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 305
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 308
        },
        {
          "args": [
            "'No duplicate function definitions found.'"
          ],
          "kwargs": {},
          "line_number": 310
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 311
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 316
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 357
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 293
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 307
        }
      ],
      "self.find_python_files": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 371
        }
      ],
      "self.analyze_all_files": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 372
        }
      ],
      "self.analyze_constants_usage": [
        {
          "args": [
            "results"
          ],
          "kwargs": {},
          "line_number": 373
        }
      ],
      "self.analyze_function_usage": [
        {
          "args": [
            "results"
          ],
          "kwargs": {},
          "line_number": 374
        }
      ],
      "self.generate_dependency_graph": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 375
        }
      ],
      "self.generate_report": [
        {
          "args": [
            "results",
            "constants_analysis",
            "function_analysis"
          ],
          "kwargs": {},
          "line_number": 376
        }
      ],
      "exists": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 27
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 28
        }
      ],
      "startswith": [
        {
          "args": [
            "'.'"
          ],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "ast.parse": [
        {
          "args": [
            "content"
          ],
          "kwargs": {},
          "line_number": 62
        }
      ],
      "ast.walk": [
        {
          "args": [
            "tree"
          ],
          "kwargs": {},
          "line_number": 73
        }
      ],
      "self.analyze_file": [
        {
          "args": [
            "abs_path"
          ],
          "kwargs": {},
          "line_number": 123
        }
      ],
      "open": [
        {
          "args": [
            "results_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "constants_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 178
        },
        {
          "args": [
            "function_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 233
        },
        {
          "args": [
            "report_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 363
        },
        {
          "args": [
            "file_path",
            "'r'"
          ],
          "kwargs": {
            "encoding": "<value>"
          },
          "line_number": 59
        }
      ],
      "json.dump": [
        {
          "args": [
            "results",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "default": "<value>"
          },
          "line_number": 130
        },
        {
          "args": [
            "constants_analysis",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "default": "<value>"
          },
          "line_number": 179
        },
        {
          "args": [
            "function_analysis",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "default": "<value>"
          },
          "line_number": 234
        }
      ],
      "list": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 138
        }
      ],
      "info.get": [
        {
          "args": [
            "'constants'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 152
        },
        {
          "args": [
            "'constants'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 155
        },
        {
          "args": [
            "'functions'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "'function_calls'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 209
        },
        {
          "args": [
            "'function_calls'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 212
        },
        {
          "args": [
            "'imports'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 332
        },
        {
          "args": [
            "'from_imports'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 340
        }
      ],
      "basename": [
        {
          "args": [
            "rel_path"
          ],
          "kwargs": {},
          "line_number": 247
        },
        {
          "args": [
            "root"
          ],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "dep_graph.add_node": [
        {
          "args": [
            "rel_path"
          ],
          "kwargs": {
            "label": "<value>"
          },
          "line_number": 248
        }
      ],
      "write_png": [
        {
          "args": [
            "graph_image_path"
          ],
          "kwargs": {},
          "line_number": 266
        }
      ],
      "sorted": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "key": "<value>",
            "reverse": "<value>"
          },
          "line_number": 349
        }
      ],
      "sum": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 356
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 350
        }
      ],
      "f.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 364
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 386
        },
        {
          "args": [
            "root"
          ],
          "kwargs": {},
          "line_number": 35
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 35
        }
      ],
      "file.endswith": [
        {
          "args": [
            "'.py'"
          ],
          "kwargs": {},
          "line_number": 47
        }
      ],
      "f.read": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 60
        }
      ],
      "append": [
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 158
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 206
        },
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 216
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 76
        },
        {
          "args": [
            "import_from"
          ],
          "kwargs": {},
          "line_number": 84
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "name"
          ],
          "kwargs": {},
          "line_number": 94
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 103
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 109
        },
        {
          "args": [
            "module_name"
          ],
          "kwargs": {},
          "line_number": 111
        }
      ],
      "len": [
        {
          "args": [
            "sources"
          ],
          "kwargs": {},
          "line_number": 221
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 53
        },
        {
          "args": [
            "sources"
          ],
          "kwargs": {},
          "line_number": 163
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 279
        },
        {
          "args": [
            "files"
          ],
          "kwargs": {},
          "line_number": 316
        }
      ],
      "next": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 254
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 255
        }
      ],
      "dep_graph.add_edge": [
        {
          "args": [
            "source_rel",
            "target_rel"
          ],
          "kwargs": {},
          "line_number": 256
        }
      ],
      "import_counts.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 349
        }
      ],
      "counts.values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 356
        }
      ],
      "relpath": [
        {
          "args": [
            "file_path",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 49
        }
      ],
      "python_files.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 50
        }
      ],
      "type": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 139
        }
      ],
      "values": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 253
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 253
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 350
        }
      ],
      "add_edge": [
        {
          "args": [
            "file_path",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 78
        },
        {
          "args": [
            "file_path",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 86
        }
      ],
      "func_call.split": [
        {
          "args": [
            "'.'"
          ],
          "kwargs": {},
          "line_number": 214
        }
      ],
      "pydot.graph_from_dot_file": [
        {
          "args": [
            "graph_path"
          ],
          "kwargs": {},
          "line_number": 266
        }
      ],
      "imp.split": [
        {
          "args": [
            "'.'"
          ],
          "kwargs": {},
          "line_number": 341
        },
        {
          "args": [
            "'.'"
          ],
          "kwargs": {},
          "line_number": 343
        }
      ],
      "str": [
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 116
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 269
        }
      ],
      "name.isupper": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 93
        }
      ]
    }
  },
  "tools/run_analysis.py": {
    "functions": {
      "run_analysis": {
        "params": [
          "project_dir"
        ],
        "defaults": {},
        "docstring": "Run all analysis tools and generate a comprehensive report",
        "line_number": 25,
        "end_line": 83
      },
      "generate_summary_report": {
        "params": [
          "output_dir",
          "dep_results",
          "const_results",
          "func_results"
        ],
        "defaults": {},
        "docstring": "Generate a summary report combining all analysis results",
        "line_number": 85,
        "end_line": 140
      },
      "custom_json_serializer": {
        "params": [
          "obj"
        ],
        "defaults": {},
        "docstring": null,
        "line_number": 38,
        "end_line": 43
      }
    },
    "calls": {
      "append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 14
        }
      ],
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 14
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 144
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 144
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 27
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 35
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 82
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 83
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 139
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 21
        },
        {
          "args": [
            "\"Make sure you're running this script from the project root or tools directory.\""
          ],
          "kwargs": {},
          "line_number": 22
        },
        {
          "args": [
            "'\\n=== Running Dependency Analysis ==='"
          ],
          "kwargs": {},
          "line_number": 47
        },
        {
          "args": [
            "'\\n=== Running Constants Validation ==='"
          ],
          "kwargs": {},
          "line_number": 56
        },
        {
          "args": [
            "'\\n=== Running Function Consistency Checks ==='"
          ],
          "kwargs": {},
          "line_number": 65
        },
        {
          "args": [
            "'\\n=== Generating Summary Report ==='"
          ],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 51
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 60
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 69
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 77
        }
      ],
      "time.time": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 28
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 79
        }
      ],
      "strftime": [
        {
          "args": [
            "'%Y%m%d_%H%M%S'"
          ],
          "kwargs": {},
          "line_number": 31
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 27
        },
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 90
        }
      ],
      "join": [
        {
          "args": [
            "project_dir",
            "'analysis_output'",
            "timestamp"
          ],
          "kwargs": {},
          "line_number": 32
        },
        {
          "args": [
            "output_dir",
            "'summary_report.md'"
          ],
          "kwargs": {},
          "line_number": 135
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "output_dir"
          ],
          "kwargs": {
            "exist_ok": "<value>"
          },
          "line_number": 33
        }
      ],
      "report.append": [
        {
          "args": [
            "'### File Dependency Analysis'"
          ],
          "kwargs": {},
          "line_number": 97
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "'For detailed results, see [Full Dependency Analysis](analysis_report.md)'"
          ],
          "kwargs": {},
          "line_number": 99
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 100
        },
        {
          "args": [
            "'### Constants Usage'"
          ],
          "kwargs": {},
          "line_number": 103
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "'For detailed results, see [Constants Usage Report](constants_report.md)'"
          ],
          "kwargs": {},
          "line_number": 105
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "'### Function Consistency'"
          ],
          "kwargs": {},
          "line_number": 109
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 110
        },
        {
          "args": [
            "'For detailed results, see [Function Consistency Report](function_report.md)'"
          ],
          "kwargs": {},
          "line_number": 111
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [
            "'## Next Steps'"
          ],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 115
        },
        {
          "args": [
            "'1. **Fix Constants Usage**'"
          ],
          "kwargs": {},
          "line_number": 116
        },
        {
          "args": [
            "'   - Move hardcoded constants to config.py'"
          ],
          "kwargs": {},
          "line_number": 117
        },
        {
          "args": [
            "'   - Ensure all files import from config.py instead of redefining constants'"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 119
        },
        {
          "args": [
            "'2. **Consolidate Duplicate Functions**'"
          ],
          "kwargs": {},
          "line_number": 120
        },
        {
          "args": [
            "'   - Identify functions duplicated across files'"
          ],
          "kwargs": {},
          "line_number": 121
        },
        {
          "args": [
            "'   - Move to appropriate utility modules'"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "'   - Update all import statements'"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 124
        },
        {
          "args": [
            "'3. **Standardize Function Calls**'"
          ],
          "kwargs": {},
          "line_number": 125
        },
        {
          "args": [
            "'   - Ensure consistent parameter naming across function calls'"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "'   - Fix inconsistent argument usage patterns'"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 128
        },
        {
          "args": [
            "'4. **Optimize Import Patterns**'"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "'   - Resolve circular dependencies'"
          ],
          "kwargs": {},
          "line_number": 130
        },
        {
          "args": [
            "'   - Group imports by standard lib, third-party, and local modules'"
          ],
          "kwargs": {},
          "line_number": 131
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 132
        }
      ],
      "run_analysis": [
        {
          "args": [
            "project_dir"
          ],
          "kwargs": {},
          "line_number": 145
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 14
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 144
        }
      ],
      "sys.exit": [
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 23
        }
      ],
      "isinstance": [
        {
          "args": [
            "obj",
            "set"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "obj",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 41
        }
      ],
      "TypeError": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 43
        }
      ],
      "DependencyAnalyzer": [
        {
          "args": [
            "project_dir",
            "output_dir"
          ],
          "kwargs": {},
          "line_number": 48
        }
      ],
      "analyzer.run_analysis": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 49
        }
      ],
      "ConstantsValidator": [
        {
          "args": [
            "project_dir",
            "output_dir"
          ],
          "kwargs": {},
          "line_number": 57
        }
      ],
      "validator.run_validation": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 58
        }
      ],
      "FunctionChecker": [
        {
          "args": [
            "project_dir",
            "output_dir"
          ],
          "kwargs": {},
          "line_number": 66
        }
      ],
      "checker.run_checks": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 67
        }
      ],
      "generate_summary_report": [
        {
          "args": [
            "output_dir",
            "dep_results",
            "const_results",
            "func_results"
          ],
          "kwargs": {},
          "line_number": 75
        }
      ],
      "open": [
        {
          "args": [
            "report_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 136
        }
      ],
      "f.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 31
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 27
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 90
        }
      ],
      "list": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 40
        }
      ],
      "str": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 42
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 21
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 51
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 60
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 69
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 77
        }
      ],
      "type": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 43
        }
      ]
    }
  },
  "tools/constants_validator.py": {
    "functions": {
      "__init__": {
        "params": [
          "self",
          "project_dir",
          "output_dir"
        ],
        "defaults": {
          "output_dir": null
        },
        "docstring": "Initialize the validator with project directory",
        "line_number": 16,
        "end_line": 34
      },
      "find_python_files": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Find all Python files in the project directory",
        "line_number": 36,
        "end_line": 56
      },
      "_get_constant_value": {
        "params": [
          "self",
          "node"
        ],
        "defaults": {},
        "docstring": "Extract constant value from an AST node",
        "line_number": 58,
        "end_line": 91
      },
      "analyze_file_constants": {
        "params": [
          "self",
          "file_path"
        ],
        "defaults": {},
        "docstring": "Analyze constants defined and used in a single file",
        "line_number": 93,
        "end_line": 166
      },
      "_json_serializer": {
        "params": [
          "self",
          "obj"
        ],
        "defaults": {},
        "docstring": "Custom JSON serializer to handle non-serializable objects",
        "line_number": 168,
        "end_line": 174
      },
      "analyze_all_files": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Analyze all Python files for constants usage",
        "line_number": 176,
        "end_line": 190
      },
      "find_config_file": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Find the config.py file in the project",
        "line_number": 192,
        "end_line": 206
      },
      "analyze_config_file": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Analyze the config.py file to identify defined constants",
        "line_number": 208,
        "end_line": 223
      },
      "generate_constants_report": {
        "params": [
          "self",
          "all_results",
          "config_results"
        ],
        "defaults": {},
        "docstring": "Generate a report on constants usage consistency",
        "line_number": 225,
        "end_line": 309
      },
      "run_validation": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Run the full constants validation process",
        "line_number": 311,
        "end_line": 322
      }
    },
    "calls": {
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 326
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 326
        }
      ],
      "ConstantsValidator": [
        {
          "args": [
            "project_dir"
          ],
          "kwargs": {},
          "line_number": 327
        }
      ],
      "validator.run_validation": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 328
        }
      ],
      "defaultdict": [
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 30
        },
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 284
        }
      ],
      "os.walk": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 39
        }
      ],
      "dict": [
        {
          "args": [
            "python_files"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 321
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 189
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 308
        },
        {
          "args": [
            "'Warning: No config.py file found!'"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 204
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 165
        }
      ],
      "isinstance": [
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 60
        },
        {
          "args": [
            "obj",
            "set"
          ],
          "kwargs": {},
          "line_number": 170
        },
        {
          "args": [
            "obj",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 172
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 62
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 71
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 111
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 134
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 78
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 136
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 146
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 146
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 86
        },
        {
          "args": [
            "target",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 120
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [
            "e",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 153
        }
      ],
      "TypeError": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 174
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 179
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 195
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 276
        }
      ],
      "join": [
        {
          "args": [
            "<complex-arg>",
            "'constants_usage.json'"
          ],
          "kwargs": {},
          "line_number": 185
        },
        {
          "args": [
            "<complex-arg>",
            "'config_analysis.json'"
          ],
          "kwargs": {},
          "line_number": 218
        },
        {
          "args": [
            "<complex-arg>",
            "'constants_report.md'"
          ],
          "kwargs": {},
          "line_number": 304
        },
        {
          "args": [
            "project_dir",
            "'analysis_output'"
          ],
          "kwargs": {},
          "line_number": 19
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 306
        },
        {
          "args": [
            "root",
            "file"
          ],
          "kwargs": {},
          "line_number": 50
        }
      ],
      "self.find_config_file": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 210
        }
      ],
      "self.analyze_file_constants": [
        {
          "args": [
            "abs_path"
          ],
          "kwargs": {},
          "line_number": 215
        },
        {
          "args": [
            "abs_path"
          ],
          "kwargs": {},
          "line_number": 180
        }
      ],
      "config_results.get": [
        {
          "args": [
            "'defined_constants'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 239
        }
      ],
      "report.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 241
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 245
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 254
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 255
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "'### Files NOT importing from config.py:'"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 267
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 270
        },
        {
          "args": [
            "'### Critical Constants Defined Outside config.py:'"
          ],
          "kwargs": {},
          "line_number": 274
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 275
        },
        {
          "args": [
            "'### Hardcoded Values That Should Use Constants:'"
          ],
          "kwargs": {},
          "line_number": 294
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 295
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 269
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 277
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 278
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 281
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 297
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 298
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 301
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 280
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 300
        }
      ],
      "config_constants.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 243
        }
      ],
      "all_results.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 285
        }
      ],
      "keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 258
        }
      ],
      "self.find_python_files": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 313
        }
      ],
      "self.analyze_all_files": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 314
        }
      ],
      "self.analyze_config_file": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 315
        }
      ],
      "self.generate_constants_report": [
        {
          "args": [
            "all_results",
            "config_results"
          ],
          "kwargs": {},
          "line_number": 316
        }
      ],
      "exists": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 34
        }
      ],
      "startswith": [
        {
          "args": [
            "'.'"
          ],
          "kwargs": {},
          "line_number": 42
        }
      ],
      "ast.parse": [
        {
          "args": [
            "content"
          ],
          "kwargs": {},
          "line_number": 99
        }
      ],
      "ast.walk": [
        {
          "args": [
            "tree"
          ],
          "kwargs": {},
          "line_number": 110
        },
        {
          "args": [
            "tree"
          ],
          "kwargs": {},
          "line_number": 117
        },
        {
          "args": [
            "tree"
          ],
          "kwargs": {},
          "line_number": 133
        }
      ],
      "list": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 171
        }
      ],
      "str": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 173
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 165
        }
      ],
      "open": [
        {
          "args": [
            "results_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 186
        },
        {
          "args": [
            "config_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 219
        },
        {
          "args": [
            "report_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 305
        },
        {
          "args": [
            "file_path",
            "'r'"
          ],
          "kwargs": {
            "encoding": "<value>"
          },
          "line_number": 96
        }
      ],
      "json.dump": [
        {
          "args": [
            "results",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "default": "<value>"
          },
          "line_number": 187
        },
        {
          "args": [
            "results",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "default": "<value>"
          },
          "line_number": 220
        }
      ],
      "rel_path.endswith": [
        {
          "args": [
            "'config.py'"
          ],
          "kwargs": {},
          "line_number": 196
        },
        {
          "args": [
            "'config.py'"
          ],
          "kwargs": {},
          "line_number": 259
        }
      ],
      "len": [
        {
          "args": [
            "config_files"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "config_constants"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "files_importing_config"
          ],
          "kwargs": {},
          "line_number": 254
        },
        {
          "args": [
            "elements"
          ],
          "kwargs": {},
          "line_number": 153
        }
      ],
      "results.get": [
        {
          "args": [
            "'imported_constants'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 250
        },
        {
          "args": [
            "'hardcoded_values'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 286
        }
      ],
      "hardcoded_by_type.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 296
        }
      ],
      "f.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 306
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 326
        },
        {
          "args": [
            "root"
          ],
          "kwargs": {},
          "line_number": 40
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 40
        }
      ],
      "file.endswith": [
        {
          "args": [
            "'.py'"
          ],
          "kwargs": {},
          "line_number": 49
        }
      ],
      "f.read": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 97
        }
      ],
      "config_files.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 197
        }
      ],
      "files_importing_config.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 252
        }
      ],
      "any": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 262
        }
      ],
      "files_not_importing.append": [
        {
          "args": [
            "rel_path"
          ],
          "kwargs": {},
          "line_number": 263
        }
      ],
      "append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 287
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 139
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 156
        }
      ],
      "basename": [
        {
          "args": [
            "root"
          ],
          "kwargs": {},
          "line_number": 42
        }
      ],
      "relpath": [
        {
          "args": [
            "file_path",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 51
        }
      ],
      "python_files.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 52
        }
      ],
      "type": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 174
        }
      ],
      "self._get_constant_value": [
        {
          "args": [
            "elt"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "elt"
          ],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "elt"
          ],
          "kwargs": {},
          "line_number": 149
        },
        {
          "args": [
            "k"
          ],
          "kwargs": {},
          "line_number": 81
        },
        {
          "args": [
            "v"
          ],
          "kwargs": {},
          "line_number": 82
        }
      ],
      "tuple": [
        {
          "args": [
            "values"
          ],
          "kwargs": {},
          "line_number": 77
        }
      ],
      "config_imports.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 113
        }
      ],
      "hasattr": [
        {
          "args": [
            "<complex-arg>",
            "'n'"
          ],
          "kwargs": {},
          "line_number": 136
        },
        {
          "args": [
            "ast",
            "'Constant'"
          ],
          "kwargs": {},
          "line_number": 89
        }
      ],
      "values.append": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 69
        },
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 76
        }
      ],
      "zip": [
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 80
        }
      ],
      "isupper": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 120
        }
      ],
      "all": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 153
        }
      ],
      "elements.append": [
        {
          "args": [
            "value"
          ],
          "kwargs": {},
          "line_number": 151
        }
      ],
      "abs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 155
        }
      ],
      "sum": [
        {
          "args": [
            "elements"
          ],
          "kwargs": {},
          "line_number": 155
        }
      ]
    }
  },
  "tools/function_checker.py": {
    "functions": {
      "__init__": {
        "params": [
          "self",
          "project_dir",
          "output_dir"
        ],
        "defaults": {
          "output_dir": null
        },
        "docstring": "Initialize the checker with project directory",
        "line_number": 15,
        "end_line": 36
      },
      "find_python_files": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Find all Python files in the project directory",
        "line_number": 38,
        "end_line": 58
      },
      "analyze_function_definitions": {
        "params": [
          "self",
          "file_path"
        ],
        "defaults": {},
        "docstring": "Analyze function definitions in a single file",
        "line_number": 60,
        "end_line": 167
      },
      "analyze_function_calls": {
        "params": [
          "self",
          "file_path"
        ],
        "defaults": {},
        "docstring": "Analyze function calls in a single file",
        "line_number": 169,
        "end_line": 238
      },
      "_json_serializer": {
        "params": [
          "self",
          "obj"
        ],
        "defaults": {},
        "docstring": "Custom JSON serializer to handle non-serializable objects",
        "line_number": 240,
        "end_line": 246
      },
      "analyze_all_files": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Analyze all Python files for function definitions and calls",
        "line_number": 248,
        "end_line": 269
      },
      "check_function_consistency": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Check for consistency in function signatures across files",
        "line_number": 271,
        "end_line": 313
      },
      "generate_function_report": {
        "params": [
          "self",
          "consistency_checks"
        ],
        "defaults": {},
        "docstring": "Generate a report on function consistency",
        "line_number": 315,
        "end_line": 426
      },
      "run_checks": {
        "params": [
          "self"
        ],
        "defaults": {},
        "docstring": "Run the full function consistency checking process",
        "line_number": 428,
        "end_line": 438
      }
    },
    "calls": {
      "dirname": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 442
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 442
        }
      ],
      "FunctionChecker": [
        {
          "args": [
            "project_dir"
          ],
          "kwargs": {},
          "line_number": 443
        }
      ],
      "checker.run_checks": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 444
        }
      ],
      "defaultdict": [
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 31
        },
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 32
        },
        {
          "args": [
            "list"
          ],
          "kwargs": {},
          "line_number": 176
        }
      ],
      "os.walk": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 41
        }
      ],
      "dict": [
        {
          "args": [
            "python_files"
          ],
          "kwargs": {},
          "line_number": 56
        },
        {
          "args": [
            "function_calls"
          ],
          "kwargs": {},
          "line_number": 234
        }
      ],
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 268
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 425
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 166
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 237
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 261
        }
      ],
      "isinstance": [
        {
          "args": [
            "obj",
            "set"
          ],
          "kwargs": {},
          "line_number": 242
        },
        {
          "args": [
            "obj",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 244
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 70
        },
        {
          "args": [
            "node",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 179
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 181
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 184
        },
        {
          "args": [
            "arg",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 197
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 92
        },
        {
          "args": [
            "<complex-arg>",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 187
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 94
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 124
        },
        {
          "args": [
            "arg",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "arg",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 96
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 126
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 128
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 100
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 130
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 132
        },
        {
          "args": [
            "default",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 134
        }
      ],
      "TypeError": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 246
        }
      ],
      "items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 251
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 275
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 295
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 355
        }
      ],
      "join": [
        {
          "args": [
            "<complex-arg>",
            "'function_analysis.json'"
          ],
          "kwargs": {},
          "line_number": 264
        },
        {
          "args": [
            "<complex-arg>",
            "'function_report.md'"
          ],
          "kwargs": {},
          "line_number": 421
        },
        {
          "args": [
            "project_dir",
            "'analysis_output'"
          ],
          "kwargs": {},
          "line_number": 18
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 284
        },
        {
          "args": [
            "report"
          ],
          "kwargs": {},
          "line_number": 423
        },
        {
          "args": [
            "root",
            "file"
          ],
          "kwargs": {},
          "line_number": 52
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 340
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 354
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 355
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 375
        }
      ],
      "multiple_definitions.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 281
        }
      ],
      "consistency_checks.get": [
        {
          "args": [
            "'multiple_definitions'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 364
        },
        {
          "args": [
            "'parameter_inconsistencies'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 380
        },
        {
          "args": [
            "'call_pattern_inconsistencies'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 399
        }
      ],
      "self.find_python_files": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 430
        }
      ],
      "self.analyze_all_files": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 431
        }
      ],
      "self.check_function_consistency": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 432
        }
      ],
      "self.generate_function_report": [
        {
          "args": [
            "consistency_checks"
          ],
          "kwargs": {},
          "line_number": 433
        }
      ],
      "exists": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 35
        }
      ],
      "os.makedirs": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 36
        }
      ],
      "startswith": [
        {
          "args": [
            "'.'"
          ],
          "kwargs": {},
          "line_number": 44
        }
      ],
      "ast.parse": [
        {
          "args": [
            "content"
          ],
          "kwargs": {},
          "line_number": 66
        },
        {
          "args": [
            "content"
          ],
          "kwargs": {},
          "line_number": 175
        }
      ],
      "ast.walk": [
        {
          "args": [
            "tree"
          ],
          "kwargs": {},
          "line_number": 69
        },
        {
          "args": [
            "tree"
          ],
          "kwargs": {},
          "line_number": 178
        }
      ],
      "list": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 243
        },
        {
          "args": [
            "unique_signatures"
          ],
          "kwargs": {},
          "line_number": 290
        },
        {
          "args": [
            "kwarg_keys"
          ],
          "kwargs": {},
          "line_number": 306
        }
      ],
      "str": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 245
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 166
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 237
        },
        {
          "args": [
            "e"
          ],
          "kwargs": {},
          "line_number": 261
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 105
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "open": [
        {
          "args": [
            "results_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 265
        },
        {
          "args": [
            "report_path",
            "'w'"
          ],
          "kwargs": {},
          "line_number": 422
        },
        {
          "args": [
            "file_path",
            "'r'"
          ],
          "kwargs": {
            "encoding": "<value>"
          },
          "line_number": 63
        },
        {
          "args": [
            "file_path",
            "'r'"
          ],
          "kwargs": {
            "encoding": "<value>"
          },
          "line_number": 172
        }
      ],
      "json.dump": [
        {
          "args": [
            "results",
            "f"
          ],
          "kwargs": {
            "indent": "<value>",
            "default": "<value>"
          },
          "line_number": 266
        }
      ],
      "set": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 282
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 298
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 413
        }
      ],
      "get": [
        {
          "args": [
            "func_name",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 330
        },
        {
          "args": [
            "func_name",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 331
        }
      ],
      "report.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 333
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 334
        },
        {
          "args": [
            "'## Functions Defined in Multiple Files'"
          ],
          "kwargs": {},
          "line_number": 366
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 367
        },
        {
          "args": [
            "'## Functions with Inconsistent Parameters'"
          ],
          "kwargs": {},
          "line_number": 382
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 383
        },
        {
          "args": [
            "'## Functions with Inconsistent Call Patterns'"
          ],
          "kwargs": {},
          "line_number": 401
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 402
        },
        {
          "args": [
            "'#### Defined in:'"
          ],
          "kwargs": {},
          "line_number": 337
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 338
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 342
        },
        {
          "args": [
            "'Not defined in any analyzed file.'"
          ],
          "kwargs": {},
          "line_number": 344
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 345
        },
        {
          "args": [
            "'#### Called from:'"
          ],
          "kwargs": {},
          "line_number": 348
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 349
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 358
        },
        {
          "args": [
            "'Not called in any analyzed file.'"
          ],
          "kwargs": {},
          "line_number": 360
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 361
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 372
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 373
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 377
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 385
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 386
        },
        {
          "args": [
            "'Different signatures:'"
          ],
          "kwargs": {},
          "line_number": 387
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 388
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 391
        },
        {
          "args": [
            "'Defined in:'"
          ],
          "kwargs": {},
          "line_number": 392
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 393
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 396
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 404
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 405
        },
        {
          "args": [
            "'Keyword argument variations:'"
          ],
          "kwargs": {},
          "line_number": 406
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 407
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 410
        },
        {
          "args": [
            "'Called from:'"
          ],
          "kwargs": {},
          "line_number": 411
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 412
        },
        {
          "args": [
            "''"
          ],
          "kwargs": {},
          "line_number": 418
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 341
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 357
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 376
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 390
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 395
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 409
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 417
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 352
        }
      ],
      "multiple_defs.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 368
        }
      ],
      "param_inconsistencies.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 384
        }
      ],
      "call_inconsistencies.items": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 403
        }
      ],
      "f.write": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 423
        }
      ],
      "abspath": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 442
        },
        {
          "args": [
            "root"
          ],
          "kwargs": {},
          "line_number": 42
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 42
        }
      ],
      "file.endswith": [
        {
          "args": [
            "'.py'"
          ],
          "kwargs": {},
          "line_number": 51
        }
      ],
      "f.read": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 173
        }
      ],
      "self.analyze_function_definitions": [
        {
          "args": [
            "abs_path"
          ],
          "kwargs": {},
          "line_number": 253
        }
      ],
      "self.analyze_function_calls": [
        {
          "args": [
            "abs_path"
          ],
          "kwargs": {},
          "line_number": 254
        }
      ],
      "len": [
        {
          "args": [
            "definitions"
          ],
          "kwargs": {},
          "line_number": 276
        },
        {
          "args": [
            "unique_signatures"
          ],
          "kwargs": {},
          "line_number": 287
        },
        {
          "args": [
            "calls"
          ],
          "kwargs": {},
          "line_number": 296
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [
            "kwarg_keys"
          ],
          "kwargs": {},
          "line_number": 303
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 322
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [
            "calls"
          ],
          "kwargs": {},
          "line_number": 352
        }
      ],
      "unique_signatures.add": [
        {
          "args": [
            "signature_str"
          ],
          "kwargs": {},
          "line_number": 285
        }
      ],
      "enumerate": [
        {
          "args": [
            "calls"
          ],
          "kwargs": {},
          "line_number": 350
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 120
        }
      ],
      "sorted": [
        {
          "args": [
            "unique_files"
          ],
          "kwargs": {},
          "line_number": 416
        }
      ],
      "basename": [
        {
          "args": [
            "root"
          ],
          "kwargs": {},
          "line_number": 44
        }
      ],
      "relpath": [
        {
          "args": [
            "file_path",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 53
        }
      ],
      "python_files.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 54
        }
      ],
      "hasattr": [
        {
          "args": [
            "<complex-arg>",
            "'kwonlyargs'"
          ],
          "kwargs": {},
          "line_number": 113
        },
        {
          "args": [
            "<complex-arg>",
            "'kw_defaults'"
          ],
          "kwargs": {},
          "line_number": 119
        },
        {
          "args": [
            "arg",
            "'arg'"
          ],
          "kwargs": {},
          "line_number": 81
        },
        {
          "args": [
            "<complex-arg>",
            "'arg'"
          ],
          "kwargs": {},
          "line_number": 109
        },
        {
          "args": [
            "<complex-arg>",
            "'arg'"
          ],
          "kwargs": {},
          "line_number": 141
        },
        {
          "args": [
            "node",
            "'end_lineno'"
          ],
          "kwargs": {},
          "line_number": 153
        },
        {
          "args": [
            "<complex-arg>",
            "'arg'"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "arg",
            "'arg'"
          ],
          "kwargs": {},
          "line_number": 115
        },
        {
          "args": [
            "ast",
            "'Constant'"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "<complex-arg>",
            "'arg'"
          ],
          "kwargs": {},
          "line_number": 122
        },
        {
          "args": [
            "arg",
            "'s'"
          ],
          "kwargs": {},
          "line_number": 202
        },
        {
          "args": [
            "arg",
            "'n'"
          ],
          "kwargs": {},
          "line_number": 204
        },
        {
          "args": [
            "ast",
            "'Constant'"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "arg",
            "'value'"
          ],
          "kwargs": {},
          "line_number": 206
        },
        {
          "args": [
            "ast",
            "'Constant'"
          ],
          "kwargs": {},
          "line_number": 130
        }
      ],
      "ast.get_docstring": [
        {
          "args": [
            "node"
          ],
          "kwargs": {},
          "line_number": 145
        }
      ],
      "append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 157
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 219
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 228
        }
      ],
      "type": [
        {
          "args": [
            "obj"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "default"
          ],
          "kwargs": {},
          "line_number": 105
        },
        {
          "args": [
            "default"
          ],
          "kwargs": {},
          "line_number": 137
        }
      ],
      "kwarg_keys.update": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 300
        }
      ],
      "unique_files.add": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 415
        }
      ],
      "params.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 110
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 142
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 82
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 84
        },
        {
          "args": [
            "arg_name"
          ],
          "kwargs": {},
          "line_number": 116
        }
      ],
      "keys": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 300
        }
      ],
      "args.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 198
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "'<complex-arg>'"
          ],
          "kwargs": {},
          "line_number": 211
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 205
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 207
        },
        {
          "args": [
            "'<complex-arg>'"
          ],
          "kwargs": {},
          "line_number": 209
        }
      ],
      "call.get": [
        {
          "args": [
            "'kwargs'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 300
        },
        {
          "args": [
            "'kwargs'",
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 355
        }
      ],
      "repr": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 203
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 205
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 207
        }
      ]
    }
  },
  "git/git_pull.py": {
    "functions": {
      "run_command": {
        "params": [
          "command",
          "verbose"
        ],
        "defaults": {
          "verbose": true
        },
        "docstring": "Run a shell command and return the output.",
        "line_number": 8,
        "end_line": 25
      },
      "check_for_changes": {
        "params": [],
        "defaults": {},
        "docstring": "Check if there are any local changes that might conflict with pull.",
        "line_number": 27,
        "end_line": 33
      },
      "pull_updates": {
        "params": [
          "force",
          "hard_reset"
        ],
        "defaults": {
          "force": false,
          "hard_reset": false
        },
        "docstring": "Pull updates from the remote git repository.\n\nArgs:\n    force: If True, pull even if there are local changes\n    hard_reset: If True, discard all local changes and reset to remote",
        "line_number": 35,
        "end_line": 125
      },
      "sync_changes": {
        "params": [],
        "defaults": {},
        "docstring": "Sync changes between local and remote repositories.\n\nThis handles the scenario where:\n1. Changes were made online (on GitHub)\n2. Changes were also made locally\n3. You want to merge both sets of changes and update the online repository",
        "line_number": 127,
        "end_line": 227
      },
      "pull_specific_files": {
        "params": [
          "file_paths"
        ],
        "defaults": {},
        "docstring": "Pull only specific files from the remote repository.\n\nArgs:\n    file_paths: List of file paths to pull",
        "line_number": 229,
        "end_line": 324
      }
    },
    "calls": {
      "run_command": [
        {
          "args": [
            "'git status --porcelain'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 29
        },
        {
          "args": [
            "'git branch --show-current'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 43
        },
        {
          "args": [
            "'git fetch'"
          ],
          "kwargs": {},
          "line_number": 96
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 102
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 118
        },
        {
          "args": [
            "'git branch --show-current'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 138
        },
        {
          "args": [
            "'git fetch origin'"
          ],
          "kwargs": {},
          "line_number": 181
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 187
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 209
        },
        {
          "args": [
            "'git branch --show-current'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 240
        },
        {
          "args": [
            "'git fetch origin'"
          ],
          "kwargs": {},
          "line_number": 250
        },
        {
          "args": [
            "'git fetch origin'"
          ],
          "kwargs": {},
          "line_number": 68
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 75
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 114
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 195
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 217
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 264
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 270
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 289
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 311
        },
        {
          "args": [
            "'git add .'"
          ],
          "kwargs": {},
          "line_number": 160
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 166
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 298
        }
      ],
      "bool": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "print": [
        {
          "args": [
            "'Checking current branch...'"
          ],
          "kwargs": {},
          "line_number": 42
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 50
        },
        {
          "args": [
            "'\\nFetching updates from remote repository...'"
          ],
          "kwargs": {},
          "line_number": 95
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 110
        },
        {
          "args": [
            "'\\nPulling updates from remote repository...'"
          ],
          "kwargs": {},
          "line_number": 117
        },
        {
          "args": [
            "'\\n\u2705 Successfully pulled changes from the remote repository!'"
          ],
          "kwargs": {},
          "line_number": 124
        },
        {
          "args": [
            "'Starting synchronization between local and remote repositories...'"
          ],
          "kwargs": {},
          "line_number": 135
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 144
        },
        {
          "args": [
            "'\\nFetching changes from remote repository...'"
          ],
          "kwargs": {},
          "line_number": 180
        },
        {
          "args": [
            "'\\n\ud83d\udd04 Synchronization complete! Local and remote repositories are now in sync.'"
          ],
          "kwargs": {},
          "line_number": 226
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 246
        },
        {
          "args": [
            "'\\nFetching latest changes from remote repository...'"
          ],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [
            "'\\nChecking for changes in specified files:'"
          ],
          "kwargs": {},
          "line_number": 257
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 282
        },
        {
          "args": [
            "'Failed to determine current branch.'"
          ],
          "kwargs": {},
          "line_number": 46
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f WARNING: Hard reset will DISCARD ALL LOCAL CHANGES and reset to remote branch.'"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "'This action cannot be undone. Uncommitted work will be lost.'"
          ],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [
            "'\\nFetching latest changes...'"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [
            "'\\n\u2705 Successfully reset to remote branch!'"
          ],
          "kwargs": {},
          "line_number": 80
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f You have uncommitted local changes that might be overwritten.'"
          ],
          "kwargs": {},
          "line_number": 86
        },
        {
          "args": [
            "'Options:'"
          ],
          "kwargs": {},
          "line_number": 87
        },
        {
          "args": [
            "'  1. Commit your changes first with git_push.py'"
          ],
          "kwargs": {},
          "line_number": 88
        },
        {
          "args": [
            "'  2. Stash your changes with: git stash'"
          ],
          "kwargs": {},
          "line_number": 89
        },
        {
          "args": [
            "'  3. Use --force to pull anyway (may cause conflicts)'"
          ],
          "kwargs": {},
          "line_number": 90
        },
        {
          "args": [
            "'  4. Use --hard-reset to discard all local changes and sync with remote'"
          ],
          "kwargs": {},
          "line_number": 91
        },
        {
          "args": [
            "'Failed to fetch from remote repository.'"
          ],
          "kwargs": {},
          "line_number": 98
        },
        {
          "args": [
            "'\\n\u2705 Already up-to-date. No new changes to pull.'"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "'\\nIncoming changes:'"
          ],
          "kwargs": {},
          "line_number": 113
        },
        {
          "args": [
            "'Failed to pull changes.'"
          ],
          "kwargs": {},
          "line_number": 121
        },
        {
          "args": [
            "'Failed to determine current branch.'"
          ],
          "kwargs": {},
          "line_number": 140
        },
        {
          "args": [
            "'\\n\ud83d\udcdd You have uncommitted local changes.'"
          ],
          "kwargs": {},
          "line_number": 149
        },
        {
          "args": [
            "'Failed to fetch from remote repository.'"
          ],
          "kwargs": {},
          "line_number": 183
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 191
        },
        {
          "args": [
            "'Pulling remote changes...'"
          ],
          "kwargs": {},
          "line_number": 192
        },
        {
          "args": [
            "'\u2705 Successfully pulled remote changes.'"
          ],
          "kwargs": {},
          "line_number": 204
        },
        {
          "args": [
            "'\\nNo new changes to pull from remote repository.'"
          ],
          "kwargs": {},
          "line_number": 206
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 213
        },
        {
          "args": [
            "'Pushing local changes to remote...'"
          ],
          "kwargs": {},
          "line_number": 214
        },
        {
          "args": [
            "'\u2705 Successfully pushed local changes to remote repository.'"
          ],
          "kwargs": {},
          "line_number": 222
        },
        {
          "args": [
            "'\\nNo local commits to push to remote repository.'"
          ],
          "kwargs": {},
          "line_number": 224
        },
        {
          "args": [
            "'No files specified to pull.'"
          ],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [
            "'Failed to determine current branch.'"
          ],
          "kwargs": {},
          "line_number": 242
        },
        {
          "args": [
            "'Failed to fetch from remote repository.'"
          ],
          "kwargs": {},
          "line_number": 252
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 261
        },
        {
          "args": [
            "'\\n\u2705 No changes found in the specified files. Everything is up-to-date.'"
          ],
          "kwargs": {},
          "line_number": 278
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 286
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 317
        },
        {
          "args": [
            "'\\n\u2705 Successfully pulled specified files from the remote repository!'"
          ],
          "kwargs": {},
          "line_number": 320
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f Completed with some errors. Some files may not have been updated.'"
          ],
          "kwargs": {},
          "line_number": 322
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 20
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 23
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 24
        },
        {
          "args": [
            "'Failed to fetch from remote repository.'"
          ],
          "kwargs": {},
          "line_number": 70
        },
        {
          "args": [
            "'Failed to reset to remote branch.'"
          ],
          "kwargs": {},
          "line_number": 77
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f Pull failed. You may need to resolve conflicts manually.'"
          ],
          "kwargs": {},
          "line_number": 197
        },
        {
          "args": [
            "'After resolving conflicts, run:'"
          ],
          "kwargs": {},
          "line_number": 198
        },
        {
          "args": [
            "'  git add .'"
          ],
          "kwargs": {},
          "line_number": 199
        },
        {
          "args": [
            "'  git commit -m \"Resolve merge conflicts\"'"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 201
        },
        {
          "args": [
            "'Failed to push changes to remote repository.'"
          ],
          "kwargs": {},
          "line_number": 219
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 266
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 273
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 275
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 291
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 313
        },
        {
          "args": [
            "'Hard reset cancelled.'"
          ],
          "kwargs": {},
          "line_number": 60
        },
        {
          "args": [
            "'\\nHard reset cancelled.'"
          ],
          "kwargs": {},
          "line_number": 63
        },
        {
          "args": [
            "'\\nStaging local changes...'"
          ],
          "kwargs": {},
          "line_number": 159
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 165
        },
        {
          "args": [
            "'\u2705 Local changes committed successfully.'"
          ],
          "kwargs": {},
          "line_number": 171
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f Continuing without committing local changes.'"
          ],
          "kwargs": {},
          "line_number": 173
        },
        {
          "args": [
            "'This may make merging more complex.'"
          ],
          "kwargs": {},
          "line_number": 174
        },
        {
          "args": [
            "'\\nSync operation cancelled.'"
          ],
          "kwargs": {},
          "line_number": 176
        },
        {
          "args": [
            "'Failed to stage changes.'"
          ],
          "kwargs": {},
          "line_number": 162
        },
        {
          "args": [
            "'Failed to commit changes.'"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 295
        },
        {
          "args": [
            "'\\nPull operation cancelled.'"
          ],
          "kwargs": {},
          "line_number": 307
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 300
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 304
        }
      ],
      "branch_output.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 49
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 143
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 245
        }
      ],
      "check_for_changes": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 84
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 147
        }
      ],
      "subprocess.run": [
        {
          "args": [
            "command"
          ],
          "kwargs": {
            "stdout": "<value>",
            "stderr": "<value>",
            "text": "<value>",
            "check": "<value>",
            "shell": "<value>"
          },
          "line_number": 11
        }
      ],
      "output.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 33
        }
      ],
      "isdigit": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 103
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 210
        }
      ],
      "int": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 103
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 210
        }
      ],
      "file_path.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 260
        }
      ],
      "diff_check.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 271
        }
      ],
      "local_changes.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 290
        }
      ],
      "len": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 335
        },
        {
          "args": [
            "modified_files"
          ],
          "kwargs": {},
          "line_number": 282
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 345
        }
      ],
      "pull_specific_files": [
        {
          "args": [
            "specific_files"
          ],
          "kwargs": {},
          "line_number": 358
        }
      ],
      "input": [
        {
          "args": [
            "\"Type 'reset' to confirm hard reset: \""
          ],
          "kwargs": {},
          "line_number": 58
        },
        {
          "args": [
            "'Would you like to commit these changes first? (y/n): '"
          ],
          "kwargs": {},
          "line_number": 151
        },
        {
          "args": [
            "'Enter commit message (or press Enter for default message): '"
          ],
          "kwargs": {},
          "line_number": 153
        },
        {
          "args": [
            "'  What would you like to do? [s]kip, [o]verwrite local changes, [m]erge: '"
          ],
          "kwargs": {},
          "line_number": 293
        }
      ],
      "behind_check.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 103
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 188
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 103
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 188
        }
      ],
      "ahead_check.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 210
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 210
        }
      ],
      "modified_files.append": [
        {
          "args": [
            "file_path"
          ],
          "kwargs": {},
          "line_number": 272
        }
      ],
      "sync_changes": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 361
        }
      ],
      "pull_updates": [
        {
          "args": [],
          "kwargs": {
            "force": "<value>",
            "hard_reset": "<value>"
          },
          "line_number": 364
        }
      ],
      "confirm.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        }
      ],
      "should_commit.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 152
        }
      ],
      "strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 155
        }
      ],
      "choice.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 294
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 297
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 303
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 155
        }
      ],
      "specific_files.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 346
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 352
        }
      ],
      "startswith": [
        {
          "args": [
            "'-'"
          ],
          "kwargs": {},
          "line_number": 351
        },
        {
          "args": [
            "'-'"
          ],
          "kwargs": {},
          "line_number": 345
        }
      ]
    }
  },
  "git/git_push.py": {
    "functions": {
      "run_command": {
        "params": [
          "command",
          "verbose"
        ],
        "defaults": {
          "verbose": true
        },
        "docstring": "Run a shell command and return the output.",
        "line_number": 8,
        "end_line": 25
      },
      "git_status": {
        "params": [],
        "defaults": {},
        "docstring": "Check git status and return modified files.",
        "line_number": 27,
        "end_line": 39
      },
      "check_if_behind_remote": {
        "params": [],
        "defaults": {},
        "docstring": "Check if local branch is behind the remote branch.",
        "line_number": 41,
        "end_line": 65
      },
      "check_incoming_changes": {
        "params": [],
        "defaults": {},
        "docstring": "Check which files have incoming changes from remote.",
        "line_number": 67,
        "end_line": 88
      },
      "selective_pull": {
        "params": [
          "files_to_pull"
        ],
        "defaults": {},
        "docstring": "Pull changes only for specified files.",
        "line_number": 90,
        "end_line": 109
      },
      "pull_changes": {
        "params": [
          "current_branch",
          "strategy"
        ],
        "defaults": {
          "strategy": "merge"
        },
        "docstring": "Pull changes with a specific reconciliation strategy.\n\nArgs:\n    current_branch: The current branch name\n    strategy: One of \"merge\", \"rebase\", or \"ff-only\"\n\nReturns:\n    (success, error_message)",
        "line_number": 111,
        "end_line": 137
      },
      "push_updates": {
        "params": [
          "commit_message",
          "auto_pull",
          "force_push",
          "selective_files",
          "pull_strategy"
        ],
        "defaults": {
          "commit_message": null,
          "auto_pull": true,
          "force_push": false,
          "selective_files": null,
          "pull_strategy": "merge"
        },
        "docstring": "Push updates to the git repository.",
        "line_number": 139,
        "end_line": 294
      }
    },
    "calls": {
      "run_command": [
        {
          "args": [
            "'git status --porcelain'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 29
        },
        {
          "args": [
            "'git branch --show-current'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 44
        },
        {
          "args": [
            "'git fetch origin'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 52
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 58
        },
        {
          "args": [
            "'git branch --show-current'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 70
        },
        {
          "args": [
            "'git fetch origin'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 77
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 82
        },
        {
          "args": [
            "'git branch --show-current'"
          ],
          "kwargs": {
            "verbose": "<value>"
          },
          "line_number": 92
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 129
        },
        {
          "args": [
            "'git add .'"
          ],
          "kwargs": {},
          "line_number": 168
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 175
        },
        {
          "args": [
            "push_command"
          ],
          "kwargs": {},
          "line_number": 285
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 102
        },
        {
          "args": [
            "'git add .'"
          ],
          "kwargs": {},
          "line_number": 206
        }
      ],
      "output.splitlines": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 34
        }
      ],
      "branch_output.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 49
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 74
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 97
        }
      ],
      "int": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 64
        }
      ],
      "print": [
        {
          "args": [
            "'Checking Git status...'"
          ],
          "kwargs": {},
          "line_number": 141
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 149
        },
        {
          "args": [
            "'\\nStaging changes...'"
          ],
          "kwargs": {},
          "line_number": 167
        },
        {
          "args": [
            "'\\nCommitting changes...'"
          ],
          "kwargs": {},
          "line_number": 174
        },
        {
          "args": [
            "'\\nPushing to remote repository...'"
          ],
          "kwargs": {},
          "line_number": 279
        },
        {
          "args": [
            "'\\n\u2705 Successfully pushed changes to the remote repository!'"
          ],
          "kwargs": {},
          "line_number": 293
        },
        {
          "args": [
            "'Failed to determine current branch.'"
          ],
          "kwargs": {},
          "line_number": 46
        },
        {
          "args": [
            "'Failed to fetch from remote repository.'"
          ],
          "kwargs": {},
          "line_number": 54
        },
        {
          "args": [
            "'Failed to determine current branch.'"
          ],
          "kwargs": {},
          "line_number": 94
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 101
        },
        {
          "args": [
            "'No changes to commit.'"
          ],
          "kwargs": {},
          "line_number": 145
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 159
        },
        {
          "args": [
            "'Failed to stage changes.'"
          ],
          "kwargs": {},
          "line_number": 170
        },
        {
          "args": [
            "'Failed to commit changes.'"
          ],
          "kwargs": {},
          "line_number": 177
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f Your local branch is behind the remote branch.'"
          ],
          "kwargs": {},
          "line_number": 183
        },
        {
          "args": [
            "'\\nFiles with incoming changes from remote:'"
          ],
          "kwargs": {},
          "line_number": 187
        },
        {
          "args": [
            "'\u26a0\ufe0f Using force push! This will overwrite remote changes.'"
          ],
          "kwargs": {},
          "line_number": 282
        },
        {
          "args": [
            "'Failed to push changes to remote repository.'"
          ],
          "kwargs": {},
          "line_number": 287
        },
        {
          "args": [
            "'\\nPossible solutions:'"
          ],
          "kwargs": {},
          "line_number": 288
        },
        {
          "args": [
            "'  1. Run git pull to get latest changes, resolve any conflicts, then push'"
          ],
          "kwargs": {},
          "line_number": 289
        },
        {
          "args": [
            "'  2. Run this script with --force-push (use with caution)'"
          ],
          "kwargs": {},
          "line_number": 290
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 20
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 23
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 24
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 104
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 107
        },
        {
          "args": [
            "'  None found (this is unusual, might be a structural change)'"
          ],
          "kwargs": {},
          "line_number": 217
        },
        {
          "args": [
            "'\\nAttempting to pull changes before pushing...'"
          ],
          "kwargs": {},
          "line_number": 220
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 221
        },
        {
          "args": [
            "'\u2705 Successfully pulled remote changes.'"
          ],
          "kwargs": {},
          "line_number": 276
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 190
        },
        {
          "args": [
            "'\\nNotice: Critical files have incoming changes:'"
          ],
          "kwargs": {},
          "line_number": 195
        },
        {
          "args": [
            "'\\n\u274c Pull failed.'"
          ],
          "kwargs": {},
          "line_number": 227
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 197
        },
        {
          "args": [
            "'The issue is that your local and remote branches have diverged.'"
          ],
          "kwargs": {},
          "line_number": 231
        },
        {
          "args": [
            "'You need to choose how to reconcile the branches:'"
          ],
          "kwargs": {},
          "line_number": 232
        },
        {
          "args": [
            "'Options:'"
          ],
          "kwargs": {},
          "line_number": 233
        },
        {
          "args": [
            "\"  1. Merge remote changes (recommended if you're unsure):\""
          ],
          "kwargs": {},
          "line_number": 234
        },
        {
          "args": [
            "'     python git_push.py --strategy merge'"
          ],
          "kwargs": {},
          "line_number": 235
        },
        {
          "args": [
            "'  2. Rebase your changes on top of remote changes:'"
          ],
          "kwargs": {},
          "line_number": 236
        },
        {
          "args": [
            "'     python git_push.py --strategy rebase'"
          ],
          "kwargs": {},
          "line_number": 237
        },
        {
          "args": [
            "'  3. Force push your changes (overwrites remote changes):'"
          ],
          "kwargs": {},
          "line_number": 238
        },
        {
          "args": [
            "'     python git_push.py --force-push'"
          ],
          "kwargs": {},
          "line_number": 239
        },
        {
          "args": [
            "'  4. Fetch and merge specific files:'"
          ],
          "kwargs": {},
          "line_number": 240
        },
        {
          "args": [
            "'     python git_pull.py --files <file1> <file2>'"
          ],
          "kwargs": {},
          "line_number": 241
        },
        {
          "args": [
            "'     Then: python git_push.py'"
          ],
          "kwargs": {},
          "line_number": 242
        },
        {
          "args": [
            "'Options:'"
          ],
          "kwargs": {},
          "line_number": 271
        },
        {
          "args": [
            "'  1. Resolve conflicts manually with: git pull'"
          ],
          "kwargs": {},
          "line_number": 272
        },
        {
          "args": [
            "'  2. Force push with: python git_push.py --force-push (overwrites remote changes)'"
          ],
          "kwargs": {},
          "line_number": 273
        },
        {
          "args": [
            "'\\nOperation cancelled.'"
          ],
          "kwargs": {},
          "line_number": 214
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 316
        },
        {
          "args": [
            "'\\n\u2705 Successfully updated critical files.'"
          ],
          "kwargs": {},
          "line_number": 204
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f Proceeding with force push.'"
          ],
          "kwargs": {},
          "line_number": 209
        },
        {
          "args": [
            "'\\nOperation cancelled.'"
          ],
          "kwargs": {},
          "line_number": 211
        },
        {
          "args": [
            "'\\nTrying merge strategy...'"
          ],
          "kwargs": {},
          "line_number": 248
        },
        {
          "args": [
            "'\\n\u274c Still unable to reconcile branches. Try resolving conflicts manually.'"
          ],
          "kwargs": {},
          "line_number": 265
        },
        {
          "args": [
            "'\\nOperation cancelled.'"
          ],
          "kwargs": {},
          "line_number": 268
        },
        {
          "args": [
            "'\\nTrying rebase strategy...'"
          ],
          "kwargs": {},
          "line_number": 251
        },
        {
          "args": [
            "'\\n\u26a0\ufe0f Proceeding with force push.'"
          ],
          "kwargs": {},
          "line_number": 255
        },
        {
          "args": [
            "'\\nExiting. Run one of the suggested commands to proceed.'"
          ],
          "kwargs": {},
          "line_number": 258
        },
        {
          "args": [
            "'\\nInvalid choice. Exiting.'"
          ],
          "kwargs": {},
          "line_number": 261
        }
      ],
      "git_status": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 142
        }
      ],
      "check_if_behind_remote": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 181
        }
      ],
      "push_updates": [
        {
          "args": [
            "commit_message",
            "auto_pull",
            "force_push",
            "selective_files",
            "pull_strategy"
          ],
          "kwargs": {},
          "line_number": 330
        }
      ],
      "subprocess.run": [
        {
          "args": [
            "command"
          ],
          "kwargs": {
            "stdout": "<value>",
            "stderr": "<value>",
            "text": "<value>",
            "check": "<value>",
            "shell": "<value>"
          },
          "line_number": 11
        }
      ],
      "behind_check.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 64
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 61
        }
      ],
      "get": [
        {
          "args": [
            "status",
            "'Changed:'"
          ],
          "kwargs": {},
          "line_number": 151
        }
      ],
      "strftime": [
        {
          "args": [
            "'%Y-%m-%d %H:%M:%S'"
          ],
          "kwargs": {},
          "line_number": 163
        }
      ],
      "check_incoming_changes": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 186
        }
      ],
      "len": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 306
        },
        {
          "args": [
            "modified_files"
          ],
          "kwargs": {},
          "line_number": 149
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 311
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 318
        }
      ],
      "modified_files.append": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 37
        }
      ],
      "isdigit": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 61
        }
      ],
      "diff_output.splitlines": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 88
        }
      ],
      "file.strip": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 88
        }
      ],
      "pull_changes": [
        {
          "args": [
            "current_branch"
          ],
          "kwargs": {
            "strategy": "<value>"
          },
          "line_number": 224
        },
        {
          "args": [
            "current_branch",
            "'merge'"
          ],
          "kwargs": {},
          "line_number": 249
        },
        {
          "args": [
            "current_branch",
            "'rebase'"
          ],
          "kwargs": {},
          "line_number": 252
        }
      ],
      "datetime.now": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 163
        }
      ],
      "input": [
        {
          "args": [
            "'\\nDo you want to: [1] Update these files, [2] Force push, [3] Cancel? '"
          ],
          "kwargs": {},
          "line_number": 200
        },
        {
          "args": [
            "'\\nChoose an option [1-4]: '"
          ],
          "kwargs": {},
          "line_number": 246
        }
      ],
      "f.endswith": [
        {
          "args": [
            "'main.py'"
          ],
          "kwargs": {},
          "line_number": 193
        }
      ],
      "selective_pull": [
        {
          "args": [
            "critical_files"
          ],
          "kwargs": {},
          "line_number": 203
        }
      ],
      "choice.lower": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 257
        }
      ]
    }
  },
  "git/deploy_streamlit.py": {
    "functions": {
      "run_command": {
        "params": [
          "command",
          "capture_output"
        ],
        "defaults": {
          "capture_output": false
        },
        "docstring": "Run a shell command and optionally return the output.",
        "line_number": 13,
        "end_line": 28
      },
      "find_venv": {
        "params": [],
        "defaults": {},
        "docstring": "Find a virtual environment in the project directory.",
        "line_number": 30,
        "end_line": 49
      },
      "check_dependencies": {
        "params": [],
        "defaults": {},
        "docstring": "Ensure all dependencies are installed.",
        "line_number": 51,
        "end_line": 62
      },
      "deploy_streamlit": {
        "params": [
          "port",
          "share",
          "server_headless"
        ],
        "defaults": {
          "port": 8501,
          "share": false,
          "server_headless": true
        },
        "docstring": "Deploy the Streamlit application.",
        "line_number": 64,
        "end_line": 85
      },
      "main": {
        "params": [],
        "defaults": {},
        "docstring": null,
        "line_number": 87,
        "end_line": 132
      }
    },
    "calls": {
      "print": [
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 15
        },
        {
          "args": [
            "'\\nDeploying NHL Playoff Predictor Streamlit app...'"
          ],
          "kwargs": {},
          "line_number": 127
        },
        {
          "args": [
            "'\u2713 Streamlit is already installed'"
          ],
          "kwargs": {},
          "line_number": 55
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 67
        },
        {
          "args": [
            "'Make sure the path to your main.py file is correct.'"
          ],
          "kwargs": {},
          "line_number": 68
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 99
        },
        {
          "args": [
            "'No virtual environment found. Using system Python.'"
          ],
          "kwargs": {},
          "line_number": 117
        },
        {
          "args": [
            "'Dependency check complete. Not deploying (--check-only specified).'"
          ],
          "kwargs": {},
          "line_number": 123
        },
        {
          "args": [
            "'Installing Streamlit and dependencies...'"
          ],
          "kwargs": {},
          "line_number": 57
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 106
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 107
        },
        {
          "args": [
            "'Then run this script again.\\n'"
          ],
          "kwargs": {},
          "line_number": 108
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 111
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 112
        },
        {
          "args": [
            "'Then run this script again.\\n'"
          ],
          "kwargs": {},
          "line_number": 113
        }
      ],
      "run_command": [
        {
          "args": [
            "command"
          ],
          "kwargs": {},
          "line_number": 84
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 60
        },
        {
          "args": [
            "'pip install streamlit'"
          ],
          "kwargs": {},
          "line_number": 62
        }
      ],
      "argparse.ArgumentParser": [
        {
          "args": [],
          "kwargs": {
            "description": "<value>"
          },
          "line_number": 89
        }
      ],
      "parser.add_argument": [
        {
          "args": [
            "'--port'"
          ],
          "kwargs": {
            "type": "<value>",
            "default": "<value>",
            "help": "<value>"
          },
          "line_number": 90
        },
        {
          "args": [
            "'--share'"
          ],
          "kwargs": {
            "action": "<value>",
            "help": "<value>"
          },
          "line_number": 91
        },
        {
          "args": [
            "'--no-headless'"
          ],
          "kwargs": {
            "action": "<value>",
            "help": "<value>"
          },
          "line_number": 92
        },
        {
          "args": [
            "'--check-only'"
          ],
          "kwargs": {
            "action": "<value>",
            "help": "<value>"
          },
          "line_number": 93
        }
      ],
      "parser.parse_args": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 94
        }
      ],
      "find_venv": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 97
        }
      ],
      "check_dependencies": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 120
        }
      ],
      "deploy_streamlit": [
        {
          "args": [],
          "kwargs": {
            "port": "<value>",
            "share": "<value>",
            "server_headless": "<value>"
          },
          "line_number": 128
        }
      ],
      "main": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 135
        }
      ],
      "Path": [
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 11
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 32
        },
        {
          "args": [
            "<complex-arg>"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "__file__"
          ],
          "kwargs": {},
          "line_number": 10
        }
      ],
      "subprocess.run": [
        {
          "args": [
            "command"
          ],
          "kwargs": {
            "shell": "<value>",
            "stdout": "<value>",
            "stderr": "<value>",
            "text": "<value>"
          },
          "line_number": 18
        },
        {
          "args": [
            "command"
          ],
          "kwargs": {
            "shell": "<value>"
          },
          "line_number": 28
        }
      ],
      "STREAMLIT_APP_PATH.exists": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 66
        }
      ],
      "get": [
        {
          "args": [
            "'VIRTUAL_ENV'",
            "''"
          ],
          "kwargs": {},
          "line_number": 39
        },
        {
          "args": [
            "'VIRTUAL_ENV'"
          ],
          "kwargs": {},
          "line_number": 103
        }
      ],
      "venv_path.exists": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 43
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "exists": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 43
        },
        {
          "args": [],
          "kwargs": {},
          "line_number": 46
        }
      ],
      "REQUIREMENTS_FILE.exists": [
        {
          "args": [],
          "kwargs": {},
          "line_number": 59
        }
      ],
      "sys.exit": [
        {
          "args": [
            "1"
          ],
          "kwargs": {},
          "line_number": 115
        }
      ]
    }
  }
}